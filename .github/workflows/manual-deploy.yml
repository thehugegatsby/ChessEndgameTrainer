name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview
      run_tests:
        description: 'Run tests before deployment'
        required: false
        default: true
        type: boolean
      git_ref:
        description: 'Git ref to deploy (branch, tag, or commit SHA)'
        required: false
        default: 'main'
        type: string

jobs:
  # Optional CI run based on input
  ci:
    name: CI Tests & Build
    if: inputs.run_tests
    uses: ./.github/workflows/_ci-reusable.yml
    with:
      node-version: '20'
      pnpm-version: '10'
      run-e2e: ${{ inputs.environment == 'production' }}
      upload-build: true
    secrets: inherit

  # Manual deployment job
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: ci
    if: always() && (needs.ci.result == 'success' || needs.ci.result == 'skipped')
    environment: ${{ inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_ref }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      # If tests were skipped, build the application
      - name: Install and build (if tests skipped)
        if: ${{ !inputs.run_tests }}
        run: |
          pnpm install --frozen-lockfile
          pnpm run build
        env:
          NEXT_PUBLIC_STOCKFISH_PATH: /stockfish/

      # If tests were run, download the build artifacts
      - name: Download build artifacts
        if: inputs.run_tests
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: .

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          if [ "${{ inputs.environment }}" = "production" ]; then
            vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy to Vercel
        run: |
          if [ "${{ inputs.environment }}" = "production" ]; then
            if [ "${{ inputs.run_tests }}" = "true" ]; then
              # Deploy prebuilt artifacts to production
              vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
            else
              # Build and deploy to production
              vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
            fi
          else
            if [ "${{ inputs.run_tests }}" = "true" ]; then
              # Deploy prebuilt artifacts to preview
              vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
            else
              # Build and deploy to preview
              vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
            fi
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Comment deployment URL
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "## Manual Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Ref**: ${{ inputs.git_ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests Run**: ${{ inputs.run_tests }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment**: âœ… Successful" >> $GITHUB_STEP_SUMMARY