name: CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual deployment

env:
  NODE_VERSION: '20'

jobs:
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests before deployment
      run: npm test -- --passWithNoTests

    - name: Build application
      run: npm run build
      env:
        # Add any production environment variables here
        NEXT_PUBLIC_STOCKFISH_PATH: /stockfish/

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        github-token: ${{ secrets.GITHUB_TOKEN }}

  post-deployment-tests:
    name: Post-Deployment Tests
    runs-on: ubuntu-latest
    needs: [deploy-vercel]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run smoke tests
      run: |
        # Add smoke test commands here
        echo "Running smoke tests against production..."
        # Example: npm run test:smoke -- --url=${{ secrets.PRODUCTION_URL }}

    - name: Check deployment health
      run: |
        DEPLOY_URL="${{ secrets.PRODUCTION_URL }}"
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" $DEPLOY_URL)
        
        if [ $HTTP_CODE -eq 200 ]; then
          echo "✅ Deployment is healthy (HTTP $HTTP_CODE)"
        else
          echo "❌ Deployment health check failed (HTTP $HTTP_CODE)"
          exit 1
        fi

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [deploy-vercel]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Full history for changelog

    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog from commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          COMMITS=$(git log --oneline --no-merges -10)
        else
          COMMITS=$(git log ${LAST_TAG}..HEAD --oneline --no-merges)
        fi
        
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## What's Changed" >> $GITHUB_OUTPUT
        echo "$COMMITS" | sed 's/^/- /' >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ---
          **Full Changelog**: https://github.com/${{ github.repository }}/commits/main
        draft: false
        prerelease: false