name: Reusable CI Workflow

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '20'
      pnpm-version:
        description: 'pnpm version to use'
        required: false
        type: string
        default: '10'
      run-e2e:
        description: 'Whether to run E2E tests'
        required: false
        type: boolean
        default: false
      upload-build:
        description: 'Whether to upload build artifacts'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: ${{ inputs.node-version }}
  PNPM_VERSION: ${{ inputs.pnpm-version }}

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint
      - run: pnpm tsc

  test:
    name: Test (${{ matrix.project }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chess-core, tablebase, training]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm exec vitest run --project ${{ matrix.project }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
        env:
          NEXT_PUBLIC_STOCKFISH_PATH: /stockfish/
      - name: Upload build artifacts
        if: inputs.upload-build
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: |
            .next
            public
            package.json
            pnpm-lock.yaml
          retention-days: 1

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    if: inputs.run-e2e
    needs: [test, build]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm exec playwright install --with-deps
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: .
      - run: pnpm run test:e2e