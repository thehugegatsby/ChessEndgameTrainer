name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run linter
        id: lint
        continue-on-error: true
        run: pnpm run lint

      - name: Run TypeScript check
        id: type-check
        continue-on-error: true
        run: pnpm run type-check

      - name: Run unit tests
        id: test
        continue-on-error: true
        run: pnpm test
        env:
          CI: true

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('pnpm-lock.yaml', 'next.config.*', 'tsconfig.*') }}
          restore-keys: |
            ${{ runner.os }}-next-

      - name: Build check
        id: build
        continue-on-error: true
        run: pnpm run build
        env:
          NEXT_PUBLIC_STOCKFISH_PATH: /stockfish/

      - name: Report overall status
        if: always()
        run: |
          fails=()
          [ "${{ steps.lint.outcome }}" = "failure" ] && fails+=("lint")
          [ "${{ steps.type-check.outcome }}" = "failure" ] && fails+=("type-check")
          [ "${{ steps.test.outcome }}" = "failure" ] && fails+=("unit-tests")
          [ "${{ steps.build.outcome }}" = "failure" ] && fails+=("build")
          if [ ${#fails[@]} -gt 0 ]; then
            echo "❌ Failed checks: ${fails[*]}"
            exit 1
          else
            echo "✅ All quality checks passed!"
          fi

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    if: always()
    needs: code-quality
    timeout-minutes: 20
    env:
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: pnpm exec playwright install chromium

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('pnpm-lock.yaml', 'next.config.*', 'tsconfig.*') }}
          restore-keys: |
            ${{ runner.os }}-next-

      - name: Build Next.js application
        run: pnpm run build
        env:
          NEXT_PUBLIC_STOCKFISH_PATH: /stockfish/

      - name: Start production server
        run: |
          echo "Starting Next.js production server..."
          pnpm start &
          echo $! > server.pid

      - name: Wait for server to be ready
        run: |
          echo "Waiting for server at http://localhost:3000..."
          timeout 60 bash -c 'until curl -s -f http://localhost:3000 > /dev/null; do sleep 2; done'
          echo "✅ Server is ready"

      - name: Run Playwright E2E tests
        run: pnpm run test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi

      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
          if-no-files-found: ignore