name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  check-outdated:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Check for outdated packages
      run: |
        echo "## Dependency Status Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for outdated packages
        OUTDATED=$(npm outdated --json || echo "{}")
        
        if [ "$OUTDATED" != "{}" ]; then
          echo "### Outdated Packages Found:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo "$OUTDATED" | jq '.' >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "âœ… All dependencies are up to date!" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Security audit
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Security Audit:" >> $GITHUB_STEP_SUMMARY
        npm audit --production >> $GITHUB_STEP_SUMMARY 2>&1 || true

  update-dependencies:
    name: Create Dependency Update PR
    runs-on: ubuntu-latest
    needs: check-outdated
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Update dependencies
      id: update
      run: |
        # Create a new branch
        BRANCH_NAME="deps/update-$(date +%Y%m%d)"
        git checkout -b $BRANCH_NAME
        
        # Update dependencies (patch and minor only for safety)
        npm update
        
        # Check if there are changes
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Run tests
      if: steps.update.outputs.has_changes == 'true'
      run: npm test

    - name: Commit and push changes
      if: steps.update.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "chore(deps): update dependencies"
        git push origin ${{ steps.update.outputs.branch_name }}

    - name: Create Pull Request
      if: steps.update.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.update.outputs.branch_name }}
        title: 'chore(deps): Automated dependency updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated dependency updates for patch and minor versions.
          
          ### What's included:
          - Updated npm dependencies to their latest compatible versions
          - All tests have been run and passed
          
          ### Review checklist:
          - [ ] Review the changes in package-lock.json
          - [ ] Check for any breaking changes in the updated packages
          - [ ] Verify that the application still works as expected
          
          ---
          *This PR was automatically created by the dependency update workflow.*
        labels: |
          dependencies
          automated