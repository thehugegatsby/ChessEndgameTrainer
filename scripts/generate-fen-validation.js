const fs = require("fs");
const path = require("path");

// FEN data from TestFixtures.ts for validation
const TEST_FENS = {
  STARTING_POSITION: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
  KQK_TABLEBASE_WIN: "8/8/8/8/3K4/8/7Q/4k3 w - - 0 1",
  KRK_TABLEBASE_DRAW: "8/8/8/8/8/7R/4K1k1/8 b - - 40 80",
  KPK_WINNING: "8/8/8/8/8/4K3/4P3/4k3 w - - 0 1",
  KPK_DRAWING: "8/8/8/8/8/4k3/4P3/7K w - - 0 1",
  ROOK_ENDGAME: "8/8/1K6/8/8/8/2k5/4R3 w - - 0 1",
  QUEEN_ENDGAME: "8/8/8/8/5K2/2q5/8/4k3 w - - 0 1",
  EQUAL_POSITION: "8/8/3k4/6r1/8/8/1KR5/8 w - - 0 1",
  WHITE_ADVANTAGE: "rnbqkbnr/ppppp2p/6P1/8/8/8/PPPP1PPP/RNBQKBNR b KQkq - 0 3",
  BLACK_ADVANTAGE:
    "rnbqkbnr/ppp2ppp/8/4p3/4p2P/7N/PPPP1PP1/RNBQKB1R b KQkq - 1 4",
  INVALID_FEN: "invalid fen string",
  EMPTY_FEN: "",
  MALFORMED_FEN: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR X KQkq - 0 1",
};

// Collect FENs to validate (exclude intentionally invalid ones - none in this list)
const fensToValidate = {
  ...TEST_FENS,
};

// Remove intentionally invalid FENs
delete fensToValidate.INVALID_FEN;
delete fensToValidate.EMPTY_FEN;
delete fensToValidate.MALFORMED_FEN;

// Generate HTML content
let boardHtml = "";
let scriptHtml = "";
let i = 0;

for (const [name, fen] of Object.entries(fensToValidate)) {
  const boardId = `board${i++}`;
  boardHtml += `
    <div class="position">
      <h2>${name}</h2>
      <p><strong>FEN:</strong> <code>${fen}</code></p>
      <div id="${boardId}" style="width: 400px; margin: 20px 0;"></div>
    </div>
    <hr/>
  `;
  scriptHtml += `Chessboard('${boardId}', '${fen}');\n`;
}

// Assemble the final HTML file
const finalHtml = `
<!DOCTYPE html>
<html>
<head>
  <title>FEN Position Validation - Chess Endgame Trainer</title>
  <link rel="stylesheet" href="https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css">
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js"></script>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      padding: 20px; 
      max-width: 800px; 
      margin: 0 auto; 
    }
    .position { 
      margin-bottom: 30px; 
    }
    code { 
      background-color: #f4f4f4; 
      padding: 4px 8px; 
      border-radius: 4px; 
      font-family: 'Courier New', monospace;
      word-break: break-all;
    }
    h1 { 
      color: #333; 
      text-align: center; 
    }
    h2 { 
      color: #666; 
      margin-top: 0;
    }
    hr { 
      border: none; 
      border-top: 1px solid #eee; 
      margin: 40px 0; 
    }
  </style>
</head>
<body>
  <h1>Chess Position Validation</h1>
  <p><strong>Zweck:</strong> Alle FEN-Positionen aus TestFixtures.ts visuell √ºberpr√ºfen</p>
  <p><strong>Anzahl Positionen:</strong> ${Object.keys(fensToValidate).length}</p>
  
  ${boardHtml}
  
  <script>
    // Initialize all chessboards
    $(document).ready(function() {
      ${scriptHtml}
    });
  </script>
  
  <footer style="margin-top: 50px; text-align: center; color: #999;">
    <p>Generated by Chess Endgame Trainer - FEN Validation Script</p>
  </footer>
</body>
</html>
`;

// Write to file
const outputPath = path.join(__dirname, "..", "fen-validation.html");
fs.writeFileSync(outputPath, finalHtml);

console.log("‚úÖ FEN Validation HTML generated successfully!");
console.log(`üìÑ File: ${outputPath}`);
console.log(`üîç Positions to validate: ${Object.keys(fensToValidate).length}`);
console.log(
  "\n√ñffne fen-validation.html in deinem Browser zur visuellen √úberpr√ºfung.",
);
