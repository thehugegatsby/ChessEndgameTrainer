{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/platform/web/WebPlatformService.ts"],"sourcesContent":["/**\n * Web implementation of platform services\n * Provides browser-specific implementations of platform abstractions\n */\n\nimport {\n  IPlatformService,\n  IPlatformStorage,\n  IPlatformNotification,\n  IPlatformDevice,\n  IPlatformPerformance,\n  IPlatformClipboard,\n  IPlatformShare,\n  IPlatformAnalytics,\n  Platform,\n  DeviceInfo,\n  MemoryInfo,\n  NetworkStatus,\n  NotificationOptions,\n  ScheduledNotification,\n  PerformanceMetrics,\n  ShareOptions,\n} from \"../types\";\nimport { STORAGE, SYSTEM } from \"@shared/constants\";\n// Using console directly to avoid circular dependency with Logger\n\n// Storage key validation regex\nconst VALID_KEY_REGEX = /^[a-zA-Z0-9-_]+$/;\n\n// Browser APIs interface for dependency injection\nexport interface BrowserAPIs {\n  localStorage: Storage;\n  sessionStorage?: Storage;\n  navigator: Navigator;\n  window?: Window;\n  document?: Document;\n  performance?: Performance;\n}\n\n// Default implementation using real browser APIs\nconst getLiveBrowserAPIs = (): BrowserAPIs => ({\n  localStorage:\n    typeof window !== \"undefined\" ? window.localStorage : ({} as Storage),\n  sessionStorage:\n    typeof window !== \"undefined\" ? window.sessionStorage : ({} as Storage),\n  navigator: typeof navigator !== \"undefined\" ? navigator : ({} as Navigator),\n  window: typeof window !== \"undefined\" ? window : ({} as Window),\n  document: typeof document !== \"undefined\" ? document : ({} as Document),\n  performance:\n    typeof performance !== \"undefined\" ? performance : ({} as Performance),\n});\n\n// Web Storage Implementation with dependency injection\nclass WebStorage implements IPlatformStorage {\n  private prefix = STORAGE.PREFIX;\n  private storage: Storage;\n\n  constructor(\n    storage: Storage = typeof localStorage !== \"undefined\"\n      ? localStorage\n      : ({} as Storage),\n  ) {\n    this.storage = storage;\n  }\n\n  async save(key: string, data: any): Promise<void> {\n    // Validate key format\n    if (!VALID_KEY_REGEX.test(key)) {\n      throw new Error(\n        `Invalid storage key: ${key}. Only alphanumeric characters, hyphens, and underscores are allowed.`,\n      );\n    }\n\n    try {\n      const serialized = JSON.stringify(data);\n      this.storage.setItem(this.prefix + key, serialized);\n    } catch (error) {\n      // Preserve original error context for debugging\n      throw new Error(\n        `Failed to save data for key '${key}': ${(error as Error).message}`,\n      );\n    }\n  }\n\n  async load<T = any>(key: string): Promise<T | null> {\n    // Validate key format\n    if (!VALID_KEY_REGEX.test(key)) {\n      console.error(\n        `[WebPlatformService] Invalid storage key requested: ${key}`,\n      );\n      return null;\n    }\n\n    try {\n      const item = this.storage.getItem(this.prefix + key);\n      if (!item) return null;\n\n      // Parse JSON with error handling\n      const data = JSON.parse(item);\n      return data as T;\n    } catch (error) {\n      console.error(\n        `[WebPlatformService] Failed to parse stored data for key '${key}':`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    // Validate key format\n    if (!VALID_KEY_REGEX.test(key)) {\n      console.error(\n        `[WebPlatformService] Invalid storage key for removal: ${key}`,\n      );\n      return;\n    }\n\n    this.storage.removeItem(this.prefix + key);\n  }\n\n  async clear(): Promise<void> {\n    const keys = await this.getAllKeys();\n    keys.forEach((key) => this.storage.removeItem(this.prefix + key));\n  }\n\n  async getAllKeys(): Promise<string[]> {\n    const keys: string[] = [];\n    for (let i = 0; i < this.storage.length; i++) {\n      const key = this.storage.key(i);\n      if (key?.startsWith(this.prefix)) {\n        keys.push(key.replace(this.prefix, \"\"));\n      }\n    }\n    return keys;\n  }\n}\n\n// Web Notification Implementation\nclass WebNotification implements IPlatformNotification {\n  async requestPermission(): Promise<boolean> {\n    if (!(\"Notification\" in window)) {\n      return false;\n    }\n\n    const result = await Notification.requestPermission();\n    return result === \"granted\";\n  }\n\n  async show(title: string, options?: NotificationOptions): Promise<void> {\n    if (!(\"Notification\" in window) || Notification.permission !== \"granted\") {\n      throw new Error(\"Notifications not supported or not permitted\");\n    }\n\n    new Notification(title, {\n      body: options?.body,\n      icon: options?.icon,\n      badge: options?.badge,\n      tag: options?.tag,\n      data: options?.data,\n    });\n  }\n\n  async schedule(_notification: ScheduledNotification): Promise<string> {\n    // Web doesn't support scheduled notifications natively\n    // Would need service worker implementation\n    throw new Error(\"Scheduled notifications not supported on web\");\n  }\n\n  async cancel(_id: string): Promise<void> {\n    // Not supported on web\n  }\n\n  async cancelAll(): Promise<void> {\n    // Not supported on web\n  }\n}\n\n// Web Device Implementation with dependency injection\nclass WebDevice implements IPlatformDevice {\n  private navigator: Navigator;\n  private window?: Window;\n\n  constructor(\n    navigator: Navigator = typeof window !== \"undefined\"\n      ? window.navigator\n      : ({} as Navigator),\n    windowObj?: Window,\n  ) {\n    this.navigator = navigator;\n    this.window =\n      windowObj || (typeof window !== \"undefined\" ? window : ({} as Window));\n  }\n\n  getPlatform(): Platform {\n    const userAgent = this.navigator.userAgent.toLowerCase();\n    if (userAgent.includes(\"android\")) return \"android\";\n    if (userAgent.includes(\"iphone\") || userAgent.includes(\"ipad\"))\n      return \"ios\";\n    if (userAgent.includes(\"win\")) return \"windows\";\n    if (userAgent.includes(\"mac\")) return \"macos\";\n    if (userAgent.includes(\"linux\")) return \"linux\";\n    return \"web\";\n  }\n\n  getDeviceInfo(): DeviceInfo {\n    return {\n      model: this.navigator.userAgent,\n      osVersion: this.navigator.userAgent,\n      screenSize: {\n        width: this.window?.screen?.width || 1920,\n        height: this.window?.screen?.height || 1080,\n      },\n      pixelRatio: this.window?.devicePixelRatio || 1,\n      isTablet: this.checkIsTablet(),\n    };\n  }\n\n  getMemoryInfo(): MemoryInfo {\n    const nav = this.navigator as any;\n    if (nav.deviceMemory) {\n      return {\n        totalMemory: nav.deviceMemory * SYSTEM.GB_TO_BYTES_FACTOR, // Convert GB to bytes\n      };\n    }\n    return {};\n  }\n\n  getNetworkStatus(): NetworkStatus {\n    const nav = this.navigator as any;\n    const connection =\n      nav.connection || nav.mozConnection || nav.webkitConnection;\n\n    return {\n      isOnline: this.navigator.onLine,\n      type: connection?.type,\n      effectiveType: connection?.effectiveType,\n      downlink: connection?.downlink,\n    };\n  }\n\n  isLowEndDevice(): boolean {\n    const nav = this.navigator as any;\n    // Consider device low-end if it has less than 4GB RAM or slow network\n    const memoryGB = nav.deviceMemory || SYSTEM.DEFAULT_MEMORY_GB;\n    const connection =\n      nav.connection || nav.mozConnection || nav.webkitConnection;\n    const slowConnection =\n      connection?.effectiveType === \"2g\" ||\n      connection?.effectiveType === \"slow-2g\";\n\n    return memoryGB < SYSTEM.LOW_MEMORY_THRESHOLD_GB || slowConnection || false;\n  }\n\n  private checkIsTablet(): boolean {\n    const userAgent = this.navigator.userAgent.toLowerCase();\n    const hasTouch = this.window && \"ontouchstart\" in this.window;\n    const screenSize = Math.min(\n      this.window?.screen?.width || 1920,\n      this.window?.screen?.height || 1080,\n    );\n\n    return (\n      !!hasTouch &&\n      screenSize >= 768 &&\n      (userAgent.includes(\"tablet\") || userAgent.includes(\"ipad\"))\n    );\n  }\n}\n\n// Web Performance Implementation\nclass WebPerformance implements IPlatformPerformance {\n  private measures: Record<string, number[]> = {};\n  private marks: Record<string, number> = {};\n\n  startMeasure(name: string): void {\n    this.marks[`${name}_start`] = performance.now();\n  }\n\n  endMeasure(name: string): number {\n    const startMark = `${name}_start`;\n    if (!this.marks[startMark]) {\n      throw new Error(`No start mark found for ${name}`);\n    }\n\n    const duration = performance.now() - this.marks[startMark];\n\n    if (!this.measures[name]) {\n      this.measures[name] = [];\n    }\n    this.measures[name].push(duration);\n\n    delete this.marks[startMark];\n    return duration;\n  }\n\n  mark(name: string): void {\n    this.marks[name] = performance.now();\n  }\n\n  measure(name: string, startMark: string, endMark: string): number {\n    if (!this.marks[startMark] || !this.marks[endMark]) {\n      throw new Error(\"Start or end mark not found\");\n    }\n\n    const duration = this.marks[endMark] - this.marks[startMark];\n\n    if (!this.measures[name]) {\n      this.measures[name] = [];\n    }\n    this.measures[name].push(duration);\n\n    return duration;\n  }\n\n  getMetrics(): PerformanceMetrics {\n    const averages: Record<string, number> = {};\n\n    Object.entries(this.measures).forEach(([name, values]) => {\n      if (values.length > 0) {\n        averages[name] = values.reduce((a, b) => a + b, 0) / values.length;\n      }\n    });\n\n    return {\n      measures: { ...this.measures },\n      marks: { ...this.marks },\n      averages,\n    };\n  }\n\n  clearMetrics(): void {\n    this.measures = {};\n    this.marks = {};\n  }\n}\n\n// Web Clipboard Implementation with dependency injection\nclass WebClipboard implements IPlatformClipboard {\n  private navigator: Navigator;\n  private document?: Document;\n\n  constructor(\n    navigator: Navigator = typeof window !== \"undefined\"\n      ? window.navigator\n      : ({} as Navigator),\n    document?: Document,\n  ) {\n    this.navigator = navigator;\n    this.document =\n      document ||\n      (typeof window !== \"undefined\" ? window.document : ({} as Document));\n  }\n\n  async copy(text: string): Promise<void> {\n    if (this.navigator.clipboard) {\n      await this.navigator.clipboard.writeText(text);\n    } else {\n      // Fallback for older browsers\n      const textArea = this.document!.createElement(\"textarea\");\n      textArea.value = text;\n      textArea.style.position = \"fixed\";\n      textArea.style.opacity = \"0\";\n      this.document!.body.appendChild(textArea);\n      textArea.select();\n      this.document!.execCommand(\"copy\");\n      this.document!.body.removeChild(textArea);\n    }\n  }\n\n  async paste(): Promise<string> {\n    if (this.navigator.clipboard) {\n      return await this.navigator.clipboard.readText();\n    }\n    throw new Error(\"Clipboard paste not supported\");\n  }\n\n  async hasContent(): Promise<boolean> {\n    // Web doesn't provide a way to check clipboard content without reading it\n    return false;\n  }\n}\n\n// Web Share Implementation with dependency injection\nclass WebShare implements IPlatformShare {\n  private navigator: Navigator;\n\n  constructor(\n    navigator: Navigator = typeof window !== \"undefined\"\n      ? window.navigator\n      : ({} as Navigator),\n  ) {\n    this.navigator = navigator;\n  }\n\n  canShare(): boolean {\n    return \"share\" in this.navigator;\n  }\n\n  async share(options: ShareOptions): Promise<void> {\n    if (!this.canShare()) {\n      throw new Error(\"Web Share API not supported\");\n    }\n\n    try {\n      await this.navigator.share({\n        title: options.title,\n        text: options.text,\n        url: options.url,\n      });\n    } catch (error) {\n      if ((error as Error).name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n}\n\n// Web Analytics Implementation (stub for now)\nclass WebAnalytics implements IPlatformAnalytics {\n  track(_event: string, _properties?: Record<string, any>): void {\n    // Implement actual analytics (Google Analytics, Mixpanel, etc.)\n  }\n\n  identify(_userId: string, _traits?: Record<string, any>): void {}\n\n  page(_name: string, _properties?: Record<string, any>): void {}\n\n  setUserProperties(_properties: Record<string, any>): void {}\n}\n\n// Main Web Platform Service with dependency injection\nexport class WebPlatformService implements IPlatformService {\n  storage: IPlatformStorage;\n  notifications: IPlatformNotification;\n  device: IPlatformDevice;\n  performance: IPlatformPerformance;\n  clipboard: IPlatformClipboard;\n  share: IPlatformShare;\n  analytics: IPlatformAnalytics;\n\n  private readonly apis: BrowserAPIs;\n\n  // Optional apis parameter for dependency injection (backward compatible)\n  constructor(apis: BrowserAPIs = getLiveBrowserAPIs()) {\n    this.apis = apis;\n\n    // Pass injected APIs to services that need them\n    this.storage = new WebStorage(this.apis.localStorage);\n    this.notifications = new WebNotification();\n    this.device = new WebDevice(this.apis.navigator, this.apis.window);\n    this.performance = new WebPerformance();\n    this.clipboard = new WebClipboard(this.apis.navigator, this.apis.document);\n    this.share = new WebShare(this.apis.navigator);\n    this.analytics = new WebAnalytics();\n  }\n}\n"],"names":["WebPlatformService","VALID_KEY_REGEX","getLiveBrowserAPIs","localStorage","window","sessionStorage","navigator","document","performance","WebStorage","save","key","data","test","Error","serialized","JSON","stringify","storage","setItem","prefix","error","message","load","console","item","getItem","parse","remove","removeItem","clear","keys","getAllKeys","forEach","i","length","startsWith","push","replace","STORAGE","PREFIX","WebNotification","requestPermission","result","Notification","show","title","options","permission","body","icon","badge","tag","schedule","_notification","cancel","_id","cancelAll","WebDevice","getPlatform","userAgent","toLowerCase","includes","getDeviceInfo","model","osVersion","screenSize","width","screen","height","pixelRatio","devicePixelRatio","isTablet","checkIsTablet","getMemoryInfo","nav","deviceMemory","totalMemory","SYSTEM","GB_TO_BYTES_FACTOR","getNetworkStatus","connection","mozConnection","webkitConnection","isOnline","onLine","type","effectiveType","downlink","isLowEndDevice","memoryGB","DEFAULT_MEMORY_GB","slowConnection","LOW_MEMORY_THRESHOLD_GB","hasTouch","Math","min","windowObj","WebPerformance","startMeasure","name","marks","now","endMeasure","startMark","duration","measures","mark","measure","endMark","getMetrics","averages","Object","entries","values","reduce","a","b","clearMetrics","WebClipboard","copy","text","clipboard","writeText","textArea","createElement","value","style","position","opacity","appendChild","select","execCommand","removeChild","paste","readText","hasContent","WebShare","canShare","share","url","WebAnalytics","track","_event","_properties","identify","_userId","_traits","page","_name","setUserProperties","apis","notifications","device","analytics"],"mappings":"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"}