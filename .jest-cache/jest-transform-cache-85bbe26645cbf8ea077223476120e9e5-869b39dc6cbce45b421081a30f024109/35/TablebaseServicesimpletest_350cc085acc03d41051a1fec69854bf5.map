{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/services/TablebaseService.simple.test.ts"],"sourcesContent":["/**\n * Simple test to verify TablebaseService basic functionality\n */\n\nimport { tablebaseService } from \"../../shared/services/TablebaseService\";\n\n// Mock fetch globally\nglobal.fetch = jest.fn();\n\ndescribe(\"TablebaseService Basic Test\", () => {\n  const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    tablebaseService.clearCache();\n  });\n\n  it(\"should handle a simple successful response\", async () => {\n    const fen = \"4k3/8/8/8/8/8/8/4K2Q w - - 0 1\";\n\n    mockFetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({\n        category: \"win\",\n        dtz: 13,\n        dtm: 13,\n        checkmate: false,\n        stalemate: false,\n        variant_win: false,\n        variant_loss: false,\n        insufficient_material: false,\n        moves: [\n          {\n            uci: \"h1b7\",\n            san: \"Qb7\",\n            category: \"loss\",\n            dtz: -12,\n            dtm: -12,\n            zeroing: false,\n            checkmate: false,\n            stalemate: false,\n            variant_win: false,\n            variant_loss: false,\n            insufficient_material: false,\n          },\n        ],\n      }),\n    } as Response);\n\n    const result = await tablebaseService.getEvaluation(fen);\n\n    console.log(\"Result:\", JSON.stringify(result, null, 2));\n\n    expect(result.isAvailable).toBe(true);\n    expect(result.result?.category).toBe(\"win\");\n    expect(result.result?.wdl).toBe(2);\n  });\n\n  it(\"should return moves from cache\", async () => {\n    const fen = \"4k3/8/8/8/8/8/8/4K2Q w - - 0 1\";\n\n    mockFetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({\n        category: \"win\",\n        dtz: 13,\n        dtm: 13,\n        checkmate: false,\n        stalemate: false,\n        variant_win: false,\n        variant_loss: false,\n        insufficient_material: false,\n        moves: [\n          {\n            uci: \"h1b7\",\n            san: \"Qb7\",\n            category: \"loss\",\n            dtz: -12,\n            dtm: -12,\n            zeroing: false,\n            checkmate: false,\n            stalemate: false,\n            variant_win: false,\n            variant_loss: false,\n            insufficient_material: false,\n          },\n        ],\n      }),\n    } as Response);\n\n    // First call\n    await tablebaseService.getEvaluation(fen);\n\n    // Second call should use cache\n    const moves = await tablebaseService.getTopMoves(fen, 1);\n\n    console.log(\"Moves:\", JSON.stringify(moves, null, 2));\n\n    expect(moves.isAvailable).toBe(true);\n    expect(moves.moves?.length).toBe(1);\n    expect(moves.moves?.[0].category).toBe(\"win\"); // Should be inverted\n    expect(mockFetch).toHaveBeenCalledTimes(1); // Only one API call\n  });\n});\n"],"names":["global","fetch","jest","fn","describe","mockFetch","beforeEach","clearAllMocks","tablebaseService","clearCache","it","result","fen","mockResolvedValueOnce","ok","json","category","dtz","dtm","checkmate","stalemate","variant_win","variant_loss","insufficient_material","moves","uci","san","zeroing","getEvaluation","console","log","JSON","stringify","expect","isAvailable","toBe","wdl","getTopMoves","length","toHaveBeenCalledTimes"],"mappings":"AAAA;;CAEC;;;;kCAEgC;AAEjC,sBAAsB;AACtBA,OAAOC,KAAK,GAAGC,KAAKC,EAAE;AAEtBC,SAAS,+BAA+B;IACtC,MAAMC,YAAYL,OAAOC,KAAK;IAE9BK,WAAW;QACTJ,KAAKK,aAAa;QAClBC,kCAAgB,CAACC,UAAU;IAC7B;IAEAC,GAAG,8CAA8C;YAqCxCC,gBACAA;QArCP,MAAMC,MAAM;QAEZP,UAAUQ,qBAAqB,CAAC;YAC9BC,IAAI;YACJC,MAAM,UAAa,CAAA;oBACjBC,UAAU;oBACVC,KAAK;oBACLC,KAAK;oBACLC,WAAW;oBACXC,WAAW;oBACXC,aAAa;oBACbC,cAAc;oBACdC,uBAAuB;oBACvBC,OAAO;wBACL;4BACEC,KAAK;4BACLC,KAAK;4BACLV,UAAU;4BACVC,KAAK,CAAC;4BACNC,KAAK,CAAC;4BACNS,SAAS;4BACTR,WAAW;4BACXC,WAAW;4BACXC,aAAa;4BACbC,cAAc;4BACdC,uBAAuB;wBACzB;qBACD;gBACH,CAAA;QACF;QAEA,MAAMZ,SAAS,MAAMH,kCAAgB,CAACoB,aAAa,CAAChB;QAEpDiB,QAAQC,GAAG,CAAC,WAAWC,KAAKC,SAAS,CAACrB,QAAQ,MAAM;QAEpDsB,OAAOtB,OAAOuB,WAAW,EAAEC,IAAI,CAAC;QAChCF,QAAOtB,iBAAAA,OAAOA,MAAM,cAAbA,qCAAAA,eAAeK,QAAQ,EAAEmB,IAAI,CAAC;QACrCF,QAAOtB,kBAAAA,OAAOA,MAAM,cAAbA,sCAAAA,gBAAeyB,GAAG,EAAED,IAAI,CAAC;IAClC;IAEAzB,GAAG,kCAAkC;YAyC5Bc,cACAA;QAzCP,MAAMZ,MAAM;QAEZP,UAAUQ,qBAAqB,CAAC;YAC9BC,IAAI;YACJC,MAAM,UAAa,CAAA;oBACjBC,UAAU;oBACVC,KAAK;oBACLC,KAAK;oBACLC,WAAW;oBACXC,WAAW;oBACXC,aAAa;oBACbC,cAAc;oBACdC,uBAAuB;oBACvBC,OAAO;wBACL;4BACEC,KAAK;4BACLC,KAAK;4BACLV,UAAU;4BACVC,KAAK,CAAC;4BACNC,KAAK,CAAC;4BACNS,SAAS;4BACTR,WAAW;4BACXC,WAAW;4BACXC,aAAa;4BACbC,cAAc;4BACdC,uBAAuB;wBACzB;qBACD;gBACH,CAAA;QACF;QAEA,aAAa;QACb,MAAMf,kCAAgB,CAACoB,aAAa,CAAChB;QAErC,+BAA+B;QAC/B,MAAMY,QAAQ,MAAMhB,kCAAgB,CAAC6B,WAAW,CAACzB,KAAK;QAEtDiB,QAAQC,GAAG,CAAC,UAAUC,KAAKC,SAAS,CAACR,OAAO,MAAM;QAElDS,OAAOT,MAAMU,WAAW,EAAEC,IAAI,CAAC;QAC/BF,QAAOT,eAAAA,MAAMA,KAAK,cAAXA,mCAAAA,aAAac,MAAM,EAAEH,IAAI,CAAC;QACjCF,QAAOT,gBAAAA,MAAMA,KAAK,cAAXA,oCAAAA,aAAa,CAAC,EAAE,CAACR,QAAQ,EAAEmB,IAAI,CAAC,QAAQ,qBAAqB;QACpEF,OAAO5B,WAAWkC,qBAAqB,CAAC,IAAI,oBAAoB;IAClE;AACF"}