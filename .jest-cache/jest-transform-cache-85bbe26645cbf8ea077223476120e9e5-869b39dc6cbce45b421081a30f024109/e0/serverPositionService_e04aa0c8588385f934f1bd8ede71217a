ac359b2fa1d70db26eaf3e1e68ef89b9
/**
 * Server-side Position Service Factory
 * Creates PositionService instances for use in getStaticProps/getServerSideProps
 * where React hooks are not available
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createServerPositionService () {
        return createServerPositionService;
    },
    get getServerPositionService () {
        return getServerPositionService;
    },
    get resetServerPositionService () {
        return resetServerPositionService;
    }
});
const _PositionService = require("./PositionService");
const _FirebasePositionRepository = require("../../repositories/implementations/FirebasePositionRepository");
const _firebase = require("../../lib/firebase");
const _MockPositionServiceFactory = require("../../testing/MockPositionServiceFactory");
const _constants = require("../../constants");
const _logging = require("../logging");
const logger = (0, _logging.getLogger)().setContext("ServerPositionService");
function createServerPositionService() {
    // Use mock service for E2E tests (server-side)
    if ((0, _MockPositionServiceFactory.shouldUseMockService)()) {
        logger.info("Creating MockPositionService for server-side E2E testing");
        return (0, _MockPositionServiceFactory.createMockPositionService)();
    }
    // Use Firebase for production/development
    const repository = new _FirebasePositionRepository.FirebasePositionRepository(_firebase.db, {
        enableCache: true,
        cacheSize: _constants.CACHE.POSITION_CACHE_SIZE,
        cacheTTL: _constants.CACHE.ANALYSIS_CACHE_TTL
    });
    return new _PositionService.PositionService(repository, {
        cacheEnabled: true,
        cacheSize: _constants.CACHE.POSITION_CACHE_SIZE,
        cacheTTL: _constants.CACHE.ANALYSIS_CACHE_TTL
    });
}
// Create a singleton instance for server-side usage
let serverPositionService = null;
function getServerPositionService() {
    if (!serverPositionService) {
        serverPositionService = createServerPositionService();
    }
    return serverPositionService;
}
function resetServerPositionService() {
    serverPositionService = null;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RoZWh1L2Nvb2xQcm9qZWN0cy9FbmRnYW1lVHJhaW5lci10cmFpbmluZy1ib2FyZC1jb21wbGV0ZS9zcmMvc2hhcmVkL3NlcnZpY2VzL2RhdGFiYXNlL3NlcnZlclBvc2l0aW9uU2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlcnZlci1zaWRlIFBvc2l0aW9uIFNlcnZpY2UgRmFjdG9yeVxuICogQ3JlYXRlcyBQb3NpdGlvblNlcnZpY2UgaW5zdGFuY2VzIGZvciB1c2UgaW4gZ2V0U3RhdGljUHJvcHMvZ2V0U2VydmVyU2lkZVByb3BzXG4gKiB3aGVyZSBSZWFjdCBob29rcyBhcmUgbm90IGF2YWlsYWJsZVxuICovXG5cbmltcG9ydCB7IFBvc2l0aW9uU2VydmljZSB9IGZyb20gXCIuL1Bvc2l0aW9uU2VydmljZVwiO1xuaW1wb3J0IHsgSVBvc2l0aW9uU2VydmljZSB9IGZyb20gXCIuL0lQb3NpdGlvblNlcnZpY2VcIjtcbmltcG9ydCB7IEZpcmViYXNlUG9zaXRpb25SZXBvc2l0b3J5IH0gZnJvbSBcIkBzaGFyZWQvcmVwb3NpdG9yaWVzL2ltcGxlbWVudGF0aW9ucy9GaXJlYmFzZVBvc2l0aW9uUmVwb3NpdG9yeVwiO1xuaW1wb3J0IHsgZGIgfSBmcm9tIFwiQHNoYXJlZC9saWIvZmlyZWJhc2VcIjtcbmltcG9ydCB7XG4gIHNob3VsZFVzZU1vY2tTZXJ2aWNlLFxuICBjcmVhdGVNb2NrUG9zaXRpb25TZXJ2aWNlLFxufSBmcm9tIFwiQHNoYXJlZC90ZXN0aW5nL01vY2tQb3NpdGlvblNlcnZpY2VGYWN0b3J5XCI7XG5pbXBvcnQgeyBDQUNIRSB9IGZyb20gXCJAc2hhcmVkL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0TG9nZ2VyIH0gZnJvbSBcIkBzaGFyZWQvc2VydmljZXMvbG9nZ2luZ1wiO1xuXG5jb25zdCBsb2dnZXIgPSBnZXRMb2dnZXIoKS5zZXRDb250ZXh0KFwiU2VydmVyUG9zaXRpb25TZXJ2aWNlXCIpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBQb3NpdGlvblNlcnZpY2UgaW5zdGFuY2UgZm9yIHNlcnZlci1zaWRlIHVzYWdlXG4gKiBUaGlzIGlzIG5lZWRlZCBmb3IgTmV4dC5qcyBnZXRTdGF0aWNQcm9wcy9nZXRTZXJ2ZXJTaWRlUHJvcHNcbiAqIHdoZXJlIFJlYWN0IENvbnRleHQvaG9va3MgYXJlIG5vdCBhdmFpbGFibGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlcnZlclBvc2l0aW9uU2VydmljZSgpOiBJUG9zaXRpb25TZXJ2aWNlIHtcbiAgLy8gVXNlIG1vY2sgc2VydmljZSBmb3IgRTJFIHRlc3RzIChzZXJ2ZXItc2lkZSlcbiAgaWYgKHNob3VsZFVzZU1vY2tTZXJ2aWNlKCkpIHtcbiAgICBsb2dnZXIuaW5mbyhcIkNyZWF0aW5nIE1vY2tQb3NpdGlvblNlcnZpY2UgZm9yIHNlcnZlci1zaWRlIEUyRSB0ZXN0aW5nXCIpO1xuICAgIHJldHVybiBjcmVhdGVNb2NrUG9zaXRpb25TZXJ2aWNlKCk7XG4gIH1cblxuICAvLyBVc2UgRmlyZWJhc2UgZm9yIHByb2R1Y3Rpb24vZGV2ZWxvcG1lbnRcbiAgY29uc3QgcmVwb3NpdG9yeSA9IG5ldyBGaXJlYmFzZVBvc2l0aW9uUmVwb3NpdG9yeShkYiwge1xuICAgIGVuYWJsZUNhY2hlOiB0cnVlLFxuICAgIGNhY2hlU2l6ZTogQ0FDSEUuUE9TSVRJT05fQ0FDSEVfU0laRSxcbiAgICBjYWNoZVRUTDogQ0FDSEUuQU5BTFlTSVNfQ0FDSEVfVFRMLFxuICB9KTtcblxuICByZXR1cm4gbmV3IFBvc2l0aW9uU2VydmljZShyZXBvc2l0b3J5LCB7XG4gICAgY2FjaGVFbmFibGVkOiB0cnVlLFxuICAgIGNhY2hlU2l6ZTogQ0FDSEUuUE9TSVRJT05fQ0FDSEVfU0laRSxcbiAgICBjYWNoZVRUTDogQ0FDSEUuQU5BTFlTSVNfQ0FDSEVfVFRMLFxuICB9KTtcbn1cblxuLy8gQ3JlYXRlIGEgc2luZ2xldG9uIGluc3RhbmNlIGZvciBzZXJ2ZXItc2lkZSB1c2FnZVxubGV0IHNlcnZlclBvc2l0aW9uU2VydmljZTogSVBvc2l0aW9uU2VydmljZSB8IG51bGwgPSBudWxsO1xuXG4vKipcbiAqIEdldCBvciBjcmVhdGUgdGhlIHNlcnZlci1zaWRlIHBvc2l0aW9uIHNlcnZpY2Ugc2luZ2xldG9uXG4gKiBUaGlzIGVuc3VyZXMgd2UgcmV1c2UgdGhlIHNhbWUgc2VydmljZSBpbnN0YW5jZSBhY3Jvc3Mgc2VydmVyLXNpZGUgcmVuZGVyc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VydmVyUG9zaXRpb25TZXJ2aWNlKCk6IElQb3NpdGlvblNlcnZpY2Uge1xuICBpZiAoIXNlcnZlclBvc2l0aW9uU2VydmljZSkge1xuICAgIHNlcnZlclBvc2l0aW9uU2VydmljZSA9IGNyZWF0ZVNlcnZlclBvc2l0aW9uU2VydmljZSgpO1xuICB9XG4gIHJldHVybiBzZXJ2ZXJQb3NpdGlvblNlcnZpY2U7XG59XG5cbi8qKlxuICogUmVzZXQgc2VydmVyIHBvc2l0aW9uIHNlcnZpY2Ugc2luZ2xldG9uICh1c2VmdWwgZm9yIHRlc3RpbmcpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNldFNlcnZlclBvc2l0aW9uU2VydmljZSgpOiB2b2lkIHtcbiAgc2VydmVyUG9zaXRpb25TZXJ2aWNlID0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJQb3NpdGlvblNlcnZpY2UiLCJnZXRTZXJ2ZXJQb3NpdGlvblNlcnZpY2UiLCJyZXNldFNlcnZlclBvc2l0aW9uU2VydmljZSIsImxvZ2dlciIsImdldExvZ2dlciIsInNldENvbnRleHQiLCJzaG91bGRVc2VNb2NrU2VydmljZSIsImluZm8iLCJjcmVhdGVNb2NrUG9zaXRpb25TZXJ2aWNlIiwicmVwb3NpdG9yeSIsIkZpcmViYXNlUG9zaXRpb25SZXBvc2l0b3J5IiwiZGIiLCJlbmFibGVDYWNoZSIsImNhY2hlU2l6ZSIsIkNBQ0hFIiwiUE9TSVRJT05fQ0FDSEVfU0laRSIsImNhY2hlVFRMIiwiQU5BTFlTSVNfQ0FDSEVfVFRMIiwiUG9zaXRpb25TZXJ2aWNlIiwiY2FjaGVFbmFibGVkIiwic2VydmVyUG9zaXRpb25TZXJ2aWNlIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztDQUlDOzs7Ozs7Ozs7OztRQW9CZUE7ZUFBQUE7O1FBNEJBQztlQUFBQTs7UUFVQUM7ZUFBQUE7OztpQ0F4RGdCOzRDQUVXOzBCQUN4Qjs0Q0FJWjsyQkFDZTt5QkFDSTtBQUUxQixNQUFNQyxTQUFTQyxJQUFBQSxrQkFBUyxJQUFHQyxVQUFVLENBQUM7QUFPL0IsU0FBU0w7SUFDZCwrQ0FBK0M7SUFDL0MsSUFBSU0sSUFBQUEsZ0RBQW9CLEtBQUk7UUFDMUJILE9BQU9JLElBQUksQ0FBQztRQUNaLE9BQU9DLElBQUFBLHFEQUF5QjtJQUNsQztJQUVBLDBDQUEwQztJQUMxQyxNQUFNQyxhQUFhLElBQUlDLHNEQUEwQixDQUFDQyxZQUFFLEVBQUU7UUFDcERDLGFBQWE7UUFDYkMsV0FBV0MsZ0JBQUssQ0FBQ0MsbUJBQW1CO1FBQ3BDQyxVQUFVRixnQkFBSyxDQUFDRyxrQkFBa0I7SUFDcEM7SUFFQSxPQUFPLElBQUlDLGdDQUFlLENBQUNULFlBQVk7UUFDckNVLGNBQWM7UUFDZE4sV0FBV0MsZ0JBQUssQ0FBQ0MsbUJBQW1CO1FBQ3BDQyxVQUFVRixnQkFBSyxDQUFDRyxrQkFBa0I7SUFDcEM7QUFDRjtBQUVBLG9EQUFvRDtBQUNwRCxJQUFJRyx3QkFBaUQ7QUFNOUMsU0FBU25CO0lBQ2QsSUFBSSxDQUFDbUIsdUJBQXVCO1FBQzFCQSx3QkFBd0JwQjtJQUMxQjtJQUNBLE9BQU9vQjtBQUNUO0FBS08sU0FBU2xCO0lBQ2RrQix3QkFBd0I7QUFDMUIifQ==