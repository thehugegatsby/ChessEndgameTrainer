{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/unit/store/slices/uiSlice.test.ts"],"sourcesContent":["/**\n * @file Tests for UISlice with nested store structure\n * @module tests/unit/store/slices/uiSlice.nested\n */\n\nimport { useStore } from \"@shared/store/rootStore\";\n\ndescribe(\"UISlice - Nested Store Structure\", () => {\n  beforeEach(() => {\n    // Reset store to initial state - preserve actions by only updating state properties\n    useStore.setState((state) => {\n      state.ui.toasts = [];\n      state.ui.isSidebarOpen = true;\n      state.ui.currentModal = null;\n      state.ui.loading = {\n        global: false,\n        tablebase: false,\n        position: false,\n        analysis: false,\n      };\n      state.ui.analysisPanel = {\n        isOpen: false,\n        activeTab: \"moves\",\n        showTablebase: true,\n      };\n    });\n  });\n\n  describe(\"showToast\", () => {\n    it(\"should add a toast message\", () => {\n      const store = useStore.getState();\n\n      store.ui.showToast(\"Test message\", \"success\");\n\n      const state = useStore.getState();\n      expect(state.ui.toasts).toHaveLength(1);\n      expect(state.ui.toasts[0]).toMatchObject({\n        message: \"Test message\",\n        type: \"success\",\n        id: expect.any(String),\n      });\n    });\n\n    it(\"should add multiple toasts\", () => {\n      const store = useStore.getState();\n\n      store.ui.showToast(\"First\", \"info\");\n      store.ui.showToast(\"Second\", \"error\");\n\n      const state = useStore.getState();\n      expect(state.ui.toasts).toHaveLength(2);\n      expect(state.ui.toasts[0].message).toBe(\"First\");\n      expect(state.ui.toasts[1].message).toBe(\"Second\");\n    });\n\n    it(\"should add toast with duration\", () => {\n      const store = useStore.getState();\n\n      store.ui.showToast(\"Timed message\", \"warning\", 5000);\n\n      const state = useStore.getState();\n      expect(state.ui.toasts[0].duration).toBe(5000);\n    });\n  });\n\n  describe(\"removeToast\", () => {\n    it(\"should remove toast by id\", () => {\n      const store = useStore.getState();\n\n      // Add toasts first\n      store.ui.showToast(\"First\", \"info\");\n      store.ui.showToast(\"Second\", \"error\");\n\n      const state = useStore.getState();\n      const firstToastId = state.ui.toasts[0].id;\n\n      // Remove first toast\n      store.ui.removeToast(firstToastId);\n\n      const updatedState = useStore.getState();\n      expect(updatedState.ui.toasts).toHaveLength(1);\n      expect(updatedState.ui.toasts[0].message).toBe(\"Second\");\n    });\n\n    it(\"should handle removing non-existent toast\", () => {\n      const store = useStore.getState();\n\n      store.ui.showToast(\"Test\", \"info\");\n\n      // Try to remove non-existent toast\n      store.ui.removeToast(\"non-existent-id\");\n\n      const state = useStore.getState();\n      expect(state.ui.toasts).toHaveLength(1);\n    });\n  });\n\n  describe(\"toggleSidebar\", () => {\n    it(\"should toggle sidebar from open to closed\", () => {\n      const store = useStore.getState();\n\n      expect(useStore.getState().ui.isSidebarOpen).toBe(true);\n\n      store.ui.toggleSidebar();\n\n      expect(useStore.getState().ui.isSidebarOpen).toBe(false);\n    });\n\n    it(\"should toggle sidebar from closed to open\", () => {\n      const store = useStore.getState();\n\n      // First close it\n      store.ui.setIsSidebarOpen(false);\n      expect(useStore.getState().ui.isSidebarOpen).toBe(false);\n\n      // Then toggle to open\n      store.ui.toggleSidebar();\n      expect(useStore.getState().ui.isSidebarOpen).toBe(true);\n    });\n  });\n\n  describe(\"setIsSidebarOpen\", () => {\n    it(\"should set sidebar open\", () => {\n      const store = useStore.getState();\n\n      store.ui.setIsSidebarOpen(true);\n\n      const state = useStore.getState();\n      expect(state.ui.isSidebarOpen).toBe(true);\n    });\n\n    it(\"should set sidebar closed\", () => {\n      const store = useStore.getState();\n\n      store.ui.setIsSidebarOpen(false);\n\n      const state = useStore.getState();\n      expect(state.ui.isSidebarOpen).toBe(false);\n    });\n  });\n\n  describe(\"setLoading\", () => {\n    it(\"should set position loading state\", () => {\n      const store = useStore.getState();\n\n      store.ui.setLoading(\"position\", true);\n\n      const state = useStore.getState();\n      expect(state.ui.loading.position).toBe(true);\n    });\n\n    it(\"should set analysis loading state\", () => {\n      const store = useStore.getState();\n\n      store.ui.setLoading(\"analysis\", true);\n\n      const state = useStore.getState();\n      expect(state.ui.loading.analysis).toBe(true);\n    });\n\n    it(\"should clear loading states\", () => {\n      const store = useStore.getState();\n\n      // Set all loading states\n      store.ui.setLoading(\"position\", true);\n      store.ui.setLoading(\"tablebase\", true);\n      store.ui.setLoading(\"analysis\", true);\n\n      // Clear them\n      store.ui.setLoading(\"position\", false);\n      store.ui.setLoading(\"tablebase\", false);\n      store.ui.setLoading(\"analysis\", false);\n\n      const state = useStore.getState();\n      expect(state.ui.loading.position).toBe(false);\n      expect(state.ui.loading.tablebase).toBe(false);\n      expect(state.ui.loading.analysis).toBe(false);\n    });\n  });\n\n  describe(\"openModal\", () => {\n    it(\"should show modal\", () => {\n      const store = useStore.getState();\n\n      store.ui.openModal(\"confirm\");\n\n      const state = useStore.getState();\n      expect(state.ui.currentModal).toBe(\"confirm\");\n    });\n  });\n\n  describe(\"closeModal\", () => {\n    it(\"should hide modal\", () => {\n      const store = useStore.getState();\n\n      // First show a modal\n      store.ui.openModal(\"settings\");\n      expect(useStore.getState().ui.currentModal).toBe(\"settings\");\n\n      // Then hide it\n      store.ui.closeModal();\n\n      const state = useStore.getState();\n      expect(state.ui.currentModal).toBeNull();\n    });\n  });\n\n  describe(\"updateAnalysisPanel\", () => {\n    it(\"should update analysis panel state\", () => {\n      const store = useStore.getState();\n\n      store.ui.updateAnalysisPanel({\n        isOpen: true,\n        activeTab: \"evaluation\",\n      });\n\n      const state = useStore.getState();\n      expect(state.ui.analysisPanel.isOpen).toBe(true);\n      expect(state.ui.analysisPanel.activeTab).toBe(\"evaluation\");\n      expect(state.ui.analysisPanel.showTablebase).toBe(true); // unchanged\n    });\n\n    it(\"should partially update analysis panel\", () => {\n      const store = useStore.getState();\n\n      store.ui.updateAnalysisPanel({ showTablebase: false });\n\n      const state = useStore.getState();\n      expect(state.ui.analysisPanel.showTablebase).toBe(false);\n      expect(state.ui.analysisPanel.isOpen).toBe(false); // unchanged\n      expect(state.ui.analysisPanel.activeTab).toBe(\"moves\"); // unchanged\n    });\n  });\n\n  describe(\"Integration with nested structure\", () => {\n    it(\"should work with other slices in the store\", () => {\n      const store = useStore.getState();\n\n      // Verify that other slices exist\n      expect(store.game).toBeDefined();\n      expect(store.training).toBeDefined();\n      expect(store.tablebase).toBeDefined();\n\n      // Set UI data\n      store.ui.showToast(\"Test\", \"info\");\n\n      // Verify it doesn't affect other slices\n      const state = useStore.getState();\n      expect(state.ui.toasts).toHaveLength(1);\n      expect(state.game.currentFen).toBeDefined();\n      expect(state.training.isPlayerTurn).toBeDefined();\n      expect(state.tablebase.analysisStatus).toBeDefined();\n    });\n\n    it(\"should maintain proper nesting in state updates\", () => {\n      const store = useStore.getState();\n\n      // Make multiple updates\n      store.ui.showToast(\"Test\", \"info\");\n      store.ui.toggleSidebar();\n      store.ui.setLoading(\"position\", true);\n\n      // Check all updates were applied correctly\n      const state = useStore.getState();\n      expect(state.ui.toasts).toHaveLength(1);\n      expect(state.ui.isSidebarOpen).toBe(false); // was toggled from true\n      expect(state.ui.loading.position).toBe(true);\n    });\n  });\n});\n"],"names":["describe","beforeEach","useStore","setState","state","ui","toasts","isSidebarOpen","currentModal","loading","global","tablebase","position","analysis","analysisPanel","isOpen","activeTab","showTablebase","it","store","getState","showToast","expect","toHaveLength","toMatchObject","message","type","id","any","String","toBe","duration","firstToastId","removeToast","updatedState","toggleSidebar","setIsSidebarOpen","setLoading","openModal","closeModal","toBeNull","updateAnalysisPanel","game","toBeDefined","training","currentFen","isPlayerTurn","analysisStatus"],"mappings":"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"}