{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/unit/store/slices/tablebaseSlice.test.ts"],"sourcesContent":["/**\n * @file Tests for TablebaseSlice with nested store structure\n * @module tests/unit/store/slices/tablebaseSlice.nested\n */\n\nimport { useStore } from \"@shared/store/rootStore\";\nimport type { PositionAnalysis } from \"@shared/types\";\n\ndescribe(\"TablebaseSlice - Nested Store Structure\", () => {\n  beforeEach(() => {\n    // Reset store to initial state - preserve actions by only updating state properties\n    useStore.setState((state) => {\n      state.tablebase.tablebaseMove = undefined;\n      state.tablebase.analysisStatus = \"idle\";\n      state.tablebase.evaluations = [];\n      state.tablebase.currentEvaluation = undefined;\n    });\n  });\n\n  describe(\"setTablebaseMove\", () => {\n    it(\"should set tablebase move string\", () => {\n      const store = useStore.getState();\n\n      store.tablebase.setTablebaseMove(\"Qb7\");\n\n      const state = useStore.getState();\n      expect(state.tablebase.tablebaseMove).toBe(\"Qb7\");\n    });\n\n    it(\"should set null for draw position\", () => {\n      const store = useStore.getState();\n\n      store.tablebase.setTablebaseMove(null);\n\n      const state = useStore.getState();\n      expect(state.tablebase.tablebaseMove).toBeNull();\n    });\n\n    it(\"should set undefined for no lookup\", () => {\n      const store = useStore.getState();\n\n      store.tablebase.setTablebaseMove(undefined);\n\n      const state = useStore.getState();\n      expect(state.tablebase.tablebaseMove).toBeUndefined();\n    });\n  });\n\n  describe(\"setAnalysisStatus\", () => {\n    it(\"should set all analysis status values\", () => {\n      const store = useStore.getState();\n      const statuses = [\"idle\", \"loading\", \"success\", \"error\"] as const;\n\n      statuses.forEach((status) => {\n        store.tablebase.setAnalysisStatus(status);\n        const state = useStore.getState();\n        expect(state.tablebase.analysisStatus).toBe(status);\n      });\n    });\n  });\n\n  describe(\"setEvaluations\", () => {\n    it(\"should set evaluations array\", () => {\n      const store = useStore.getState();\n      const evaluations: PositionAnalysis[] = [\n        {\n          fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n          evaluation: 0,\n        },\n        {\n          fen: \"K7/P7/k7/8/8/8/8/8 w - - 0 1\",\n          evaluation: 2,\n        },\n      ];\n\n      store.tablebase.setEvaluations(evaluations);\n\n      const state = useStore.getState();\n      expect(state.tablebase.evaluations).toEqual(evaluations);\n      expect(state.tablebase.evaluations).toHaveLength(2);\n    });\n\n    it(\"should clear evaluations with empty array\", () => {\n      const store = useStore.getState();\n\n      // First set some evaluations\n      store.tablebase.setEvaluations([\n        { fen: \"8/8/8/8/8/8/8/8 w - - 0 1\", evaluation: 0 },\n      ]);\n\n      // Then clear them\n      store.tablebase.setEvaluations([]);\n\n      const state = useStore.getState();\n      expect(state.tablebase.evaluations).toEqual([]);\n    });\n  });\n\n  describe(\"addEvaluation\", () => {\n    it(\"should add evaluation to array\", () => {\n      const store = useStore.getState();\n      const evaluation: PositionAnalysis = {\n        fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n        evaluation: 0,\n      };\n\n      store.tablebase.addEvaluation(evaluation);\n\n      const state = useStore.getState();\n      expect(state.tablebase.evaluations).toContainEqual(evaluation);\n      expect(state.tablebase.evaluations).toHaveLength(1);\n    });\n\n    it(\"should append evaluations to existing array\", () => {\n      const store = useStore.getState();\n      const eval1: PositionAnalysis = {\n        fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n        evaluation: 0,\n      };\n      const eval2: PositionAnalysis = {\n        fen: \"K7/P7/k7/8/8/8/8/8 w - - 0 1\",\n        evaluation: 2,\n      };\n\n      store.tablebase.addEvaluation(eval1);\n      store.tablebase.addEvaluation(eval2);\n\n      const state = useStore.getState();\n      expect(state.tablebase.evaluations).toHaveLength(2);\n      expect(state.tablebase.evaluations[0]).toEqual(eval1);\n      expect(state.tablebase.evaluations[1]).toEqual(eval2);\n    });\n  });\n\n  describe(\"setCurrentEvaluation\", () => {\n    it(\"should set current evaluation\", () => {\n      const store = useStore.getState();\n      const evaluation: PositionAnalysis = {\n        fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n        evaluation: 0,\n      };\n\n      store.tablebase.setCurrentEvaluation(evaluation);\n\n      const state = useStore.getState();\n      expect(state.tablebase.currentEvaluation).toEqual(evaluation);\n    });\n\n    it(\"should clear current evaluation\", () => {\n      const store = useStore.getState();\n\n      // First set an evaluation\n      store.tablebase.setCurrentEvaluation({\n        fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n        evaluation: 0,\n      });\n\n      // Then clear it\n      store.tablebase.setCurrentEvaluation(undefined);\n\n      const state = useStore.getState();\n      expect(state.tablebase.currentEvaluation).toBeUndefined();\n    });\n  });\n\n  describe(\"clearTablebaseState\", () => {\n    it(\"should reset all state to initial values\", () => {\n      const store = useStore.getState();\n\n      // Set various values\n      store.tablebase.setTablebaseMove(\"Qb7\");\n      store.tablebase.setAnalysisStatus(\"loading\");\n      store.tablebase.addEvaluation({\n        fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n        evaluation: 0,\n      });\n      store.tablebase.setCurrentEvaluation({\n        fen: \"K7/P7/k7/8/8/8/8/8 w - - 0 1\",\n        evaluation: 2,\n      });\n\n      // Clear everything\n      store.tablebase.clearTablebaseState();\n\n      const state = useStore.getState();\n      expect(state.tablebase.tablebaseMove).toBeUndefined();\n      expect(state.tablebase.analysisStatus).toBe(\"idle\");\n      expect(state.tablebase.evaluations).toEqual([]);\n      expect(state.tablebase.currentEvaluation).toBeUndefined();\n    });\n  });\n\n  describe(\"Integration with nested structure\", () => {\n    it(\"should work with other slices in the store\", () => {\n      const store = useStore.getState();\n\n      // Verify that other slices exist\n      expect(store.game).toBeDefined();\n      expect(store.training).toBeDefined();\n      expect(store.ui).toBeDefined();\n\n      // Set tablebase data\n      store.tablebase.setTablebaseMove(\"Kd6\");\n\n      // Verify it doesn't affect other slices\n      const state = useStore.getState();\n      expect(state.tablebase.tablebaseMove).toBe(\"Kd6\");\n      expect(state.game.currentFen).toBeDefined();\n      expect(state.training.currentPosition).toBeUndefined(); // Should be undefined initially\n    });\n\n    it(\"should maintain proper nesting in state updates\", () => {\n      const store = useStore.getState();\n\n      // Make multiple updates\n      store.tablebase.setAnalysisStatus(\"loading\");\n      store.tablebase.setTablebaseMove(\"Qb7\");\n      store.tablebase.addEvaluation({\n        fen: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n        evaluation: 0,\n      });\n\n      // Check all updates were applied correctly\n      const state = useStore.getState();\n      expect(state.tablebase.analysisStatus).toBe(\"loading\");\n      expect(state.tablebase.tablebaseMove).toBe(\"Qb7\");\n      expect(state.tablebase.evaluations).toHaveLength(1);\n    });\n  });\n});\n"],"names":["describe","beforeEach","useStore","setState","state","tablebase","tablebaseMove","undefined","analysisStatus","evaluations","currentEvaluation","it","store","getState","setTablebaseMove","expect","toBe","toBeNull","toBeUndefined","statuses","forEach","status","setAnalysisStatus","fen","evaluation","setEvaluations","toEqual","toHaveLength","addEvaluation","toContainEqual","eval1","eval2","setCurrentEvaluation","clearTablebaseState","game","toBeDefined","training","ui","currentFen","currentPosition"],"mappings":"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"}