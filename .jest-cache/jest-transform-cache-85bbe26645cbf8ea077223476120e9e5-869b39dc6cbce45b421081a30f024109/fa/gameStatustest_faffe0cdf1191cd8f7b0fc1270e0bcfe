c4715d0fd529a3bb19bbffa01043616f
/**
 * @fileoverview Unit tests for chess game status utilities
 * @description Tests game status detection, objective determination, and turn management
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _globals = require("@jest/globals");
const _gameStatus = require("../../../shared/utils/chess/gameStatus");
const _TestFixtures = require("../../../shared/testing/TestFixtures");
(0, _globals.describe)("Chess Game Status", ()=>{
    (0, _globals.describe)("getGameStatus", ()=>{
        (0, _globals.describe)("Turn Detection", ()=>{
            (0, _globals.test)("should_detect_white_to_move_from_starting_position", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.STARTING_POSITION);
                (0, _globals.expect)(status.sideToMove).toBe("white");
                (0, _globals.expect)(status.sideToMoveDisplay).toBe("WeiÃŸ am Zug");
                (0, _globals.expect)(status.icon).toBe("ðŸŸ¢");
            });
            (0, _globals.test)("should_detect_black_to_move_from_after_e4", ()=>{
                const afterE4 = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
                const status = (0, _gameStatus.getGameStatus)(afterE4);
                (0, _globals.expect)(status.sideToMove).toBe("black");
                (0, _globals.expect)(status.sideToMoveDisplay).toBe("Schwarz am Zug");
                (0, _globals.expect)(status.icon).toBe("âš«");
            });
        });
        (0, _globals.describe)("Objective Detection", ()=>{
            (0, _globals.test)("should_detect_win_objective_for_material_advantage", ()=>{
                // Queen vs King - clear winning advantage
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.KQK_TABLEBASE_WIN);
                (0, _globals.expect)(status.objective).toBe("win");
                (0, _globals.expect)(status.objectiveDisplay).toBe("Ziel: Gewinn");
            });
            (0, _globals.test)("should_detect_win_objective_for_pawn_endgame_advantage", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.KPK_WINNING);
                (0, _globals.expect)(status.objective).toBe("win");
                (0, _globals.expect)(status.objectiveDisplay).toBe("Ziel: Gewinn");
            });
            (0, _globals.test)("should_detect_draw_objective_for_equal_material", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.EQUAL_POSITION);
                (0, _globals.expect)(status.objective).toBe("draw");
                (0, _globals.expect)(status.objectiveDisplay).toBe("Ziel: Remis");
            });
            (0, _globals.test)("should_use_provided_goal_over_auto_detection", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.KQK_TABLEBASE_WIN, "defend");
                (0, _globals.expect)(status.objective).toBe("defend");
                (0, _globals.expect)(status.objectiveDisplay).toBe("Ziel: Verteidigen");
            });
        });
        (0, _globals.describe)("Error Handling", ()=>{
            (0, _globals.test)("should_handle_invalid_fen_gracefully", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.INVALID_FEN);
                (0, _globals.expect)(status.sideToMove).toBe("white");
                (0, _globals.expect)(status.sideToMoveDisplay).toBe("WeiÃŸ am Zug");
                (0, _globals.expect)(status.objective).toBe("win");
                (0, _globals.expect)(status.objectiveDisplay).toBe("Ziel: Gewinn");
                (0, _globals.expect)(status.icon).toBe("ðŸŸ¢");
            });
            (0, _globals.test)("should_handle_empty_fen_gracefully", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.EMPTY_FEN);
                (0, _globals.expect)(status.sideToMove).toBe("white");
                (0, _globals.expect)(status.objective).toBe("win");
            });
            (0, _globals.test)("should_handle_malformed_fen_gracefully", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.MALFORMED_FEN);
                (0, _globals.expect)(status.sideToMove).toBe("white");
                (0, _globals.expect)(status.objective).toBe("win");
            });
            (0, _globals.test)("should_handle_null_fen_gracefully", ()=>{
                const status = (0, _gameStatus.getGameStatus)(null);
                (0, _globals.expect)(status.sideToMove).toBe("white");
                (0, _globals.expect)(status.objective).toBe("win");
            });
            (0, _globals.test)("should_handle_undefined_fen_gracefully", ()=>{
                const status = (0, _gameStatus.getGameStatus)(undefined);
                (0, _globals.expect)(status.sideToMove).toBe("white");
                (0, _globals.expect)(status.objective).toBe("win");
            });
        });
        (0, _globals.describe)("Material Analysis Edge Cases", ()=>{
            (0, _globals.test)("should_detect_win_for_significant_material_advantage", ()=>{
                // White has queen, black has nothing
                const queenVsEmpty = "8/8/8/8/8/8/4K3/4k2Q w - - 0 1";
                const status = (0, _gameStatus.getGameStatus)(queenVsEmpty);
                (0, _globals.expect)(status.objective).toBe("win");
            });
            (0, _globals.test)("should_detect_win_for_king_pawn_vs_king", ()=>{
                const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.KPK_WINNING);
                (0, _globals.expect)(status.objective).toBe("win");
            });
            (0, _globals.test)("should_detect_draw_for_equal_material_complex", ()=>{
                // Both sides have rook
                const rooksEqual = "8/8/8/8/8/4r3/4K3/4k2R w - - 0 1";
                const status = (0, _gameStatus.getGameStatus)(rooksEqual);
                (0, _globals.expect)(status.objective).toBe("draw");
            });
        });
    });
    (0, _globals.describe)("Integration with Advantage Positions", ()=>{
        (0, _globals.test)("should_handle_white_advantage_position_correctly", ()=>{
            const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.WHITE_ADVANTAGE);
            (0, _globals.expect)(status.sideToMove).toBe("black");
            (0, _globals.expect)(status.objective).toBe("win"); // White has material advantage
        });
        (0, _globals.test)("should_handle_black_advantage_position_correctly", ()=>{
            const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.BLACK_ADVANTAGE);
            (0, _globals.expect)(status.sideToMove).toBe("black");
            (0, _globals.expect)([
                "win",
                "draw"
            ]).toContain(status.objective);
        });
        (0, _globals.test)("should_handle_equal_position_correctly", ()=>{
            const status = (0, _gameStatus.getGameStatus)(_TestFixtures.TEST_FENS.EQUAL_POSITION);
            (0, _globals.expect)(status.sideToMove).toBe("white");
            (0, _globals.expect)(status.objective).toBe("draw"); // Equal material rook endgame
        });
    });
});

//# sourceMappingURL=data:application/json;base64,