81861928e6d22faba828740ef56e5f2a
/**
 * @fileoverview Unit tests for position evaluation display
 * @description Tests getEvaluationDisplay function for position assessment
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _globals = require("@jest/globals");
const _evaluation = require("../../../shared/utils/chess/evaluation");
(0, _globals.describe)("Position Evaluation - getEvaluationDisplay", ()=>{
    (0, _globals.describe)("Mate Evaluations", ()=>{
        (0, _globals.test)("should_display_positive_mate_as_winning", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(0, 3);
            (0, _globals.expect)(result.text).toBe("#3");
            (0, _globals.expect)(result.className).toBe("eval-excellent");
            (0, _globals.expect)(result.color).toBe("#10b981");
            (0, _globals.expect)(result.bgColor).toBe("#065f46");
        });
        (0, _globals.test)("should_display_negative_mate_as_losing", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(0, -5);
            (0, _globals.expect)(result.text).toBe("#5");
            (0, _globals.expect)(result.className).toBe("eval-blunder");
            (0, _globals.expect)(result.color).toBe("#ef4444");
            (0, _globals.expect)(result.bgColor).toBe("#991b1b");
        });
    });
    (0, _globals.describe)("Positional Evaluations - White Advantage", ()=>{
        (0, _globals.test)("should_display_dominating_white_position_with_star", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(5.5);
            (0, _globals.expect)(result.text).toBe("⭐");
            (0, _globals.expect)(result.className).toBe("eval-excellent");
        });
        (0, _globals.test)("should_display_winning_white_position_with_sparkles", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(3.0);
            (0, _globals.expect)(result.text).toBe("✨");
            (0, _globals.expect)(result.className).toBe("eval-excellent");
        });
        (0, _globals.test)("should_display_better_white_position_with_ok_hand", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(1.0);
            (0, _globals.expect)(result.text).toBe("👌");
            (0, _globals.expect)(result.className).toBe("eval-good");
            (0, _globals.expect)(result.color).toBe("#3b82f6");
            (0, _globals.expect)(result.bgColor).toBe("#1e40af");
        });
        (0, _globals.test)("should_display_equal_position_with_circle", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(0.0);
            (0, _globals.expect)(result.text).toBe("⚪");
            (0, _globals.expect)(result.className).toBe("eval-neutral");
        });
    });
    (0, _globals.describe)("Positional Evaluations - Black Advantage", ()=>{
        (0, _globals.test)("should_display_slightly_worse_position_with_warning", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(-1.0);
            (0, _globals.expect)(result.text).toBe("⚠️");
            (0, _globals.expect)(result.className).toBe("eval-inaccurate");
            (0, _globals.expect)(result.color).toBe("#f59e0b");
            (0, _globals.expect)(result.bgColor).toBe("#92400e");
        });
        (0, _globals.test)("should_display_clearly_worse_position_with_orange_diamond", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(-3.0);
            (0, _globals.expect)(result.text).toBe("🔶");
            (0, _globals.expect)(result.className).toBe("eval-mistake");
            (0, _globals.expect)(result.color).toBe("#fb923c");
            (0, _globals.expect)(result.bgColor).toBe("#c2410c");
        });
        (0, _globals.test)("should_display_losing_position_with_red_circle", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(-6.0);
            (0, _globals.expect)(result.text).toBe("🔴");
            (0, _globals.expect)(result.className).toBe("eval-blunder");
            (0, _globals.expect)(result.color).toBe("#ef4444");
            (0, _globals.expect)(result.bgColor).toBe("#991b1b");
        });
    });
    (0, _globals.describe)("Threshold Tests", ()=>{
        (0, _globals.test)("should_handle_exact_thresholds", ()=>{
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(5.0).text).toBe("⭐");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(2.0).text).toBe("✨");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(0.5).text).toBe("👌");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(-0.5).text).toBe("⚪");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(-2.0).text).toBe("⚠️");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(-5.0).text).toBe("🔶");
        });
        (0, _globals.test)("should_handle_values_just_below_thresholds", ()=>{
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(4.99).text).toBe("✨");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(1.99).text).toBe("👌");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(0.49).text).toBe("⚪");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(-0.51).text).toBe("⚠️");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(-2.01).text).toBe("🔶");
            (0, _globals.expect)((0, _evaluation.getEvaluationDisplay)(-5.01).text).toBe("🔴");
        });
    });
    (0, _globals.describe)("Edge Cases", ()=>{
        (0, _globals.test)("should_handle_very_large_positive_values", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(100.0);
            (0, _globals.expect)(result.text).toBe("⭐");
            (0, _globals.expect)(result.className).toBe("eval-excellent");
        });
        (0, _globals.test)("should_handle_very_large_negative_values", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(-100.0);
            (0, _globals.expect)(result.text).toBe("🔴");
            (0, _globals.expect)(result.className).toBe("eval-blunder");
        });
        (0, _globals.test)("should_handle_NaN", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(NaN);
            // NaN comparisons are always false, so falls through to last case
            (0, _globals.expect)(result.text).toBe("🔴");
            (0, _globals.expect)(result.className).toBe("eval-blunder");
        });
        (0, _globals.test)("should_handle_Infinity", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(Infinity);
            (0, _globals.expect)(result.text).toBe("⭐");
            (0, _globals.expect)(result.className).toBe("eval-excellent");
        });
        (0, _globals.test)("should_handle_negative_Infinity", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(-Infinity);
            (0, _globals.expect)(result.text).toBe("🔴");
            (0, _globals.expect)(result.className).toBe("eval-blunder");
        });
    });
    (0, _globals.describe)("Complete Display Object", ()=>{
        (0, _globals.test)("should_return_all_required_properties", ()=>{
            const result = (0, _evaluation.getEvaluationDisplay)(1.0);
            (0, _globals.expect)(result).toHaveProperty("text");
            (0, _globals.expect)(result).toHaveProperty("className");
            (0, _globals.expect)(result).toHaveProperty("color");
            (0, _globals.expect)(result).toHaveProperty("bgColor");
            (0, _globals.expect)(typeof result.text).toBe("string");
            (0, _globals.expect)(typeof result.className).toBe("string");
            (0, _globals.expect)(typeof result.color).toBe("string");
            (0, _globals.expect)(typeof result.bgColor).toBe("string");
        });
    });
});

//# sourceMappingURL=data:application/json;base64,