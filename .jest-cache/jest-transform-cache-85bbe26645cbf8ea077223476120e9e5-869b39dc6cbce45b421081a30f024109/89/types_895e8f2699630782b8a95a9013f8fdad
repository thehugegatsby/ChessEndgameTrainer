63696abf3c12096daeeaed2bd7457f11
/**
 * Platform abstraction interfaces
 * Defines contracts for platform-specific implementations
 */ // Storage abstraction
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RoZWh1L2Nvb2xQcm9qZWN0cy9FbmRnYW1lVHJhaW5lci10cmFpbmluZy1ib2FyZC1jb21wbGV0ZS9zcmMvc2hhcmVkL3NlcnZpY2VzL3BsYXRmb3JtL3R5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGxhdGZvcm0gYWJzdHJhY3Rpb24gaW50ZXJmYWNlc1xuICogRGVmaW5lcyBjb250cmFjdHMgZm9yIHBsYXRmb3JtLXNwZWNpZmljIGltcGxlbWVudGF0aW9uc1xuICovXG5cbi8vIFN0b3JhZ2UgYWJzdHJhY3Rpb25cbmV4cG9ydCBpbnRlcmZhY2UgSVBsYXRmb3JtU3RvcmFnZSB7XG4gIHNhdmUoa2V5OiBzdHJpbmcsIGRhdGE6IGFueSk6IFByb21pc2U8dm9pZD47XG4gIGxvYWQ8VCA9IGFueT4oa2V5OiBzdHJpbmcpOiBQcm9taXNlPFQgfCBudWxsPjtcbiAgcmVtb3ZlKGtleTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPjtcbiAgY2xlYXIoKTogUHJvbWlzZTx2b2lkPjtcbiAgZ2V0QWxsS2V5cygpOiBQcm9taXNlPHN0cmluZ1tdPjtcbn1cblxuLy8gTm90aWZpY2F0aW9uIGFic3RyYWN0aW9uXG5leHBvcnQgaW50ZXJmYWNlIElQbGF0Zm9ybU5vdGlmaWNhdGlvbiB7XG4gIHJlcXVlc3RQZXJtaXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj47XG4gIHNob3codGl0bGU6IHN0cmluZywgb3B0aW9ucz86IE5vdGlmaWNhdGlvbk9wdGlvbnMpOiBQcm9taXNlPHZvaWQ+O1xuICBzY2hlZHVsZShub3RpZmljYXRpb246IFNjaGVkdWxlZE5vdGlmaWNhdGlvbik6IFByb21pc2U8c3RyaW5nPjtcbiAgY2FuY2VsKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuICBjYW5jZWxBbGwoKTogUHJvbWlzZTx2b2lkPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBOb3RpZmljYXRpb25PcHRpb25zIHtcbiAgYm9keT86IHN0cmluZztcbiAgaWNvbj86IHN0cmluZztcbiAgYmFkZ2U/OiBzdHJpbmc7XG4gIHRhZz86IHN0cmluZztcbiAgZGF0YT86IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTY2hlZHVsZWROb3RpZmljYXRpb24ge1xuICB0aXRsZTogc3RyaW5nO1xuICBib2R5OiBzdHJpbmc7XG4gIHRyaWdnZXI6IERhdGUgfCB7IHNlY29uZHM6IG51bWJlciB9O1xuICBkYXRhPzogYW55O1xufVxuXG4vLyBEZXZpY2UgaW5mbyBhYnN0cmFjdGlvblxuZXhwb3J0IGludGVyZmFjZSBJUGxhdGZvcm1EZXZpY2Uge1xuICBnZXRQbGF0Zm9ybSgpOiBQbGF0Zm9ybTtcbiAgZ2V0RGV2aWNlSW5mbygpOiBEZXZpY2VJbmZvO1xuICBnZXRNZW1vcnlJbmZvKCk6IE1lbW9yeUluZm87XG4gIGdldE5ldHdvcmtTdGF0dXMoKTogTmV0d29ya1N0YXR1cztcbiAgaXNMb3dFbmREZXZpY2UoKTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IHR5cGUgUGxhdGZvcm0gPVxuICB8IFwid2ViXCJcbiAgfCBcImlvc1wiXG4gIHwgXCJhbmRyb2lkXCJcbiAgfCBcIndpbmRvd3NcIlxuICB8IFwibWFjb3NcIlxuICB8IFwibGludXhcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZXZpY2VJbmZvIHtcbiAgbW9kZWw6IHN0cmluZztcbiAgYnJhbmQ/OiBzdHJpbmc7XG4gIG9zVmVyc2lvbjogc3RyaW5nO1xuICBzY3JlZW5TaXplOiB7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyIH07XG4gIHBpeGVsUmF0aW86IG51bWJlcjtcbiAgaXNUYWJsZXQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWVtb3J5SW5mbyB7XG4gIHRvdGFsTWVtb3J5PzogbnVtYmVyO1xuICBhdmFpbGFibGVNZW1vcnk/OiBudW1iZXI7XG4gIHVzZWRNZW1vcnk/OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV0d29ya1N0YXR1cyB7XG4gIGlzT25saW5lOiBib29sZWFuO1xuICB0eXBlPzogXCJ3aWZpXCIgfCBcIjRnXCIgfCBcIjNnXCIgfCBcIjJnXCIgfCBcIm5vbmVcIjtcbiAgZWZmZWN0aXZlVHlwZT86IHN0cmluZztcbiAgZG93bmxpbms/OiBudW1iZXI7XG59XG5cbi8vIFBlcmZvcm1hbmNlIG1vbml0b3JpbmcgYWJzdHJhY3Rpb25cbmV4cG9ydCBpbnRlcmZhY2UgSVBsYXRmb3JtUGVyZm9ybWFuY2Uge1xuICBzdGFydE1lYXN1cmUobmFtZTogc3RyaW5nKTogdm9pZDtcbiAgZW5kTWVhc3VyZShuYW1lOiBzdHJpbmcpOiBudW1iZXI7XG4gIG1hcmsobmFtZTogc3RyaW5nKTogdm9pZDtcbiAgbWVhc3VyZShuYW1lOiBzdHJpbmcsIHN0YXJ0TWFyazogc3RyaW5nLCBlbmRNYXJrOiBzdHJpbmcpOiBudW1iZXI7XG4gIGdldE1ldHJpY3MoKTogUGVyZm9ybWFuY2VNZXRyaWNzO1xuICBjbGVhck1ldHJpY3MoKTogdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQZXJmb3JtYW5jZU1ldHJpY3Mge1xuICBtZWFzdXJlczogUmVjb3JkPHN0cmluZywgbnVtYmVyW10+O1xuICBtYXJrczogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcbiAgYXZlcmFnZXM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj47XG59XG5cbi8vIEZpbGUgc3lzdGVtIGFic3RyYWN0aW9uIChmb3IgbW9iaWxlKVxuZXhwb3J0IGludGVyZmFjZSBJUGxhdGZvcm1GaWxlU3lzdGVtIHtcbiAgcmVhZEZpbGUocGF0aDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+O1xuICB3cml0ZUZpbGUocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuICBkZWxldGVGaWxlKHBhdGg6IHN0cmluZyk6IFByb21pc2U8dm9pZD47XG4gIGV4aXN0cyhwYXRoOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+O1xuICBta2RpcihwYXRoOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xuICByZWFkZGlyKHBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nW10+O1xuICBnZXREb2N1bWVudERpcmVjdG9yeSgpOiBzdHJpbmc7XG4gIGdldENhY2hlRGlyZWN0b3J5KCk6IHN0cmluZztcbn1cblxuLy8gQ2xpcGJvYXJkIGFic3RyYWN0aW9uXG5leHBvcnQgaW50ZXJmYWNlIElQbGF0Zm9ybUNsaXBib2FyZCB7XG4gIGNvcHkodGV4dDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPjtcbiAgcGFzdGUoKTogUHJvbWlzZTxzdHJpbmc+O1xuICBoYXNDb250ZW50KCk6IFByb21pc2U8Ym9vbGVhbj47XG59XG5cbi8vIFNoYXJlIGFic3RyYWN0aW9uXG5leHBvcnQgaW50ZXJmYWNlIElQbGF0Zm9ybVNoYXJlIHtcbiAgY2FuU2hhcmUoKTogYm9vbGVhbjtcbiAgc2hhcmUob3B0aW9uczogU2hhcmVPcHRpb25zKTogUHJvbWlzZTx2b2lkPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTaGFyZU9wdGlvbnMge1xuICB0aXRsZT86IHN0cmluZztcbiAgdGV4dD86IHN0cmluZztcbiAgdXJsPzogc3RyaW5nO1xuICBmaWxlcz86IEZpbGVbXTtcbn1cblxuLy8gQW5hbHl0aWNzIGFic3RyYWN0aW9uXG5leHBvcnQgaW50ZXJmYWNlIElQbGF0Zm9ybUFuYWx5dGljcyB7XG4gIHRyYWNrKGV2ZW50OiBzdHJpbmcsIHByb3BlcnRpZXM/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+KTogdm9pZDtcbiAgaWRlbnRpZnkodXNlcklkOiBzdHJpbmcsIHRyYWl0cz86IFJlY29yZDxzdHJpbmcsIGFueT4pOiB2b2lkO1xuICBwYWdlKG5hbWU6IHN0cmluZywgcHJvcGVydGllcz86IFJlY29yZDxzdHJpbmcsIGFueT4pOiB2b2lkO1xuICBzZXRVc2VyUHJvcGVydGllcyhwcm9wZXJ0aWVzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+KTogdm9pZDtcbn1cblxuLy8gTWFpbiBwbGF0Zm9ybSBzZXJ2aWNlIGludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBJUGxhdGZvcm1TZXJ2aWNlIHtcbiAgc3RvcmFnZTogSVBsYXRmb3JtU3RvcmFnZTtcbiAgbm90aWZpY2F0aW9uczogSVBsYXRmb3JtTm90aWZpY2F0aW9uO1xuICBkZXZpY2U6IElQbGF0Zm9ybURldmljZTtcbiAgcGVyZm9ybWFuY2U6IElQbGF0Zm9ybVBlcmZvcm1hbmNlO1xuICBmaWxlU3lzdGVtPzogSVBsYXRmb3JtRmlsZVN5c3RlbTtcbiAgY2xpcGJvYXJkOiBJUGxhdGZvcm1DbGlwYm9hcmQ7XG4gIHNoYXJlOiBJUGxhdGZvcm1TaGFyZTtcbiAgYW5hbHl0aWNzOiBJUGxhdGZvcm1BbmFseXRpY3M7XG59XG5cbi8vIFBsYXRmb3JtIGRldGVjdGlvbiB1dGlsaXRpZXNcbmV4cG9ydCBpbnRlcmZhY2UgSVBsYXRmb3JtRGV0ZWN0aW9uIHtcbiAgaXNXZWIoKTogYm9vbGVhbjtcbiAgaXNNb2JpbGUoKTogYm9vbGVhbjtcbiAgaXNBbmRyb2lkKCk6IGJvb2xlYW47XG4gIGlzSU9TKCk6IGJvb2xlYW47XG4gIGlzRGVza3RvcCgpOiBib29sZWFuO1xuICBpc1RvdWNoRGV2aWNlKCk6IGJvb2xlYW47XG4gIGlzU3RhbmRhbG9uZSgpOiBib29sZWFuOyAvLyBQV0EgaW5zdGFsbGVkXG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDLEdBRUQsc0JBQXNCIn0=