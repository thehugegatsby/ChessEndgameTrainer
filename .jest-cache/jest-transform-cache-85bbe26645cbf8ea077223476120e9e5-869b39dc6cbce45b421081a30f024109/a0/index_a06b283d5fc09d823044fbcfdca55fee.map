{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/node_modules/nanoid/index.js"],"sourcesContent":["import { webcrypto as crypto } from 'node:crypto'\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nfunction fillPool(bytes) {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.getRandomValues(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.getRandomValues(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nexport function random(bytes) {\n  fillPool((bytes |= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nexport function customRandom(alphabet, defaultSize, getRandom) {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport function customAlphabet(alphabet, size = 21) {\n  return customRandom(alphabet, size, random)\n}\nexport function nanoid(size = 21) {\n  fillPool((size |= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += scopedUrlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n"],"names":["customAlphabet","customRandom","nanoid","random","urlAlphabet","POOL_SIZE_MULTIPLIER","pool","poolOffset","fillPool","bytes","length","Buffer","allocUnsafe","crypto","getRandomValues","subarray","alphabet","defaultSize","getRandom","mask","Math","clz32","step","ceil","size","id","i","scopedUrlAlphabet"],"mappings":";;;;;;;;;;;QAmCgBA;eAAAA;;QAfAC;eAAAA;;QAkBAC;eAAAA;;QAtBAC;eAAAA;;QAdPC;eAAAA,kBAAW;;;4BAFgB;uBACa;AAEjD,MAAMC,uBAAuB;AAC7B,IAAIC,MAAMC;AACV,SAASC,SAASC,KAAK;IACrB,IAAI,CAACH,QAAQA,KAAKI,MAAM,GAAGD,OAAO;QAChCH,OAAOK,OAAOC,WAAW,CAACH,QAAQJ;QAClCQ,qBAAM,CAACC,eAAe,CAACR;QACvBC,aAAa;IACf,OAAO,IAAIA,aAAaE,QAAQH,KAAKI,MAAM,EAAE;QAC3CG,qBAAM,CAACC,eAAe,CAACR;QACvBC,aAAa;IACf;IACAA,cAAcE;AAChB;AACO,SAASN,OAAOM,KAAK;IAC1BD,SAAUC,SAAS;IACnB,OAAOH,KAAKS,QAAQ,CAACR,aAAaE,OAAOF;AAC3C;AACO,SAASN,aAAae,QAAQ,EAAEC,WAAW,EAAEC,SAAS;IAC3D,IAAIC,OAAO,AAAC,CAAA,KAAM,KAAKC,KAAKC,KAAK,CAAC,AAACL,SAASN,MAAM,GAAG,IAAK,EAAE,IAAK;IACjE,IAAIY,OAAOF,KAAKG,IAAI,CAAC,AAAC,MAAMJ,OAAOF,cAAeD,SAASN,MAAM;IACjE,OAAO,CAACc,OAAOP,WAAW;QACxB,IAAIQ,KAAK;QACT,MAAO,KAAM;YACX,IAAIhB,QAAQS,UAAUI;YACtB,IAAII,IAAIJ;YACR,MAAOI,IAAK;gBACVD,MAAMT,QAAQ,CAACP,KAAK,CAACiB,EAAE,GAAGP,KAAK,IAAI;gBACnC,IAAIM,GAAGf,MAAM,IAAIc,MAAM,OAAOC;YAChC;QACF;IACF;AACF;AACO,SAASzB,eAAegB,QAAQ,EAAEQ,OAAO,EAAE;IAChD,OAAOvB,aAAae,UAAUQ,MAAMrB;AACtC;AACO,SAASD,OAAOsB,OAAO,EAAE;IAC9BhB,SAAUgB,QAAQ;IAClB,IAAIC,KAAK;IACT,IAAK,IAAIC,IAAInB,aAAaiB,MAAME,IAAInB,YAAYmB,IAAK;QACnDD,MAAME,kBAAiB,CAACrB,IAAI,CAACoB,EAAE,GAAG,GAAG;IACvC;IACA,OAAOD;AACT"}