68362d169336cc4b396912e4c49e5a7e
/**
 * @fileoverview Principal Variation Component
 * @version 1.0.0
 * @description PHASE 2.2: Reusable component for displaying chess engine's principal variation
 *
 * EXPERT CONSENSUS IMPLEMENTATION:
 * - Dedicated, reusable React component (Option C)
 * - Interactive move list with board preview capability
 * - Performance optimized with React.memo and throttling
 * - Mobile-responsive design following industry standards
 */ "use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PrincipalVariation", {
    enumerable: true,
    get: function() {
        return PrincipalVariation;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _uiConstants = require("../../constants/uiConstants");
const _constants = require("../../constants");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const PrincipalVariation = /*#__PURE__*/ _react.default.memo(({ pv = [], pvString, evaluation, depth, onMoveClick, interactive = true, maxMoves = _uiConstants.UI_CONSTANTS.PRINCIPAL_VARIATION.MAX_MOVES_DISPLAY, className = "" })=>{
    const [hoveredMoveIndex, setHoveredMoveIndex] = (0, _react.useState)(null);
    // Memoize processed moves for performance
    const processedMoves = (0, _react.useMemo)(()=>{
        if (!pv || pv.length === 0) return [];
        // Limit moves for mobile performance and UI clarity
        const limitedMoves = pv.slice(0, maxMoves);
        return limitedMoves.map((move, index)=>({
                move,
                index,
                notation: move,
                isEven: index % 2 === 0
            }));
    }, [
        pv,
        maxMoves
    ]);
    // Handle move click with performance optimization
    const handleMoveClick = (0, _react.useCallback)((moveIndex, move)=>{
        if (!interactive || !onMoveClick) return;
        onMoveClick(moveIndex, move);
    }, [
        interactive,
        onMoveClick
    ]);
    // Handle mouse events for hover effects
    const handleMouseEnter = (0, _react.useCallback)((index)=>{
        if (interactive) {
            setHoveredMoveIndex(index);
        }
    }, [
        interactive
    ]);
    const handleMouseLeave = (0, _react.useCallback)(()=>{
        if (interactive) {
            setHoveredMoveIndex(null);
        }
    }, [
        interactive
    ]);
    // Empty state
    if (!pv || pv.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `principal-variation-empty ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center py-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "text-gray-400 dark:text-gray-500 mb-1",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-lg",
                            children: "ðŸŽ¯"
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-xs text-gray-500 dark:text-gray-400",
                        children: "Hauptvariante wird geladen..."
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `principal-variation ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "pv-header flex justify-between items-center mb-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-xs font-medium text-gray-600 dark:text-gray-400",
                                children: "Hauptvariante"
                            }),
                            depth && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "text-xs px-1.5 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded",
                                children: [
                                    "Tiefe ",
                                    depth
                                ]
                            })
                        ]
                    }),
                    evaluation !== undefined && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "text-xs font-mono text-gray-700 dark:text-gray-300",
                        children: evaluation > 0 ? `+${evaluation.toFixed(2)}` : evaluation.toFixed(2)
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "pv-moves-container",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "pv-moves flex flex-wrap gap-1 items-center",
                    children: [
                        processedMoves.map(({ move, index, notation, isEven })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.default.Fragment, {
                                children: [
                                    isEven && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "move-number text-xs text-gray-500 dark:text-gray-400 font-medium",
                                        style: {
                                            minWidth: `${_constants.DIMENSIONS.MOVE_NUMBER_MIN_WIDTH}px`
                                        },
                                        children: [
                                            Math.floor(index / 2) + 1,
                                            "."
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        type: "button",
                                        className: `
                  move-button px-2 py-1 text-xs font-mono rounded transition-all duration-150
                  ${interactive ? "cursor-pointer hover:scale-105" : "cursor-default"}
                  ${hoveredMoveIndex === index ? "bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-300 shadow-sm" : "bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"}
                  ${isEven ? "text-gray-800 dark:text-gray-200" : "text-gray-600 dark:text-gray-300"}
                  focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50
                `,
                                        onClick: ()=>handleMoveClick(index, move),
                                        onMouseEnter: ()=>handleMouseEnter(index),
                                        onMouseLeave: handleMouseLeave,
                                        disabled: !interactive,
                                        title: interactive ? `Klicken um Position nach ${notation} zu sehen` : undefined,
                                        "aria-label": `Zug ${index + 1}: ${notation}`,
                                        children: notation
                                    })
                                ]
                            }, `move-${index}`)),
                        pv.length > maxMoves && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                            className: "truncation-indicator text-xs text-gray-400 dark:text-gray-500 ml-1",
                            children: [
                                "... +",
                                pv.length - maxMoves,
                                " weitere"
                            ]
                        })
                    ]
                })
            }),
            interactive && processedMoves.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "pv-help mt-2",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    className: "text-xs text-gray-400 dark:text-gray-500",
                    children: "Klicken Sie auf einen Zug, um die Position zu sehen"
                })
            }),
            process.env.NODE_ENV === "development" && pvString && /*#__PURE__*/ (0, _jsxruntime.jsxs)("details", {
                className: "pv-debug mt-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("summary", {
                        className: "text-xs text-gray-400 cursor-pointer",
                        children: "Debug Info"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("pre", {
                        className: "text-xs bg-gray-100 dark:bg-gray-800 p-2 rounded mt-1 overflow-x-auto",
                        children: [
                            "Raw PV: ",
                            pvString
                        ]
                    })
                ]
            })
        ]
    });
});
PrincipalVariation.displayName = "PrincipalVariation";

//# sourceMappingURL=data:application/json;base64,