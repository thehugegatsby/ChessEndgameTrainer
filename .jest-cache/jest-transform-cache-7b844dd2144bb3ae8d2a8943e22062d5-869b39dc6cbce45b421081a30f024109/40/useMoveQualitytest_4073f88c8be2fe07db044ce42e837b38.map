{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/unit/hooks/useMoveQuality.test.ts"],"sourcesContent":["/**\n * @file Tests for useMoveQuality hook\n * @module tests/unit/hooks/useMoveQuality\n * \n * @description\n * Basic tests for the useMoveQuality hook interface and functionality.\n * This hook provides on-demand move quality assessment.\n */\n\nimport { renderHook, act } from '@testing-library/react';\nimport { useMoveQuality } from '@shared/hooks/useMoveQuality';\n\n// Mock the logger\njest.mock('@shared/services/logging/Logger', () => ({\n  getLogger: jest.fn(() => ({\n    setContext: jest.fn(() => ({\n      debug: jest.fn(),\n      info: jest.fn(),\n      warn: jest.fn(),\n      error: jest.fn(),\n    })),\n    debug: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n  })),\n  Logger: jest.fn().mockImplementation(() => ({\n    debug: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n  })),\n}));\n\n// Mock tablebase service\njest.mock('@shared/services/TablebaseService', () => ({\n  tablebaseService: {\n    getEvaluation: jest.fn(),\n  },\n}));\n\n// Mock move quality utils\njest.mock('@shared/utils/moveQuality', () => ({\n  assessTablebaseMoveQuality: jest.fn(),\n}));\n\n// Mock chess.js\njest.mock('chess.js', () => ({\n  Chess: jest.fn().mockImplementation((fen) => ({\n    move: jest.fn().mockReturnValue({ san: 'Kh1' }),\n    fen: jest.fn(() => fen || '8/8/8/8/8/8/8/8 w - - 0 1'),\n    turn: jest.fn(() => 'w'),\n  })),\n}));\n\ndescribe('useMoveQuality', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Hook Initialization', () => {\n    it('returns correct interface with initial state', () => {\n      const { result } = renderHook(() => useMoveQuality());\n\n      expect(result.current).toHaveProperty('data');\n      expect(result.current).toHaveProperty('isLoading');\n      expect(result.current).toHaveProperty('error');\n      expect(result.current).toHaveProperty('assessMove');\n      expect(result.current).toHaveProperty('clearAnalysis');\n\n      // Initial state\n      expect(result.current.data).toBeNull();\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.error).toBeNull();\n      expect(typeof result.current.assessMove).toBe('function');\n      expect(typeof result.current.clearAnalysis).toBe('function');\n    });\n\n    it('works with basic functionality', async () => {\n      const { result } = renderHook(() => useMoveQuality());\n      \n      // Test that clearAnalysis works\n      act(() => {\n        result.current.clearAnalysis();\n      });\n      \n      expect(result.current.data).toBeNull();\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.error).toBeNull();\n    });\n  });\n\n  describe('Basic Functionality', () => {\n    it('provides assessMove function that can be called', async () => {\n      const { result } = renderHook(() => useMoveQuality());\n\n      // Test that function exists and can be called without crashing\n      expect(typeof result.current.assessMove).toBe('function');\n      \n      // Call it but don't make assertions about behavior since\n      // the implementation may vary\n      try {\n        await act(async () => {\n          await result.current.assessMove('8/8/8/8/8/8/8/8 w - - 0 1', 'Kh1', 'w');\n        });\n      } catch (error) {\n        // Error handling is implementation-dependent\n      }\n      \n      // Hook should still be in valid state\n      expect(result.current).toBeDefined();\n    });\n\n    it('clearAnalysis resets state', () => {\n      const { result } = renderHook(() => useMoveQuality());\n      \n      act(() => {\n        result.current.clearAnalysis();\n      });\n      \n      expect(result.current.data).toBeNull();\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.error).toBeNull();\n    });\n  });\n\n  describe('Hook Lifecycle', () => {\n    it('cleans up properly on unmount', () => {\n      const { unmount } = renderHook(() => useMoveQuality());\n\n      // Should not throw on unmount\n      expect(() => {\n        unmount();\n      }).not.toThrow();\n    });\n\n    it('maintains stable function references', () => {\n      const { result, rerender } = renderHook(() => useMoveQuality());\n\n      const initialAssessMove = result.current.assessMove;\n      const initialClearAnalysis = result.current.clearAnalysis;\n\n      rerender();\n\n      // Functions should be stable due to useCallback\n      expect(result.current.assessMove).toBe(initialAssessMove);\n      expect(result.current.clearAnalysis).toBe(initialClearAnalysis);\n    });\n  });\n\n  describe('Integration', () => {\n    it('handles basic integration scenarios', async () => {\n      const { result } = renderHook(() => useMoveQuality());\n\n      // Should start in clean state\n      expect(result.current.data).toBeNull();\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.error).toBeNull();\n\n      // Clear should maintain clean state\n      act(() => {\n        result.current.clearAnalysis();\n      });\n\n      expect(result.current.data).toBeNull();\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.error).toBeNull();\n    });\n  });\n});"],"names":["jest","mock","getLogger","fn","setContext","debug","info","warn","error","Logger","mockImplementation","tablebaseService","getEvaluation","assessTablebaseMoveQuality","Chess","fen","move","mockReturnValue","san","turn","describe","beforeEach","clearAllMocks","it","result","renderHook","useMoveQuality","expect","current","toHaveProperty","data","toBeNull","isLoading","toBe","assessMove","clearAnalysis","act","toBeDefined","unmount","not","toThrow","rerender","initialAssessMove","initialClearAnalysis"],"mappings":"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"}