{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/container/mocks.ts"],"sourcesContent":["/**\n * @file Mock Browser APIs for testing environments\n * @module services/container/mocks\n * \n * @description\n * Provides mock implementations of browser APIs for testing environments.\n * Designed for Jest 30 compatibility with fallback support for non-Jest\n * environments. Creates lightweight, focused mocks that simulate browser\n * behavior without the complexity of full browser implementations.\n * \n * @remarks\n * Key features:\n * - Jest-compatible mock functions with fallback implementations\n * - Storage API mocks (localStorage, sessionStorage) with persistent state\n * - Navigator API mocks with clipboard and sharing functionality\n * - Window object mocks with media queries and screen properties\n * - Document API mocks for DOM manipulation testing\n * - Performance API mocks with realistic timing simulation\n * - Clean, predictable mock behavior for consistent testing\n * \n * The mocks are designed to be lightweight yet functional, providing\n * the essential behavior needed for unit and integration testing without\n * the overhead of full browser simulation frameworks.\n */\n\n/**\n * Create a mock Storage implementation for localStorage/sessionStorage\n * \n * @description\n * Creates a mock Storage object that implements the Web Storage API interface.\n * Maintains an in-memory store that persists for the duration of the test,\n * providing realistic storage behavior without actual browser persistence.\n * \n * @returns {Storage} Mock storage object with full Storage API implementation\n * \n * @example\n * ```typescript\n * const mockStorage = createMockStorage();\n * mockStorage.setItem('key', 'value');\n * expect(mockStorage.getItem('key')).toBe('value');\n * expect(mockStorage.length).toBe(1);\n * ```\n */\nexport function createMockStorage(): Storage {\n  const store: Record<string, string> = {};\n\n  // Helper to create mock function that works with or without Jest\n  const mockFn = (impl: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return jest.fn(impl);\n    }\n    return impl;\n  };\n\n  return {\n    getItem: mockFn((key: string) => store[key] || null),\n    setItem: mockFn((key: string, value: string) => {\n      store[key] = value;\n    }),\n    removeItem: mockFn((key: string) => {\n      delete store[key];\n    }),\n    clear: mockFn(() => {\n      Object.keys(store).forEach((key) => delete store[key]);\n    }),\n    key: mockFn((index: number) => {\n      const keys = Object.keys(store);\n      return keys[index] || null;\n    }),\n    get length() {\n      return Object.keys(store).length;\n    },\n  };\n}\n\n/**\n * Create a mock Navigator implementation\n * \n * @description\n * Creates a mock Navigator object with essential properties and methods\n * for testing browser navigation and API functionality. Includes clipboard\n * API, sharing functionality, and basic device information.\n * \n * @returns {Navigator} Mock navigator object with common Navigator API methods\n * \n * @example\n * ```typescript\n * const mockNav = createMockNavigator();\n * expect(mockNav.userAgent).toContain('Test Environment');\n * await mockNav.clipboard.writeText('test');\n * ```\n */\nexport function createMockNavigator(): Navigator {\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn().mockResolvedValue(undefined);\n    }\n    return impl || (() => Promise.resolve(undefined));\n  };\n\n  return {\n    userAgent: \"Mozilla/5.0 (Test Environment)\",\n    onLine: true,\n    clipboard: {\n      writeText: mockFn(),\n      readText: mockFn(() => Promise.resolve(\"mock text\")),\n    } as any,\n    share: mockFn(),\n    // Add other navigator properties as needed\n  } as any;\n}\n\n/**\n * Create a mock Window implementation\n * \n * @description\n * Creates a mock Window object with essential browser window properties\n * and methods. Includes storage APIs, screen information, media queries,\n * and device pixel ratio for comprehensive window testing.\n * \n * @returns {Window} Mock window object with common Window API properties\n * \n * @example\n * ```typescript\n * const mockWin = createMockWindow();\n * mockWin.localStorage.setItem('test', 'value');\n * expect(mockWin.screen.width).toBe(1920);\n * ```\n */\nexport function createMockWindow(): Window {\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn();\n    }\n    return impl || (() => {});\n  };\n\n  return {\n    localStorage: createMockStorage(),\n    sessionStorage: createMockStorage(),\n    screen: {\n      width: 1920,\n      height: 1080,\n    },\n    devicePixelRatio: 1,\n    matchMedia: mockFn((query: string) => ({\n      matches: false,\n      media: query,\n      onchange: null,\n      addListener: mockFn(),\n      removeListener: mockFn(),\n      addEventListener: mockFn(),\n      removeEventListener: mockFn(),\n      dispatchEvent: mockFn(),\n    })),\n  } as any;\n}\n\n/**\n * Create a mock Document implementation\n * \n * @description\n * Creates a mock Document object with essential DOM manipulation methods.\n * Provides basic document functionality for testing components that\n * interact with the DOM without requiring a full DOM environment.\n * \n * @returns {Document} Mock document object with common Document API methods\n * \n * @example\n * ```typescript\n * const mockDoc = createMockDocument();\n * const element = mockDoc.createElement('div');\n * mockDoc.body.appendChild(element);\n * ```\n */\nexport function createMockDocument(): Document {\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn();\n    }\n    return impl || (() => {});\n  };\n\n  return {\n    createElement: mockFn(() => ({\n      style: {},\n      select: mockFn(),\n      remove: mockFn(),\n    })),\n    body: {\n      appendChild: mockFn(),\n      removeChild: mockFn(),\n    },\n    execCommand: mockFn(() => true),\n    referrer: \"\",\n  } as any;\n}\n\n/**\n * Create a mock Performance implementation\n * \n * @description\n * Creates a mock Performance object with timing and measurement functionality.\n * Simulates realistic timing behavior with ~60fps timing intervals and\n * provides performance marking and measurement capabilities for testing.\n * \n * @returns {Performance} Mock performance object with Performance API methods\n * \n * @example\n * ```typescript\n * const mockPerf = createMockPerformance();\n * const start = mockPerf.now();\n * mockPerf.mark('test-start');\n * // Simulate work\n * const end = mockPerf.now();\n * expect(end).toBeGreaterThan(start);\n * ```\n */\nexport function createMockPerformance(): Performance {\n  let mockTime = 0;\n\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn();\n    }\n    return impl || (() => {});\n  };\n\n  return {\n    now: mockFn(() => {\n      mockTime += 16.67; // ~60fps\n      return mockTime;\n    }),\n    mark: mockFn(),\n    measure: mockFn(),\n    getEntries: mockFn(() => []),\n    clearMarks: mockFn(),\n    clearMeasures: mockFn(),\n  } as any;\n}\n"],"names":["createMockDocument","createMockNavigator","createMockPerformance","createMockStorage","createMockWindow","store","mockFn","impl","jest","fn","getItem","key","setItem","value","removeItem","clear","Object","keys","forEach","index","length","mockResolvedValue","undefined","Promise","resolve","userAgent","onLine","clipboard","writeText","readText","share","localStorage","sessionStorage","screen","width","height","devicePixelRatio","matchMedia","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","createElement","style","select","remove","body","appendChild","removeChild","execCommand","referrer","mockTime","now","mark","measure","getEntries","clearMarks","clearMeasures"],"mappings":"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"}