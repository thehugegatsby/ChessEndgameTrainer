{"version":3,"names":["cov_2k8to3hqox","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","createMockDocument","createMockNavigator","createMockPerformance","createMockStorage","createMockWindow","store","mockFn","impl","jest","fn","getItem","key","setItem","value","removeItem","clear","Object","keys","forEach","index","length","mockResolvedValue","Promise","resolve","userAgent","onLine","clipboard","writeText","readText","share","localStorage","sessionStorage","screen","width","height","devicePixelRatio","matchMedia","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","createElement","style","select","remove","body","appendChild","removeChild","execCommand","referrer","mockTime","now","mark","measure","getEntries","clearMarks","clearMeasures"],"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/container/mocks.ts"],"sourcesContent":["/**\n * @file Mock Browser APIs for testing environments\n * @module services/container/mocks\n * \n * @description\n * Provides mock implementations of browser APIs for testing environments.\n * Designed for Jest 30 compatibility with fallback support for non-Jest\n * environments. Creates lightweight, focused mocks that simulate browser\n * behavior without the complexity of full browser implementations.\n * \n * @remarks\n * Key features:\n * - Jest-compatible mock functions with fallback implementations\n * - Storage API mocks (localStorage, sessionStorage) with persistent state\n * - Navigator API mocks with clipboard and sharing functionality\n * - Window object mocks with media queries and screen properties\n * - Document API mocks for DOM manipulation testing\n * - Performance API mocks with realistic timing simulation\n * - Clean, predictable mock behavior for consistent testing\n * \n * The mocks are designed to be lightweight yet functional, providing\n * the essential behavior needed for unit and integration testing without\n * the overhead of full browser simulation frameworks.\n */\n\n/**\n * Create a mock Storage implementation for localStorage/sessionStorage\n * \n * @description\n * Creates a mock Storage object that implements the Web Storage API interface.\n * Maintains an in-memory store that persists for the duration of the test,\n * providing realistic storage behavior without actual browser persistence.\n * \n * @returns {Storage} Mock storage object with full Storage API implementation\n * \n * @example\n * ```typescript\n * const mockStorage = createMockStorage();\n * mockStorage.setItem('key', 'value');\n * expect(mockStorage.getItem('key')).toBe('value');\n * expect(mockStorage.length).toBe(1);\n * ```\n */\nexport function createMockStorage(): Storage {\n  const store: Record<string, string> = {};\n\n  // Helper to create mock function that works with or without Jest\n  const mockFn = (impl: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return jest.fn(impl);\n    }\n    return impl;\n  };\n\n  return {\n    getItem: mockFn((key: string) => store[key] || null),\n    setItem: mockFn((key: string, value: string) => {\n      store[key] = value;\n    }),\n    removeItem: mockFn((key: string) => {\n      delete store[key];\n    }),\n    clear: mockFn(() => {\n      Object.keys(store).forEach((key) => delete store[key]);\n    }),\n    key: mockFn((index: number) => {\n      const keys = Object.keys(store);\n      return keys[index] || null;\n    }),\n    get length() {\n      return Object.keys(store).length;\n    },\n  };\n}\n\n/**\n * Create a mock Navigator implementation\n * \n * @description\n * Creates a mock Navigator object with essential properties and methods\n * for testing browser navigation and API functionality. Includes clipboard\n * API, sharing functionality, and basic device information.\n * \n * @returns {Navigator} Mock navigator object with common Navigator API methods\n * \n * @example\n * ```typescript\n * const mockNav = createMockNavigator();\n * expect(mockNav.userAgent).toContain('Test Environment');\n * await mockNav.clipboard.writeText('test');\n * ```\n */\nexport function createMockNavigator(): Navigator {\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn().mockResolvedValue(undefined);\n    }\n    return impl || (() => Promise.resolve(undefined));\n  };\n\n  return {\n    userAgent: \"Mozilla/5.0 (Test Environment)\",\n    onLine: true,\n    clipboard: {\n      writeText: mockFn(),\n      readText: mockFn(() => Promise.resolve(\"mock text\")),\n    } as any,\n    share: mockFn(),\n    // Add other navigator properties as needed\n  } as any;\n}\n\n/**\n * Create a mock Window implementation\n * \n * @description\n * Creates a mock Window object with essential browser window properties\n * and methods. Includes storage APIs, screen information, media queries,\n * and device pixel ratio for comprehensive window testing.\n * \n * @returns {Window} Mock window object with common Window API properties\n * \n * @example\n * ```typescript\n * const mockWin = createMockWindow();\n * mockWin.localStorage.setItem('test', 'value');\n * expect(mockWin.screen.width).toBe(1920);\n * ```\n */\nexport function createMockWindow(): Window {\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn();\n    }\n    return impl || (() => {});\n  };\n\n  return {\n    localStorage: createMockStorage(),\n    sessionStorage: createMockStorage(),\n    screen: {\n      width: 1920,\n      height: 1080,\n    },\n    devicePixelRatio: 1,\n    matchMedia: mockFn((query: string) => ({\n      matches: false,\n      media: query,\n      onchange: null,\n      addListener: mockFn(),\n      removeListener: mockFn(),\n      addEventListener: mockFn(),\n      removeEventListener: mockFn(),\n      dispatchEvent: mockFn(),\n    })),\n  } as any;\n}\n\n/**\n * Create a mock Document implementation\n * \n * @description\n * Creates a mock Document object with essential DOM manipulation methods.\n * Provides basic document functionality for testing components that\n * interact with the DOM without requiring a full DOM environment.\n * \n * @returns {Document} Mock document object with common Document API methods\n * \n * @example\n * ```typescript\n * const mockDoc = createMockDocument();\n * const element = mockDoc.createElement('div');\n * mockDoc.body.appendChild(element);\n * ```\n */\nexport function createMockDocument(): Document {\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn();\n    }\n    return impl || (() => {});\n  };\n\n  return {\n    createElement: mockFn(() => ({\n      style: {},\n      select: mockFn(),\n      remove: mockFn(),\n    })),\n    body: {\n      appendChild: mockFn(),\n      removeChild: mockFn(),\n    },\n    execCommand: mockFn(() => true),\n    referrer: \"\",\n  } as any;\n}\n\n/**\n * Create a mock Performance implementation\n * \n * @description\n * Creates a mock Performance object with timing and measurement functionality.\n * Simulates realistic timing behavior with ~60fps timing intervals and\n * provides performance marking and measurement capabilities for testing.\n * \n * @returns {Performance} Mock performance object with Performance API methods\n * \n * @example\n * ```typescript\n * const mockPerf = createMockPerformance();\n * const start = mockPerf.now();\n * mockPerf.mark('test-start');\n * // Simulate work\n * const end = mockPerf.now();\n * expect(end).toBeGreaterThan(start);\n * ```\n */\nexport function createMockPerformance(): Performance {\n  let mockTime = 0;\n\n  const mockFn = (impl?: (...args: any[]) => any) => {\n    if (typeof jest !== \"undefined\" && jest.fn) {\n      return impl ? jest.fn(impl) : jest.fn();\n    }\n    return impl || (() => {});\n  };\n\n  return {\n    now: mockFn(() => {\n      mockTime += 16.67; // ~60fps\n      return mockTime;\n    }),\n    mark: mockFn(),\n    measure: mockFn(),\n    getEntries: mockFn(() => []),\n    clearMarks: mockFn(),\n    clearMeasures: mockFn(),\n  } as any;\n}\n"],"mappings":"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","ignoreList":[]}