{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/components/tablebase/MoveEvaluationBar.tsx"],"sourcesContent":["/**\n * @file Move evaluation bar visualization component\n * @module components/tablebase/MoveEvaluationBar\n *\n * @description\n * Visual progress bar component that displays tablebase moves with color-coded\n * evaluation bars based on DTZ (Distance to Zero) values. Provides an intuitive\n * visualization similar to the Lichess tablebase interface.\n *\n * @remarks\n * Key features:\n * - Color-coded bars (green=win, yellow=draw, red=loss)\n * - Bar width proportional to DTZ value\n * - Interactive selection with hover states\n * - Accessible keyboard navigation\n * - Compact variant for dense layouts\n * - Dark mode support\n *\n * The component uses DTZ values to create visual feedback about move quality,\n * with longer bars indicating moves that take more time to reach an outcome.\n */\n\n\"use client\";\n\nimport React from \"react\";\nimport {\n  type MoveResultType,\n  getEvaluationBarColor,\n  getResultIcon,\n  calculateBarWidth,\n  formatDtzDisplay,\n  getMoveResultType,\n} from \"@shared/utils/tablebase/resultClassification\";\n\n/**\n * Props for the MoveEvaluationBar component\n *\n * @interface MoveEvaluationBarProps\n *\n * @description\n * Configuration options for rendering move evaluation bars with\n * visual DTZ feedback and interactive selection.\n */\ninterface MoveEvaluationBarProps {\n  /** The chess move in SAN notation */\n  move: string;\n  /** Distance to Zero value from tablebase */\n  dtz: number;\n  /** Maximum DTZ value in current set for width normalization */\n  maxDtz: number;\n  /** Click handler for move selection */\n  onClick?: () => void;\n  /** Whether this move is currently selected */\n  isSelected?: boolean;\n  /** Additional CSS classes */\n  className?: string;\n  /** Optional category from tablebase data */\n  category?: \"win\" | \"draw\" | \"loss\";\n}\n\n/**\n * Move evaluation bar component\n *\n * @component\n * @description\n * Renders an interactive bar visualization for a single tablebase move.\n * The bar's color and width represent the move's outcome and DTZ value.\n *\n * @remarks\n * Visual design:\n * - Green bars for winning moves\n * - Yellow bars for drawing moves\n * - Red bars for losing moves\n * - Bar width scales with DTZ (longer = more moves to outcome)\n *\n * Interaction:\n * - Click to select the move\n * - Keyboard navigation with Enter/Space\n * - Hover state for visual feedback\n * - Selected state with blue highlight\n *\n * @example\n * ```tsx\n * <MoveEvaluationBar\n *   move=\"Ke2\"\n *   dtz={15}\n *   maxDtz={30}\n *   onClick={() => makeMove(\"Ke2\")}\n *   isSelected={selectedMove === \"Ke2\"}\n * />\n * ```\n *\n * @param {MoveEvaluationBarProps} props - Component configuration\n * @returns {JSX.Element} Rendered evaluation bar\n */\nexport const MoveEvaluationBar: React.FC<MoveEvaluationBarProps> = ({\n  move,\n  dtz,\n  maxDtz,\n  onClick,\n  isSelected = false,\n  className = \"\",\n  category,\n}) => {\n  const resultType: MoveResultType = category || getMoveResultType(dtz);\n  const barWidth = calculateBarWidth(dtz, maxDtz);\n  const barColor = getEvaluationBarColor(resultType);\n  const dtzDisplay = formatDtzDisplay(dtz);\n\n  const getTextColorClass = (type: MoveResultType): string => {\n    switch (type) {\n      case \"win\":\n        return \"text-green-600 dark:text-green-400\";\n      case \"draw\":\n        return \"text-yellow-600 dark:text-yellow-400\";\n      case \"loss\":\n        return \"text-red-600 dark:text-red-400\";\n      default:\n        return \"text-gray-600 dark:text-gray-400\";\n    }\n  };\n\n  return (\n    <div\n      className={`\n        relative flex items-center justify-between py-2 px-3 \n        cursor-pointer transition-all duration-200 hover:bg-gray-50 dark:hover:bg-gray-800/50\n        ${isSelected ? \"bg-blue-50 dark:bg-blue-900/20\" : \"\"}\n        ${className}\n      `}\n      onClick={onClick}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={`Move ${move}, ${dtzDisplay}`}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          onClick?.();\n        }\n      }}\n    >\n      {/* Subtle background evaluation bar */}\n      <div\n        className={`\n          absolute left-0 top-0 bottom-0 opacity-5 transition-all duration-300\n          ${barColor}\n        `}\n        style={{ width: `${barWidth}%` }}\n        aria-hidden=\"true\"\n      />\n\n      {/* Move content */}\n      <div className=\"relative z-10 flex items-center justify-between w-full\">\n        <div className=\"flex items-center space-x-3\">\n          {/* Move notation */}\n          <span\n            className={`font-mono font-medium text-sm ${getTextColorClass(resultType)}`}\n          >\n            {move}\n          </span>\n        </div>\n\n        {/* DTZ display */}\n        <div className=\"flex items-center space-x-2\">\n          <span\n            className={`text-xs font-medium ${getTextColorClass(resultType)}`}\n          >\n{dtzDisplay}\n          </span>\n\n          {/* Accessibility-friendly result indicator */}\n          <span className=\"sr-only\">{dtzDisplay}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Compact move evaluation bar component\n *\n * @component\n * @description\n * A condensed version of MoveEvaluationBar designed for space-constrained\n * layouts. Maintains the same functionality with reduced visual footprint.\n *\n * @remarks\n * Differences from standard version:\n * - Reduced padding and smaller font sizes\n * - Icons instead of text labels\n * - Simplified DTZ display\n * - Rounded corners for better visual separation\n *\n * Use this variant when:\n * - Displaying many moves in a limited space\n * - Mobile or responsive layouts\n * - Sidebar or panel contexts\n *\n * @example\n * ```tsx\n * <CompactMoveEvaluationBar\n *   move=\"Kb1\"\n *   dtz={-20}\n *   maxDtz={50}\n *   onClick={() => selectMove(\"Kb1\")}\n *   category=\"loss\"\n * />\n * ```\n *\n * @param {MoveEvaluationBarProps} props - Component configuration\n * @returns {JSX.Element} Rendered compact evaluation bar\n */\nexport const CompactMoveEvaluationBar: React.FC<MoveEvaluationBarProps> = ({\n  move,\n  dtz,\n  maxDtz,\n  onClick,\n  isSelected = false,\n  className = \"\",\n  category,\n}) => {\n  const resultType: MoveResultType = category || getMoveResultType(dtz);\n  const barWidth = calculateBarWidth(dtz, maxDtz);\n  const barColor = getEvaluationBarColor(resultType);\n  const icon = getResultIcon(resultType);\n\n  return (\n    <div\n      className={`\n        relative flex items-center justify-between py-1 px-2 rounded\n        cursor-pointer transition-all duration-200 hover:bg-gray-100\n        ${isSelected ? \"bg-blue-50 border-blue-300\" : \"\"}\n        ${className}\n      `}\n      onClick={onClick}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={`Move ${move}, DTZ ${Math.abs(dtz)}`}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          onClick?.();\n        }\n      }}\n    >\n      {/* Background evaluation bar */}\n      <div\n        className={`\n          absolute inset-0 rounded opacity-10 transition-all duration-300\n          ${barColor}\n        `}\n        style={{ width: `${barWidth}%` }}\n        aria-hidden=\"true\"\n      />\n\n      {/* Compact content */}\n      <div className=\"relative z-10 flex items-center justify-between w-full\">\n        <div className=\"flex items-center space-x-1\">\n          <span className=\"text-xs\" aria-hidden=\"true\">\n            {icon}\n          </span>\n          <span className=\"font-mono font-bold text-sm\">{move}</span>\n        </div>\n\n        <span className=\"text-xs text-gray-600\">\n          {dtz === 0 ? \"0\" : Math.abs(dtz)}\n        </span>\n      </div>\n    </div>\n  );\n};\n"],"names":["CompactMoveEvaluationBar","MoveEvaluationBar","move","dtz","maxDtz","onClick","isSelected","className","category","resultType","getMoveResultType","barWidth","calculateBarWidth","barColor","getEvaluationBarColor","dtzDisplay","formatDtzDisplay","getTextColorClass","type","div","role","tabIndex","aria-label","onKeyDown","e","key","preventDefault","style","width","aria-hidden","span","icon","getResultIcon","Math","abs"],"mappings":"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"}