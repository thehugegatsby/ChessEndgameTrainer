{"version":3,"names":["cov_2nhg48k0ee","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","LichessTablebaseResponseSchema","TablebaseMoveSchema","_zod","z","object","uci","string","san","category","dtz","number","nullable","dtm","zeroing","boolean","optional","default","checkmate","stalemate","variant_win","variant_loss","insufficient_material","precise_dtz","union","dtw","dtc","moves","array"],"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/types/tablebaseSchemas.ts"],"sourcesContent":["/**\n * Zod schemas for Lichess Tablebase API responses\n *\n * @remarks\n * These schemas validate the shape of API responses to ensure\n * data integrity at service boundaries. They provide type safety\n * and clear documentation of the expected API contract.\n */\n\nimport { z } from \"zod\";\n\n/**\n * Schema for individual moves in tablebase response\n */\nexport const TablebaseMoveSchema = z.object({\n  uci: z.string(),\n  san: z.string(),\n  category: z.string(),\n  dtz: z.number().nullable(),\n  dtm: z.number().nullable(),\n  zeroing: z.boolean().optional().default(false),\n  checkmate: z.boolean().optional().default(false),\n  stalemate: z.boolean().optional().default(false),\n  variant_win: z.boolean().optional().default(false),\n  variant_loss: z.boolean().optional().default(false),\n  insufficient_material: z.boolean().optional().default(false),\n});\n\n/**\n * Schema for main tablebase API response\n */\nexport const LichessTablebaseResponseSchema = z.object({\n  category: z.string(), // Required - every position has a category\n  dtz: z.number().nullable(), // Required but can be null\n  dtm: z.number().nullable().optional(), // Optional - not always present in API response\n  precise_dtz: z.union([z.number(), z.boolean()]).optional(), // Can be number or boolean\n  dtw: z.number().nullable().optional(), // Add missing fields from actual API\n  dtc: z.number().nullable().optional(),\n  checkmate: z.boolean().optional().default(false),\n  stalemate: z.boolean().optional().default(false),\n  variant_win: z.boolean().optional().default(false),\n  variant_loss: z.boolean().optional().default(false),\n  insufficient_material: z.boolean().optional().default(false),\n  moves: z.array(TablebaseMoveSchema).optional().default([]),\n});\n"],"mappings":"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","ignoreList":[]}