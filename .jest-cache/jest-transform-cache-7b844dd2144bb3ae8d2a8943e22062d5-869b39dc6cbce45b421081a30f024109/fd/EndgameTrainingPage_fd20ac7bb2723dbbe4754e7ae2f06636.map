{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/pages/EndgameTrainingPage.tsx"],"sourcesContent":["\"use client\";\n\n// CRITICAL DEBUG: Test if client-side JavaScript is running\nconsole.log(\n  \"üöÄ CLIENT-SIDE: EndgameTrainingPage module is loading!\",\n  new Date().toISOString(),\n);\n\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  TrainingBoard,\n  MovePanelZustand,\n  NavigationControls,\n} from \"@shared/components/training\";\nimport { TablebaseAnalysisPanel } from \"@shared/components/training/TablebaseAnalysisPanel\";\nimport { AdvancedEndgameMenu } from \"@shared/components/navigation/AdvancedEndgameMenu\";\n// EndgamePosition import no longer needed - position comes from store\nimport { useToast } from \"@shared/hooks/useToast\";\nimport { ToastContainer } from \"@shared/components/ui/Toast\";\nimport { getGameStatus } from \"@shared/utils/chess/gameStatus\";\nimport {\n  useGameStore,\n  useTrainingStore,\n  useUIStore,\n} from \"@shared/store/hooks\";\n// useInitializePosition no longer needed - SSR hydration handles initialization\nimport {\n  getTrainingDisplayTitle,\n  formatPositionTitle,\n} from \"@shared/utils/titleFormatter\";\nimport { ANIMATION } from \"@shared/constants\";\n\n// No props needed anymore - all data comes from hydrated store\n\n/**\n * Endgame training page component using Zustand store\n * Provides the main training interface for endgame positions\n * All position data comes from the pre-hydrated store state\n */\nexport const EndgameTrainingPage: React.FC = React.memo(() => {\n  // Next.js router\n  const router = useRouter();\n\n  // Zustand store hooks - consolidated\n  const [gameState, gameActions] = useGameStore();\n  const [trainingState, trainingActions] = useTrainingStore();\n  const [uiState, uiActions] = useUIStore();\n\n  // Toast hook - keep for showSuccess/showError, but we'll use store toasts for display\n  const { showSuccess, showError } = useToast();\n\n  // Local UI state\n  const [resetKey, setResetKey] = useState<number>(0);\n\n  // The position now comes directly from the hydrated store\n  const position = trainingState.currentPosition;\n\n  // Debug: Log component state\n  console.debug(\"üè† EndgameTrainingPage rendered\", {\n    hasPosition: !!position,\n    positionId: position?.id,\n    positionFen: position?.fen,\n    currentFen: gameState.currentFen,\n    timestamp: new Date().toISOString(),\n  });\n\n  // Extract actions to avoid dependency issues\n  const { completeTraining } = trainingActions;\n\n  // Early return if position is not available (shouldn't happen with SSR hydration)\n  if (!position) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-lg text-gray-600\">Position wird geladen...</div>\n      </div>\n    );\n  }\n\n  // Game status - MUST be before any conditional returns (React Hook Rules)\n  const gameStatus = useMemo(\n    () => getGameStatus(gameState.currentFen || position.fen, position.goal),\n    [gameState.currentFen, position.fen, position.goal],\n  );\n\n  // Navigation data from store\n  const prevPosition = trainingState.previousPosition;\n  const nextPosition = trainingState.nextPosition;\n  const isLoadingNavigation = trainingState.isLoadingNavigation;\n\n  const handleComplete = useCallback(\n    (isSuccess: boolean) => {\n      if (isSuccess) {\n        showSuccess(\n          \"Geschafft! Position erfolgreich gel√∂st!\",\n          ANIMATION.SUCCESS_TOAST_DURATION,\n        );\n      } else {\n        showError(\"Versuch es erneut\", ANIMATION.ERROR_TOAST_DURATION);\n      }\n      completeTraining(isSuccess);\n    },\n    [completeTraining, showSuccess, showError],\n  );\n\n  const handleResetPosition = useCallback(() => {\n    gameActions.resetGame();\n    setResetKey((prev) => prev + 1);\n  }, [gameActions]);\n\n  const handleMoveClick = useCallback(\n    (moveIndex: number) => {\n      // Navigate to the clicked move\n      gameActions.goToMove(moveIndex);\n    },\n    [gameActions],\n  );\n\n  const handleToggleAnalysis = useCallback(() => {\n    uiActions.updateAnalysisPanel({ isOpen: !uiState.analysisPanel.isOpen });\n  }, [uiActions, uiState]);\n\n  const getLichessUrl = useCallback(() => {\n    const currentFen = gameState.currentFen || position.fen;\n\n    // Use PGN if we have moves in the history\n    // PGN includes the starting FEN and all moves, providing full context\n    if (gameState.currentPgn && gameState.moveHistory.length > 0) {\n      // Lichess accepts PGN in the URL for complete game analysis\n      return `https://lichess.org/analysis/pgn/${encodeURIComponent(gameState.currentPgn)}`;\n    }\n\n    // Fallback to FEN-only URL for positions without move history\n    return `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n  }, [\n    gameState.currentPgn,\n    gameState.moveHistory.length,\n    gameState.currentFen,\n    position.fen,\n  ]);\n\n  // No longer needed - SSR hydration ensures position is available on first render\n\n  return (\n    <div className=\"trainer-container h-screen flex bg-slate-800 text-white\">\n      <ToastContainer\n        toasts={uiState.toasts}\n        onRemoveToast={(id) => uiActions.removeToast(id)}\n      />\n\n      {/* Left Menu */}\n      <AdvancedEndgameMenu\n        isOpen={true}\n        onClose={() => {}}\n        currentPositionId={position.id}\n      />\n\n      {/* Main Content - Horizontal Layout like Lichess - Full Screen */}\n      <div className=\"main-content flex-1 flex h-full mr-80\">\n        {/* Chessboard Area */}\n        <div className=\"chessboard-wrapper flex-[5] h-full relative\">\n          {/* Progress Header centered above board - always show for E2E test visibility */}\n          <div\n            className=\"absolute top-24 left-0 right-0 text-center pointer-events-none\"\n            data-testid=\"position-title\"\n            style={{ zIndex: 5 }}\n          >\n            <h2 className=\"text-3xl font-bold\">\n              {getTrainingDisplayTitle(\n                position,\n                gameState.moveHistory?.length || 0,\n              )}\n            </h2>\n          </div>\n\n          <div className=\"w-full h-full flex items-center justify-center\">\n            <TrainingBoard\n              key={`${position.id}-${resetKey}`}\n              position={position}\n              onComplete={() => handleComplete(true)}\n            />\n          </div>\n        </div>\n\n        {/* Floating Sidebar */}\n        <div className=\"sidebar fixed right-0 top-0 bottom-0 w-80 bg-gray-900 border-l border-gray-700 flex flex-col z-20 overflow-y-auto\">\n          {/* Navigation between positions */}\n          <div className=\"nav-section p-4 border-b border-gray-700\">\n            <h3 className=\"text-sm font-semibold text-gray-400 mb-2 text-center\">\n              Stellungsnavigation\n            </h3>\n            <div className=\"flex items-center justify-center gap-4\">\n              <button\n                onClick={() =>\n                  prevPosition && router.push(`/train/${prevPosition.id}`)\n                }\n                disabled={!prevPosition || isLoadingNavigation}\n                className=\"p-2 hover:bg-gray-800 rounded disabled:opacity-30 transition-colors\"\n                title=\"Vorherige Stellung\"\n              >\n                <span className=\"text-lg\">\n                  {isLoadingNavigation ? \"‚è≥\" : \"‚Üê\"} Vorherige Stellung\n                </span>\n              </button>\n              <button\n                onClick={handleResetPosition}\n                className=\"p-2 hover:bg-gray-800 rounded transition-colors\"\n                title=\"Position zur√ºcksetzen\"\n              >\n                <span className=\"text-lg\">‚Üª</span>\n              </button>\n              <button\n                onClick={() =>\n                  nextPosition && router.push(`/train/${nextPosition.id}`)\n                }\n                disabled={!nextPosition || isLoadingNavigation}\n                className=\"p-2 hover:bg-gray-800 rounded disabled:opacity-30 transition-colors\"\n                title=\"N√§chste Stellung\"\n              >\n                <span className=\"text-lg\">\n                  N√§chste Stellung {isLoadingNavigation ? \"‚è≥\" : \"‚Üí\"}\n                </span>\n              </button>\n            </div>\n          </div>\n\n          {/* Game Status */}\n          <div className=\"game-status p-4 border-b border-gray-700\">\n            <div className=\"text-sm font-medium flex items-center gap-2\">\n              <span className=\"text-base\">‚ôî</span>\n              {gameStatus.sideToMoveDisplay}\n            </div>\n            <div className=\"text-xs text-gray-300 mt-1\">\n              {gameStatus.objectiveDisplay}\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className=\"instructions p-4 border-b border-gray-700\">\n            <h3 className=\"font-bold mb-2\">{formatPositionTitle(position)}</h3>\n            <p className=\"text-sm text-gray-400\">{position.description}</p>\n          </div>\n\n          {/* Toggles */}\n          <div className=\"toggles p-4 border-b border-gray-700\">\n            <button\n              onClick={handleToggleAnalysis}\n              data-testid=\"toggle-analysis\"\n              className={`w-full p-2 rounded mb-2 transition-colors ${\n                uiState.analysisPanel.isOpen\n                  ? \"bg-blue-600 hover:bg-blue-700\"\n                  : \"bg-gray-700 hover:bg-gray-600\"\n              }`}\n            >\n              Analyse {uiState.analysisPanel.isOpen ? \"AUS\" : \"AN\"}\n            </button>\n\n            <TablebaseAnalysisPanel\n              fen={gameState.currentFen || position.fen}\n              isVisible={uiState.analysisPanel.isOpen}\n              previousFen={\n                gameState.moveHistory && gameState.moveHistory.length > 0\n                  ? gameState.moveHistory[gameState.moveHistory.length - 1]\n                      ?.fenBefore\n                  : undefined\n              }\n            />\n          </div>\n\n          {/* Move History */}\n          <div className=\"move-history flex-1 p-4 border-b border-gray-700 overflow-y-auto\">\n            <MovePanelZustand\n              showEvaluations={uiState.analysisPanel.isOpen}\n              onMoveClick={handleMoveClick}\n              currentMoveIndex={gameState.currentMoveIndex}\n            />\n            <div className=\"mt-2\">\n              <NavigationControls />\n            </div>\n          </div>\n\n          {/* External Links */}\n          <div className=\"external-links p-4\">\n            <a\n              href={getLichessUrl()}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"block text-center p-2 bg-gray-700 hover:bg-gray-600 rounded transition-colors\"\n            >\n              Auf Lichess analysieren ‚Üí\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nEndgameTrainingPage.displayName = \"EndgameTrainingPage\";\n"],"names":["EndgameTrainingPage","console","log","Date","toISOString","React","memo","gameState","router","useRouter","gameActions","useGameStore","trainingState","trainingActions","useTrainingStore","uiState","uiActions","useUIStore","showSuccess","showError","useToast","resetKey","setResetKey","useState","position","currentPosition","debug","hasPosition","positionId","id","positionFen","fen","currentFen","timestamp","completeTraining","div","className","gameStatus","useMemo","getGameStatus","goal","prevPosition","previousPosition","nextPosition","isLoadingNavigation","handleComplete","useCallback","isSuccess","ANIMATION","SUCCESS_TOAST_DURATION","ERROR_TOAST_DURATION","handleResetPosition","resetGame","prev","handleMoveClick","moveIndex","goToMove","handleToggleAnalysis","updateAnalysisPanel","isOpen","analysisPanel","getLichessUrl","currentPgn","moveHistory","length","encodeURIComponent","replace","ToastContainer","toasts","onRemoveToast","removeToast","AdvancedEndgameMenu","onClose","currentPositionId","data-testid","style","zIndex","h2","getTrainingDisplayTitle","TrainingBoard","onComplete","h3","button","onClick","push","disabled","title","span","sideToMoveDisplay","objectiveDisplay","formatPositionTitle","p","description","TablebaseAnalysisPanel","isVisible","previousFen","fenBefore","undefined","MovePanelZustand","showEvaluations","onMoveClick","currentMoveIndex","NavigationControls","a","href","target","rel","displayName"],"mappings":"AAAA;;;;;+BAwCaA;;;eAAAA;;;;+DAhCyC;4BAC5B;0BAKnB;wCACgC;qCACH;0BAEX;uBACM;4BACD;uBAKvB;gCAKA;2BACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7B1B,4DAA4D;AAC5DC,QAAQC,GAAG,CACT,0DACA,IAAIC,OAAOC,WAAW;AAmCjB,MAAMJ,oCAAgCK,cAAK,CAACC,IAAI,CAAC;QAkIxCC,wBA4FIA;IA7NlB,iBAAiB;IACjB,MAAMC,SAASC,IAAAA,qBAAS;IAExB,qCAAqC;IACrC,MAAM,CAACF,WAAWG,YAAY,GAAGC,IAAAA,mBAAY;IAC7C,MAAM,CAACC,eAAeC,gBAAgB,GAAGC,IAAAA,uBAAgB;IACzD,MAAM,CAACC,SAASC,UAAU,GAAGC,IAAAA,iBAAU;IAEvC,sFAAsF;IACtF,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAE,GAAGC,IAAAA,kBAAQ;IAE3C,iBAAiB;IACjB,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAS;IAEjD,0DAA0D;IAC1D,MAAMC,WAAWZ,cAAca,eAAe;IAE9C,6BAA6B;IAC7BxB,QAAQyB,KAAK,CAAC,mCAAmC;QAC/CC,aAAa,CAAC,CAACH;QACfI,UAAU,EAAEJ,qBAAAA,+BAAAA,SAAUK,EAAE;QACxBC,WAAW,EAAEN,qBAAAA,+BAAAA,SAAUO,GAAG;QAC1BC,YAAYzB,UAAUyB,UAAU;QAChCC,WAAW,IAAI9B,OAAOC,WAAW;IACnC;IAEA,6CAA6C;IAC7C,MAAM,EAAE8B,gBAAgB,EAAE,GAAGrB;IAE7B,kFAAkF;IAClF,IAAI,CAACW,UAAU;QACb,qBACE,qBAACW;YAAIC,WAAU;sBACb,cAAA,qBAACD;gBAAIC,WAAU;0BAAwB;;;IAG7C;IAEA,0EAA0E;IAC1E,MAAMC,aAAaC,IAAAA,cAAO,EACxB,IAAMC,IAAAA,yBAAa,EAAChC,UAAUyB,UAAU,IAAIR,SAASO,GAAG,EAAEP,SAASgB,IAAI,GACvE;QAACjC,UAAUyB,UAAU;QAAER,SAASO,GAAG;QAAEP,SAASgB,IAAI;KAAC;IAGrD,6BAA6B;IAC7B,MAAMC,eAAe7B,cAAc8B,gBAAgB;IACnD,MAAMC,eAAe/B,cAAc+B,YAAY;IAC/C,MAAMC,sBAAsBhC,cAAcgC,mBAAmB;IAE7D,MAAMC,iBAAiBC,IAAAA,kBAAW,EAChC,CAACC;QACC,IAAIA,WAAW;YACb7B,YACE,2CACA8B,oBAAS,CAACC,sBAAsB;QAEpC,OAAO;YACL9B,UAAU,qBAAqB6B,oBAAS,CAACE,oBAAoB;QAC/D;QACAhB,iBAAiBa;IACnB,GACA;QAACb;QAAkBhB;QAAaC;KAAU;IAG5C,MAAMgC,sBAAsBL,IAAAA,kBAAW,EAAC;QACtCpC,YAAY0C,SAAS;QACrB9B,YAAY,CAAC+B,OAASA,OAAO;IAC/B,GAAG;QAAC3C;KAAY;IAEhB,MAAM4C,kBAAkBR,IAAAA,kBAAW,EACjC,CAACS;QACC,+BAA+B;QAC/B7C,YAAY8C,QAAQ,CAACD;IACvB,GACA;QAAC7C;KAAY;IAGf,MAAM+C,uBAAuBX,IAAAA,kBAAW,EAAC;QACvC9B,UAAU0C,mBAAmB,CAAC;YAAEC,QAAQ,CAAC5C,QAAQ6C,aAAa,CAACD,MAAM;QAAC;IACxE,GAAG;QAAC3C;QAAWD;KAAQ;IAEvB,MAAM8C,gBAAgBf,IAAAA,kBAAW,EAAC;QAChC,MAAMd,aAAazB,UAAUyB,UAAU,IAAIR,SAASO,GAAG;QAEvD,0CAA0C;QAC1C,sEAAsE;QACtE,IAAIxB,UAAUuD,UAAU,IAAIvD,UAAUwD,WAAW,CAACC,MAAM,GAAG,GAAG;YAC5D,4DAA4D;YAC5D,OAAO,CAAC,iCAAiC,EAAEC,mBAAmB1D,UAAUuD,UAAU,GAAG;QACvF;QAEA,8DAA8D;QAC9D,OAAO,CAAC,6BAA6B,EAAE9B,WAAWkC,OAAO,CAAC,MAAM,MAAM;IACxE,GAAG;QACD3D,UAAUuD,UAAU;QACpBvD,UAAUwD,WAAW,CAACC,MAAM;QAC5BzD,UAAUyB,UAAU;QACpBR,SAASO,GAAG;KACb;IAED,iFAAiF;IAEjF,qBACE,sBAACI;QAAIC,WAAU;;0BACb,qBAAC+B,qBAAc;gBACbC,QAAQrD,QAAQqD,MAAM;gBACtBC,eAAe,CAACxC,KAAOb,UAAUsD,WAAW,CAACzC;;0BAI/C,qBAAC0C,wCAAmB;gBAClBZ,QAAQ;gBACRa,SAAS,KAAO;gBAChBC,mBAAmBjD,SAASK,EAAE;;0BAIhC,sBAACM;gBAAIC,WAAU;;kCAEb,sBAACD;wBAAIC,WAAU;;0CAEb,qBAACD;gCACCC,WAAU;gCACVsC,eAAY;gCACZC,OAAO;oCAAEC,QAAQ;gCAAE;0CAEnB,cAAA,qBAACC;oCAAGzC,WAAU;8CACX0C,IAAAA,uCAAuB,EACtBtD,UACAjB,EAAAA,yBAAAA,UAAUwD,WAAW,cAArBxD,6CAAAA,uBAAuByD,MAAM,KAAI;;;0CAKvC,qBAAC7B;gCAAIC,WAAU;0CACb,cAAA,qBAAC2C,uBAAa;oCAEZvD,UAAUA;oCACVwD,YAAY,IAAMnC,eAAe;mCAF5B,GAAGrB,SAASK,EAAE,CAAC,CAAC,EAAER,UAAU;;;;kCAQvC,sBAACc;wBAAIC,WAAU;;0CAEb,sBAACD;gCAAIC,WAAU;;kDACb,qBAAC6C;wCAAG7C,WAAU;kDAAuD;;kDAGrE,sBAACD;wCAAIC,WAAU;;0DACb,qBAAC8C;gDACCC,SAAS,IACP1C,gBAAgBjC,OAAO4E,IAAI,CAAC,CAAC,OAAO,EAAE3C,aAAaZ,EAAE,EAAE;gDAEzDwD,UAAU,CAAC5C,gBAAgBG;gDAC3BR,WAAU;gDACVkD,OAAM;0DAEN,cAAA,sBAACC;oDAAKnD,WAAU;;wDACbQ,sBAAsB,MAAM;wDAAI;;;;0DAGrC,qBAACsC;gDACCC,SAAShC;gDACTf,WAAU;gDACVkD,OAAM;0DAEN,cAAA,qBAACC;oDAAKnD,WAAU;8DAAU;;;0DAE5B,qBAAC8C;gDACCC,SAAS,IACPxC,gBAAgBnC,OAAO4E,IAAI,CAAC,CAAC,OAAO,EAAEzC,aAAad,EAAE,EAAE;gDAEzDwD,UAAU,CAAC1C,gBAAgBC;gDAC3BR,WAAU;gDACVkD,OAAM;0DAEN,cAAA,sBAACC;oDAAKnD,WAAU;;wDAAU;wDACNQ,sBAAsB,MAAM;;;;;;;;0CAOtD,sBAACT;gCAAIC,WAAU;;kDACb,sBAACD;wCAAIC,WAAU;;0DACb,qBAACmD;gDAAKnD,WAAU;0DAAY;;4CAC3BC,WAAWmD,iBAAiB;;;kDAE/B,qBAACrD;wCAAIC,WAAU;kDACZC,WAAWoD,gBAAgB;;;;0CAKhC,sBAACtD;gCAAIC,WAAU;;kDACb,qBAAC6C;wCAAG7C,WAAU;kDAAkBsD,IAAAA,mCAAmB,EAAClE;;kDACpD,qBAACmE;wCAAEvD,WAAU;kDAAyBZ,SAASoE,WAAW;;;;0CAI5D,sBAACzD;gCAAIC,WAAU;;kDACb,sBAAC8C;wCACCC,SAAS1B;wCACTiB,eAAY;wCACZtC,WAAW,CAAC,0CAA0C,EACpDrB,QAAQ6C,aAAa,CAACD,MAAM,GACxB,kCACA,iCACJ;;4CACH;4CACU5C,QAAQ6C,aAAa,CAACD,MAAM,GAAG,QAAQ;;;kDAGlD,qBAACkC,8CAAsB;wCACrB9D,KAAKxB,UAAUyB,UAAU,IAAIR,SAASO,GAAG;wCACzC+D,WAAW/E,QAAQ6C,aAAa,CAACD,MAAM;wCACvCoC,aACExF,UAAUwD,WAAW,IAAIxD,UAAUwD,WAAW,CAACC,MAAM,GAAG,KACpDzD,0BAAAA,UAAUwD,WAAW,CAACxD,UAAUwD,WAAW,CAACC,MAAM,GAAG,EAAE,cAAvDzD,8CAAAA,wBACIyF,SAAS,GACbC;;;;0CAMV,sBAAC9D;gCAAIC,WAAU;;kDACb,qBAAC8D,0BAAgB;wCACfC,iBAAiBpF,QAAQ6C,aAAa,CAACD,MAAM;wCAC7CyC,aAAa9C;wCACb+C,kBAAkB9F,UAAU8F,gBAAgB;;kDAE9C,qBAAClE;wCAAIC,WAAU;kDACb,cAAA,qBAACkE,4BAAkB;;;;0CAKvB,qBAACnE;gCAAIC,WAAU;0CACb,cAAA,qBAACmE;oCACCC,MAAM3C;oCACN4C,QAAO;oCACPC,KAAI;oCACJtE,WAAU;8CACX;;;;;;;;;AAQb;AAEApC,oBAAoB2G,WAAW,GAAG"}