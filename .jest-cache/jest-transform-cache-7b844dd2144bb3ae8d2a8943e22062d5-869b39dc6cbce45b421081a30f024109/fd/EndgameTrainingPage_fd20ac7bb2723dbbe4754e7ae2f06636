8cd7f35f166e707c5c840eb49b0c4199
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EndgameTrainingPage", {
    enumerable: true,
    get: function() {
        return EndgameTrainingPage;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _navigation = require("next/navigation");
const _training = require("../components/training");
const _TablebaseAnalysisPanel = require("../components/training/TablebaseAnalysisPanel");
const _AdvancedEndgameMenu = require("../components/navigation/AdvancedEndgameMenu");
const _useToast = require("../hooks/useToast");
const _Toast = require("../components/ui/Toast");
const _gameStatus = require("../utils/chess/gameStatus");
const _hooks = require("../store/hooks");
const _titleFormatter = require("../utils/titleFormatter");
const _constants = require("../constants");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// CRITICAL DEBUG: Test if client-side JavaScript is running
console.log("🚀 CLIENT-SIDE: EndgameTrainingPage module is loading!", new Date().toISOString());
const EndgameTrainingPage = /*#__PURE__*/ _react.default.memo(()=>{
    var _gameState_moveHistory, _gameState_moveHistory_;
    // Next.js router
    const router = (0, _navigation.useRouter)();
    // Zustand store hooks - consolidated
    const [gameState, gameActions] = (0, _hooks.useGameStore)();
    const [trainingState, trainingActions] = (0, _hooks.useTrainingStore)();
    const [uiState, uiActions] = (0, _hooks.useUIStore)();
    // Toast hook - keep for showSuccess/showError, but we'll use store toasts for display
    const { showSuccess, showError } = (0, _useToast.useToast)();
    // Local UI state
    const [resetKey, setResetKey] = (0, _react.useState)(0);
    // The position now comes directly from the hydrated store
    const position = trainingState.currentPosition;
    // Debug: Log component state
    console.debug("🏠 EndgameTrainingPage rendered", {
        hasPosition: !!position,
        positionId: position === null || position === void 0 ? void 0 : position.id,
        positionFen: position === null || position === void 0 ? void 0 : position.fen,
        currentFen: gameState.currentFen,
        timestamp: new Date().toISOString()
    });
    // Extract actions to avoid dependency issues
    const { completeTraining } = trainingActions;
    // Early return if position is not available (shouldn't happen with SSR hydration)
    if (!position) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "flex items-center justify-center min-h-screen",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "text-lg text-gray-600",
                children: "Position wird geladen..."
            })
        });
    }
    // Game status - MUST be before any conditional returns (React Hook Rules)
    const gameStatus = (0, _react.useMemo)(()=>(0, _gameStatus.getGameStatus)(gameState.currentFen || position.fen, position.goal), [
        gameState.currentFen,
        position.fen,
        position.goal
    ]);
    // Navigation data from store
    const prevPosition = trainingState.previousPosition;
    const nextPosition = trainingState.nextPosition;
    const isLoadingNavigation = trainingState.isLoadingNavigation;
    const handleComplete = (0, _react.useCallback)((isSuccess)=>{
        if (isSuccess) {
            showSuccess("Geschafft! Position erfolgreich gelöst!", _constants.ANIMATION.SUCCESS_TOAST_DURATION);
        } else {
            showError("Versuch es erneut", _constants.ANIMATION.ERROR_TOAST_DURATION);
        }
        completeTraining(isSuccess);
    }, [
        completeTraining,
        showSuccess,
        showError
    ]);
    const handleResetPosition = (0, _react.useCallback)(()=>{
        gameActions.resetGame();
        setResetKey((prev)=>prev + 1);
    }, [
        gameActions
    ]);
    const handleMoveClick = (0, _react.useCallback)((moveIndex)=>{
        // Navigate to the clicked move
        gameActions.goToMove(moveIndex);
    }, [
        gameActions
    ]);
    const handleToggleAnalysis = (0, _react.useCallback)(()=>{
        uiActions.updateAnalysisPanel({
            isOpen: !uiState.analysisPanel.isOpen
        });
    }, [
        uiActions,
        uiState
    ]);
    const getLichessUrl = (0, _react.useCallback)(()=>{
        const currentFen = gameState.currentFen || position.fen;
        // Use PGN if we have moves in the history
        // PGN includes the starting FEN and all moves, providing full context
        if (gameState.currentPgn && gameState.moveHistory.length > 0) {
            // Lichess accepts PGN in the URL for complete game analysis
            return `https://lichess.org/analysis/pgn/${encodeURIComponent(gameState.currentPgn)}`;
        }
        // Fallback to FEN-only URL for positions without move history
        return `https://lichess.org/analysis/${currentFen.replace(/ /g, "_")}`;
    }, [
        gameState.currentPgn,
        gameState.moveHistory.length,
        gameState.currentFen,
        position.fen
    ]);
    // No longer needed - SSR hydration ensures position is available on first render
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "trainer-container h-screen flex bg-slate-800 text-white",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_Toast.ToastContainer, {
                toasts: uiState.toasts,
                onRemoveToast: (id)=>uiActions.removeToast(id)
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_AdvancedEndgameMenu.AdvancedEndgameMenu, {
                isOpen: true,
                onClose: ()=>{},
                currentPositionId: position.id
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "main-content flex-1 flex h-full mr-80",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "chessboard-wrapper flex-[5] h-full relative",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "absolute top-24 left-0 right-0 text-center pointer-events-none",
                                "data-testid": "position-title",
                                style: {
                                    zIndex: 5
                                },
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                    className: "text-3xl font-bold",
                                    children: (0, _titleFormatter.getTrainingDisplayTitle)(position, ((_gameState_moveHistory = gameState.moveHistory) === null || _gameState_moveHistory === void 0 ? void 0 : _gameState_moveHistory.length) || 0)
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-full h-full flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_training.TrainingBoard, {
                                    position: position,
                                    onComplete: ()=>handleComplete(true)
                                }, `${position.id}-${resetKey}`)
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "sidebar fixed right-0 top-0 bottom-0 w-80 bg-gray-900 border-l border-gray-700 flex flex-col z-20 overflow-y-auto",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "nav-section p-4 border-b border-gray-700",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                        className: "text-sm font-semibold text-gray-400 mb-2 text-center",
                                        children: "Stellungsnavigation"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center justify-center gap-4",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: ()=>prevPosition && router.push(`/train/${prevPosition.id}`),
                                                disabled: !prevPosition || isLoadingNavigation,
                                                className: "p-2 hover:bg-gray-800 rounded disabled:opacity-30 transition-colors",
                                                title: "Vorherige Stellung",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "text-lg",
                                                    children: [
                                                        isLoadingNavigation ? "⏳" : "←",
                                                        " Vorherige Stellung"
                                                    ]
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: handleResetPosition,
                                                className: "p-2 hover:bg-gray-800 rounded transition-colors",
                                                title: "Position zurücksetzen",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-lg",
                                                    children: "↻"
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: ()=>nextPosition && router.push(`/train/${nextPosition.id}`),
                                                disabled: !nextPosition || isLoadingNavigation,
                                                className: "p-2 hover:bg-gray-800 rounded disabled:opacity-30 transition-colors",
                                                title: "Nächste Stellung",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "text-lg",
                                                    children: [
                                                        "Nächste Stellung ",
                                                        isLoadingNavigation ? "⏳" : "→"
                                                    ]
                                                })
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "game-status p-4 border-b border-gray-700",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "text-sm font-medium flex items-center gap-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "text-base",
                                                children: "♔"
                                            }),
                                            gameStatus.sideToMoveDisplay
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-xs text-gray-300 mt-1",
                                        children: gameStatus.objectiveDisplay
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "instructions p-4 border-b border-gray-700",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                        className: "font-bold mb-2",
                                        children: (0, _titleFormatter.formatPositionTitle)(position)
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-sm text-gray-400",
                                        children: position.description
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "toggles p-4 border-b border-gray-700",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                        onClick: handleToggleAnalysis,
                                        "data-testid": "toggle-analysis",
                                        className: `w-full p-2 rounded mb-2 transition-colors ${uiState.analysisPanel.isOpen ? "bg-blue-600 hover:bg-blue-700" : "bg-gray-700 hover:bg-gray-600"}`,
                                        children: [
                                            "Analyse ",
                                            uiState.analysisPanel.isOpen ? "AUS" : "AN"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_TablebaseAnalysisPanel.TablebaseAnalysisPanel, {
                                        fen: gameState.currentFen || position.fen,
                                        isVisible: uiState.analysisPanel.isOpen,
                                        previousFen: gameState.moveHistory && gameState.moveHistory.length > 0 ? (_gameState_moveHistory_ = gameState.moveHistory[gameState.moveHistory.length - 1]) === null || _gameState_moveHistory_ === void 0 ? void 0 : _gameState_moveHistory_.fenBefore : undefined
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "move-history flex-1 p-4 border-b border-gray-700 overflow-y-auto",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_training.MovePanelZustand, {
                                        showEvaluations: uiState.analysisPanel.isOpen,
                                        onMoveClick: handleMoveClick,
                                        currentMoveIndex: gameState.currentMoveIndex
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "mt-2",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_training.NavigationControls, {})
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "external-links p-4",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                    href: getLichessUrl(),
                                    target: "_blank",
                                    rel: "noopener noreferrer",
                                    className: "block text-center p-2 bg-gray-700 hover:bg-gray-600 rounded transition-colors",
                                    children: "Auf Lichess analysieren →"
                                })
                            })
                        ]
                    })
                ]
            })
        ]
    });
});
EndgameTrainingPage.displayName = "EndgameTrainingPage";

//# sourceMappingURL=data:application/json;base64,