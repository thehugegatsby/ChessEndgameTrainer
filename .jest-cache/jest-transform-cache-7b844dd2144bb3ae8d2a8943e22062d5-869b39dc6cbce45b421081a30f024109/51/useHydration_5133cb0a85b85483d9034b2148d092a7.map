{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/hooks/useHydration.ts"],"sourcesContent":["/**\n * @file Hydration hooks for Zustand store persistence\n * @module hooks/useHydration\n *\n * @description\n * Provides hooks to check if the Zustand store has been hydrated from persisted storage.\n * Essential for preventing UI flicker and ensuring correct initial state in SSR environments.\n */\n\nimport { useEffect, useState } from \"react\";\nimport { useStore, useStoreApi } from \"@shared/store/StoreContext\";\n\n/**\n * Hook to check if Zustand store has been hydrated from persisted storage\n *\n * @description\n * This hook prevents UI flicker by waiting for localStorage/sessionStorage data to load.\n * Particularly important for SSR/SSG applications where the server and client may have\n * different initial states until hydration completes.\n *\n * @returns {boolean} Whether the store has been hydrated from persistent storage\n *\n * @example\n * ```tsx\n * function App() {\n *   const hasHydrated = useHydration();\n *\n *   if (!hasHydrated) {\n *     return <LoadingSpinner />; // or null to prevent flicker\n *   }\n *\n *   return <MainContent />;\n * }\n * ```\n *\n * @remarks\n * - Uses Zustand's persist middleware API\n * - Returns true immediately if persist is not configured\n * - Automatically cleans up listeners on unmount\n * - Safe to use in SSR environments\n */\nexport function useHydration(): boolean {\n  const [hasHydrated, setHasHydrated] = useState(false);\n  const storeApi = useStoreApi();\n\n  useEffect(() => {\n    // Access the internal persist API to check hydration status\n    const unsubscribe = (storeApi as any).persist?.onFinishHydration(() => {\n      setHasHydrated(true);\n    });\n\n    // If persist is not configured or hydration already finished\n    if (!(storeApi as any).persist || (storeApi as any).persist.hasHydrated()) {\n      setHasHydrated(true);\n    }\n\n    return () => {\n      unsubscribe?.();\n    };\n  }, [storeApi]);\n\n  return hasHydrated;\n}\n\n/**\n * Alternative hydration check using Zustand's internal _hasHydrated property\n *\n * @description\n * This is a simpler approach that directly accesses the _hasHydrated property\n * added by Zustand's persist middleware. Less code but relies on internal implementation.\n *\n * @returns {boolean} Whether the store has been hydrated from persistent storage\n *\n * @example\n * ```tsx\n * function Settings() {\n *   const isHydrated = useStoreHydration();\n *   const settings = useStore(state => state.settings);\n *\n *   // Show placeholder while hydrating to prevent flicker\n *   if (!isHydrated) {\n *     return <SettingsSkeleton />;\n *   }\n *\n *   return <SettingsForm settings={settings} />;\n * }\n * ```\n *\n * @remarks\n * - Relies on Zustand v5 internal implementation detail (_hasHydrated)\n * - Returns true if persist middleware is not configured\n * - Synchronous - no useEffect needed\n * - Consider using useHydration() for more robust implementation\n *\n * @see {@link useHydration} for the recommended approach\n */\nexport function useStoreHydration(): boolean {\n  // This property is automatically added by persist middleware in v5\n  return useStore((state) => (state as any)._hasHydrated ?? true);\n}\n"],"names":["useHydration","useStoreHydration","hasHydrated","setHasHydrated","useState","storeApi","useStoreApi","useEffect","unsubscribe","persist","onFinishHydration","useStore","state","_hasHydrated"],"mappings":"AAAA;;;;;;;CAOC;;;;;;;;;;;QAkCeA;eAAAA;;QAuDAC;eAAAA;;;uBAvFoB;8BACE;AA+B/B,SAASD;IACd,MAAM,CAACE,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAC;IAC/C,MAAMC,WAAWC,IAAAA,yBAAW;IAE5BC,IAAAA,gBAAS,EAAC;YAEY;QADpB,4DAA4D;QAC5D,MAAMC,eAAc,oBAAA,AAACH,SAAiBI,OAAO,cAAzB,wCAAA,kBAA2BC,iBAAiB,CAAC;YAC/DP,eAAe;QACjB;QAEA,6DAA6D;QAC7D,IAAI,CAAC,AAACE,SAAiBI,OAAO,IAAI,AAACJ,SAAiBI,OAAO,CAACP,WAAW,IAAI;YACzEC,eAAe;QACjB;QAEA,OAAO;YACLK,wBAAAA,kCAAAA;QACF;IACF,GAAG;QAACH;KAAS;IAEb,OAAOH;AACT;AAkCO,SAASD;IACd,mEAAmE;IACnE,OAAOU,IAAAA,sBAAQ,EAAC,CAACC;YAAU;eAAA,CAAA,sBAAA,AAACA,MAAcC,YAAY,cAA3B,iCAAA,sBAA+B;;AAC5D"}