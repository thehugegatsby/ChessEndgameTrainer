{"version":3,"names":["cov_2raaf2bb1a","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","LogLevel"],"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/logging/types.ts"],"sourcesContent":["/**\n * Logging service types and interfaces\n * Provides structured logging with different levels and contexts\n */\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  FATAL = 4,\n}\n\nexport interface LogEntry {\n  level: LogLevel;\n  message: string;\n  timestamp: Date;\n  context?: string;\n  data?: any;\n  error?: Error;\n  stack?: string;\n}\n\nexport interface LoggerConfig {\n  minLevel: LogLevel;\n  enableConsole: boolean;\n  enableRemote: boolean;\n  enableFileLogging: boolean;\n  maxLogSize: number; // Maximum log entries to keep in memory\n  remoteEndpoint?: string;\n  contextWhitelist?: string[]; // Only log from these contexts\n  contextBlacklist?: string[]; // Don't log from these contexts\n  transports?: ILogTransport[]; // Optional custom transports for testing\n}\n\nexport interface ILogger {\n  debug(message: string, data?: any): void;\n  info(message: string, data?: any): void;\n  warn(message: string, data?: any): void;\n  error(message: string, error?: Error | any, data?: any): void;\n  fatal(message: string, error?: Error | any, data?: any): void;\n\n  setContext(context: string): ILogger;\n  clearContext(): void;\n\n  getConfig(): LoggerConfig;\n  updateConfig(config: Partial<LoggerConfig>): void;\n\n  getLogs(filter?: LogFilter): LogEntry[];\n  clearLogs(): void;\n\n  // Performance logging\n  time(label: string): void;\n  timeEnd(label: string): void;\n\n  // Structured logging\n  withFields(fields: Record<string, any>): ILogger;\n}\n\nexport interface LogFilter {\n  minLevel?: LogLevel;\n  maxLevel?: LogLevel;\n  context?: string;\n  startTime?: Date;\n  endTime?: Date;\n  searchText?: string;\n}\n\nexport interface ILogTransport {\n  log(entry: LogEntry): void;\n  flush(): Promise<void>;\n}\n\nexport interface ILogFormatter {\n  format(entry: LogEntry): string;\n}\n"],"mappings":"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","ignoreList":[]}