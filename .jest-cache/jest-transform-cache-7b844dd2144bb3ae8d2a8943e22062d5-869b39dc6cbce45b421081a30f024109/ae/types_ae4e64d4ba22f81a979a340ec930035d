fe3594f4b5223795507d1b4c185c8d5d
/**
 * Logging service types and interfaces
 * Provides structured logging with different levels and contexts
 */"use strict";

/* istanbul ignore next */
function cov_2raaf2bb1a() {
  var path = "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/logging/types.ts";
  var hash = "1a979edfe10c7c136b00ed1e12d10560c242c4ef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/logging/types.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 24
        }
      },
      "3": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "6": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 14,
            column: 30
          }
        },
        loc: {
          start: {
            line: 14,
            column: 48
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/logging/types.ts"],
      sourcesContent: ["/**\n * Logging service types and interfaces\n * Provides structured logging with different levels and contexts\n */\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  FATAL = 4,\n}\n\nexport interface LogEntry {\n  level: LogLevel;\n  message: string;\n  timestamp: Date;\n  context?: string;\n  data?: any;\n  error?: Error;\n  stack?: string;\n}\n\nexport interface LoggerConfig {\n  minLevel: LogLevel;\n  enableConsole: boolean;\n  enableRemote: boolean;\n  enableFileLogging: boolean;\n  maxLogSize: number; // Maximum log entries to keep in memory\n  remoteEndpoint?: string;\n  contextWhitelist?: string[]; // Only log from these contexts\n  contextBlacklist?: string[]; // Don't log from these contexts\n  transports?: ILogTransport[]; // Optional custom transports for testing\n}\n\nexport interface ILogger {\n  debug(message: string, data?: any): void;\n  info(message: string, data?: any): void;\n  warn(message: string, data?: any): void;\n  error(message: string, error?: Error | any, data?: any): void;\n  fatal(message: string, error?: Error | any, data?: any): void;\n\n  setContext(context: string): ILogger;\n  clearContext(): void;\n\n  getConfig(): LoggerConfig;\n  updateConfig(config: Partial<LoggerConfig>): void;\n\n  getLogs(filter?: LogFilter): LogEntry[];\n  clearLogs(): void;\n\n  // Performance logging\n  time(label: string): void;\n  timeEnd(label: string): void;\n\n  // Structured logging\n  withFields(fields: Record<string, any>): ILogger;\n}\n\nexport interface LogFilter {\n  minLevel?: LogLevel;\n  maxLevel?: LogLevel;\n  context?: string;\n  startTime?: Date;\n  endTime?: Date;\n  searchText?: string;\n}\n\nexport interface ILogTransport {\n  log(entry: LogEntry): void;\n  flush(): Promise<void>;\n}\n\nexport interface ILogFormatter {\n  format(entry: LogEntry): string;\n}\n"],
      names: ["LogLevel"],
      mappings: "AAAA;;;CAGC;;;;+BAEWA;;;eAAAA;;;AAAL,IAAA,AAAKA,kCAAAA;;;;;;WAAAA"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a979edfe10c7c136b00ed1e12d10560c242c4ef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2raaf2bb1a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2raaf2bb1a();
cov_2raaf2bb1a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2raaf2bb1a().s[1]++;
Object.defineProperty(exports, "LogLevel", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2raaf2bb1a().f[0]++;
    cov_2raaf2bb1a().s[2]++;
    return LogLevel;
  }
});
var LogLevel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2raaf2bb1a().s[3]++, function (LogLevel) {
  /* istanbul ignore next */
  cov_2raaf2bb1a().f[1]++;
  cov_2raaf2bb1a().s[4]++;
  LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
  /* istanbul ignore next */
  cov_2raaf2bb1a().s[5]++;
  LogLevel[LogLevel["INFO"] = 1] = "INFO";
  /* istanbul ignore next */
  cov_2raaf2bb1a().s[6]++;
  LogLevel[LogLevel["WARN"] = 2] = "WARN";
  /* istanbul ignore next */
  cov_2raaf2bb1a().s[7]++;
  LogLevel[LogLevel["ERROR"] = 3] = "ERROR";
  /* istanbul ignore next */
  cov_2raaf2bb1a().s[8]++;
  LogLevel[LogLevel["FATAL"] = 4] = "FATAL";
  /* istanbul ignore next */
  cov_2raaf2bb1a().s[9]++;
  return LogLevel;
}({}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnJhYWYyYmIxYSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibmFtZXMiLCJtYXBwaW5ncyIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJMb2dMZXZlbCJdLCJzb3VyY2VzIjpbIi9ob21lL3RoZWh1L2Nvb2xQcm9qZWN0cy9FbmRnYW1lVHJhaW5lci10cmFpbmluZy1ib2FyZC1jb21wbGV0ZS9zcmMvc2hhcmVkL3NlcnZpY2VzL2xvZ2dpbmcvdHlwZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMb2dnaW5nIHNlcnZpY2UgdHlwZXMgYW5kIGludGVyZmFjZXNcbiAqIFByb3ZpZGVzIHN0cnVjdHVyZWQgbG9nZ2luZyB3aXRoIGRpZmZlcmVudCBsZXZlbHMgYW5kIGNvbnRleHRzXG4gKi9cblxuZXhwb3J0IGVudW0gTG9nTGV2ZWwge1xuICBERUJVRyA9IDAsXG4gIElORk8gPSAxLFxuICBXQVJOID0gMixcbiAgRVJST1IgPSAzLFxuICBGQVRBTCA9IDQsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9nRW50cnkge1xuICBsZXZlbDogTG9nTGV2ZWw7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgdGltZXN0YW1wOiBEYXRlO1xuICBjb250ZXh0Pzogc3RyaW5nO1xuICBkYXRhPzogYW55O1xuICBlcnJvcj86IEVycm9yO1xuICBzdGFjaz86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2dnZXJDb25maWcge1xuICBtaW5MZXZlbDogTG9nTGV2ZWw7XG4gIGVuYWJsZUNvbnNvbGU6IGJvb2xlYW47XG4gIGVuYWJsZVJlbW90ZTogYm9vbGVhbjtcbiAgZW5hYmxlRmlsZUxvZ2dpbmc6IGJvb2xlYW47XG4gIG1heExvZ1NpemU6IG51bWJlcjsgLy8gTWF4aW11bSBsb2cgZW50cmllcyB0byBrZWVwIGluIG1lbW9yeVxuICByZW1vdGVFbmRwb2ludD86IHN0cmluZztcbiAgY29udGV4dFdoaXRlbGlzdD86IHN0cmluZ1tdOyAvLyBPbmx5IGxvZyBmcm9tIHRoZXNlIGNvbnRleHRzXG4gIGNvbnRleHRCbGFja2xpc3Q/OiBzdHJpbmdbXTsgLy8gRG9uJ3QgbG9nIGZyb20gdGhlc2UgY29udGV4dHNcbiAgdHJhbnNwb3J0cz86IElMb2dUcmFuc3BvcnRbXTsgLy8gT3B0aW9uYWwgY3VzdG9tIHRyYW5zcG9ydHMgZm9yIHRlc3Rpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJTG9nZ2VyIHtcbiAgZGVidWcobWVzc2FnZTogc3RyaW5nLCBkYXRhPzogYW55KTogdm9pZDtcbiAgaW5mbyhtZXNzYWdlOiBzdHJpbmcsIGRhdGE/OiBhbnkpOiB2b2lkO1xuICB3YXJuKG1lc3NhZ2U6IHN0cmluZywgZGF0YT86IGFueSk6IHZvaWQ7XG4gIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgZXJyb3I/OiBFcnJvciB8IGFueSwgZGF0YT86IGFueSk6IHZvaWQ7XG4gIGZhdGFsKG1lc3NhZ2U6IHN0cmluZywgZXJyb3I/OiBFcnJvciB8IGFueSwgZGF0YT86IGFueSk6IHZvaWQ7XG5cbiAgc2V0Q29udGV4dChjb250ZXh0OiBzdHJpbmcpOiBJTG9nZ2VyO1xuICBjbGVhckNvbnRleHQoKTogdm9pZDtcblxuICBnZXRDb25maWcoKTogTG9nZ2VyQ29uZmlnO1xuICB1cGRhdGVDb25maWcoY29uZmlnOiBQYXJ0aWFsPExvZ2dlckNvbmZpZz4pOiB2b2lkO1xuXG4gIGdldExvZ3MoZmlsdGVyPzogTG9nRmlsdGVyKTogTG9nRW50cnlbXTtcbiAgY2xlYXJMb2dzKCk6IHZvaWQ7XG5cbiAgLy8gUGVyZm9ybWFuY2UgbG9nZ2luZ1xuICB0aW1lKGxhYmVsOiBzdHJpbmcpOiB2b2lkO1xuICB0aW1lRW5kKGxhYmVsOiBzdHJpbmcpOiB2b2lkO1xuXG4gIC8vIFN0cnVjdHVyZWQgbG9nZ2luZ1xuICB3aXRoRmllbGRzKGZpZWxkczogUmVjb3JkPHN0cmluZywgYW55Pik6IElMb2dnZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9nRmlsdGVyIHtcbiAgbWluTGV2ZWw/OiBMb2dMZXZlbDtcbiAgbWF4TGV2ZWw/OiBMb2dMZXZlbDtcbiAgY29udGV4dD86IHN0cmluZztcbiAgc3RhcnRUaW1lPzogRGF0ZTtcbiAgZW5kVGltZT86IERhdGU7XG4gIHNlYXJjaFRleHQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUxvZ1RyYW5zcG9ydCB7XG4gIGxvZyhlbnRyeTogTG9nRW50cnkpOiB2b2lkO1xuICBmbHVzaCgpOiBQcm9taXNlPHZvaWQ+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElMb2dGb3JtYXR0ZXIge1xuICBmb3JtYXQoZW50cnk6IExvZ0VudHJ5KTogc3RyaW5nO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0M7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxjQUFBO01BQUFDLE9BQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLEtBQUE7TUFBQUMsUUFBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQXhCLElBQUE7RUFBQTtFQUFBLElBQUF5QixRQUFBLEdBQUF4QixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQXNCLFFBQUEsQ0FBQTFCLElBQUEsS0FBQTBCLFFBQUEsQ0FBQTFCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUF5QixRQUFBLENBQUExQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFzQixjQUFBLEdBQUFELFFBQUEsQ0FBQTFCLElBQUE7RUFBQTs7Ozs7Ozs7Ozs7Ozs7OytCQUVXOzs7Ozs7V0FBQTRCLFFBQUE7OztBQUFMLElBQUFBLFFBQUs7QUFBQTtBQUFBLGNBQUE3QixjQUFBLEdBQUFpQixDQUFBLGlCQUFBWSxRQUFBO0VBQUE7RUFBQTdCLGNBQUEsR0FBQWtCLENBQUE7RUFBQWxCLGNBQUEsR0FBQWlCLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7U0FBQVksUUFBQSIsImlnbm9yZUxpc3QiOltdfQ==