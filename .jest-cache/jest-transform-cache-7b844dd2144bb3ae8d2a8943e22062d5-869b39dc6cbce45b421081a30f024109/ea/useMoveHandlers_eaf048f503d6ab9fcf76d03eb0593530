f7de7770670e2e436b7c8eb510342015
/**
 * @file Move handlers hook for chess training board
 * @module hooks/useMoveHandlers
 * 
 * @description
 * Custom hook that encapsulates all move handling logic for chess training.
 * Extracted from TrainingBoard to separate business logic from UI rendering.
 * Handles drag-and-drop, click-to-move, and core move validation logic.
 * 
 * @remarks
 * Key responsibilities:
 * - Chess move validation and execution
 * - Drag-and-drop event handling with promotion detection
 * - Click-to-move functionality with selection state
 * - Position readiness validation
 * - Comprehensive logging and error handling
 * 
 * This hook maintains all the complex business logic while providing
 * a clean interface for chess board components.
 * 
 * @example
 * ```tsx
 * const { onDrop, onSquareClick, selectedSquare } = useMoveHandlers({
 *   currentFen,
 *   isGameFinished,
 *   isPositionReady,
 *   trainingState,
 *   onMove: makeMove
 * });
 * 
 * <Chessboard
 *   fen={currentFen}
 *   onPieceDrop={onDrop}
 *   onSquareClick={onSquareClick}
 *   arePiecesDraggable={!isGameFinished}
 * />
 * ```
 */"use strict";

/* istanbul ignore next */
function cov_powfi22ff() {
  var path = "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/hooks/useMoveHandlers.ts";
  var hash = "b46ece908b84dc7f0b9917117598eb8df37d8233";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/hooks/useMoveHandlers.ts",
    statementMap: {
      "0": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "1": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "2": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "3": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 31
        }
      },
      "4": {
        start: {
          line: 49,
          column: 15
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "5": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 53
        }
      },
      "6": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 40
        }
      },
      "7": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 339,
          column: 1
        }
      },
      "8": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "9": {
        start: {
          line: 55,
          column: 48
        },
        end: {
          line: 55,
          column: 74
        }
      },
      "10": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "11": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 32
        }
      },
      "12": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "13": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 97,
          column: 88
        }
      },
      "14": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "15": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "16": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "17": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 25
        }
      },
      "18": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 116,
          column: 92
        }
      },
      "19": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "20": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "21": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "22": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "23": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 25
        }
      },
      "24": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "25": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "26": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 25
        }
      },
      "27": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "28": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "29": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "30": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "31": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 45
        }
      },
      "32": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "33": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "34": {
        start: {
          line: 163,
          column: 33
        },
        end: {
          line: 163,
          column: 87
        }
      },
      "35": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 55
        }
      },
      "36": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 25
        }
      },
      "37": {
        start: {
          line: 198,
          column: 21
        },
        end: {
          line: 241,
          column: 6
        }
      },
      "38": {
        start: {
          line: 199,
          column: 23
        },
        end: {
          line: 199,
          column: 84
        }
      },
      "39": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "40": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "41": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "42": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 25
        }
      },
      "43": {
        start: {
          line: 219,
          column: 23
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "44": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 220,
          column: 42
        }
      },
      "45": {
        start: {
          line: 221,
          column: 32
        },
        end: {
          line: 221,
          column: 72
        }
      },
      "46": {
        start: {
          line: 222,
          column: 21
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "47": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "48": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 33
        }
      },
      "49": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "50": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 25
        }
      },
      "51": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 20
        }
      },
      "52": {
        start: {
          line: 255,
          column: 28
        },
        end: {
          line: 332,
          column: 6
        }
      },
      "53": {
        start: {
          line: 256,
          column: 23
        },
        end: {
          line: 256,
          column: 91
        }
      },
      "54": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 262,
          column: 11
        }
      },
      "55": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "56": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "57": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 19
        }
      },
      "58": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "59": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 301,
          column: 13
        }
      },
      "60": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "61": {
        start: {
          line: 278,
          column: 34
        },
        end: {
          line: 278,
          column: 62
        }
      },
      "62": {
        start: {
          line: 279,
          column: 40
        },
        end: {
          line: 279,
          column: 52
        }
      },
      "63": {
        start: {
          line: 280,
          column: 39
        },
        end: {
          line: 280,
          column: 146
        }
      },
      "64": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 293,
          column: 21
        }
      },
      "65": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 50
        }
      },
      "66": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 286,
          column: 27
        }
      },
      "67": {
        start: {
          line: 288,
          column: 24
        },
        end: {
          line: 292,
          column: 27
        }
      },
      "68": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 74
        }
      },
      "69": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 300,
          column: 19
        }
      },
      "70": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 19
        }
      },
      "71": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "72": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 36
        }
      },
      "73": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 309,
          column: 15
        }
      },
      "74": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 19
        }
      },
      "75": {
        start: {
          line: 313,
          column: 23
        },
        end: {
          line: 313,
          column: 57
        }
      },
      "76": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "77": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 36
        }
      },
      "78": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 319,
          column: 15
        }
      },
      "79": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 324,
          column: 15
        }
      },
      "80": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 338,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 10
          }
        },
        loc: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 25
          }
        },
        loc: {
          start: {
            line: 52,
            column: 98
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 52
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 53
          },
          end: {
            line: 58,
            column: 54
          }
        },
        loc: {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 96,
            column: 49
          },
          end: {
            line: 96,
            column: 50
          }
        },
        loc: {
          start: {
            line: 96,
            column: 63
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 96
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 198,
            column: 45
          },
          end: {
            line: 198,
            column: 46
          }
        },
        loc: {
          start: {
            line: 198,
            column: 82
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 198
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 255,
            column: 52
          },
          end: {
            line: 255,
            column: 53
          }
        },
        loc: {
          start: {
            line: 255,
            column: 73
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 255
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "1": {
        loc: {
          start: {
            line: 110,
            column: 35
          },
          end: {
            line: 110,
            column: 198
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 156
          },
          end: {
            line: 110,
            column: 162
          }
        }, {
          start: {
            line: 110,
            column: 165
          },
          end: {
            line: 110,
            column: 198
          }
        }],
        line: 110
      },
      "2": {
        loc: {
          start: {
            line: 110,
            column: 35
          },
          end: {
            line: 110,
            column: 153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 35
          },
          end: {
            line: 110,
            column: 108
          }
        }, {
          start: {
            line: 110,
            column: 112
          },
          end: {
            line: 110,
            column: 153
          }
        }],
        line: 110
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 203
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 159
          },
          end: {
            line: 111,
            column: 165
          }
        }, {
          start: {
            line: 111,
            column: 168
          },
          end: {
            line: 111,
            column: 203
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 156
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 110
          }
        }, {
          start: {
            line: 111,
            column: 114
          },
          end: {
            line: 111,
            column: 156
          }
        }],
        line: 111
      },
      "5": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "6": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "7": {
        loc: {
          start: {
            line: 163,
            column: 33
          },
          end: {
            line: 163,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 58
          },
          end: {
            line: 163,
            column: 71
          }
        }, {
          start: {
            line: 163,
            column: 74
          },
          end: {
            line: 163,
            column: 87
          }
        }],
        line: 163
      },
      "8": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "9": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 210,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 210,
            column: 28
          }
        }, {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 46
          }
        }],
        line: 210
      },
      "10": {
        loc: {
          start: {
            line: 214,
            column: 24
          },
          end: {
            line: 214,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 43
          },
          end: {
            line: 214,
            column: 63
          }
        }, {
          start: {
            line: 214,
            column: 66
          },
          end: {
            line: 214,
            column: 81
          }
        }],
        line: 214
      },
      "11": {
        loc: {
          start: {
            line: 221,
            column: 32
          },
          end: {
            line: 221,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 32
          },
          end: {
            line: 221,
            column: 50
          }
        }, {
          start: {
            line: 221,
            column: 54
          },
          end: {
            line: 221,
            column: 72
          }
        }],
        line: 221
      },
      "12": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "13": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 18
          }
        }, {
          start: {
            line: 227,
            column: 22
          },
          end: {
            line: 227,
            column: 37
          }
        }],
        line: 227
      },
      "14": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "15": {
        loc: {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 28
          }
        }, {
          start: {
            line: 264,
            column: 32
          },
          end: {
            line: 264,
            column: 46
          }
        }],
        line: 264
      },
      "16": {
        loc: {
          start: {
            line: 268,
            column: 24
          },
          end: {
            line: 268,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 268,
            column: 63
          }
        }, {
          start: {
            line: 268,
            column: 66
          },
          end: {
            line: 268,
            column: 81
          }
        }],
        line: 268
      },
      "17": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "18": {
        loc: {
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        }, {
          start: {
            line: 297,
            column: 19
          },
          end: {
            line: 301,
            column: 13
          }
        }],
        line: 274
      },
      "19": {
        loc: {
          start: {
            line: 280,
            column: 39
          },
          end: {
            line: 280,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 280,
            column: 118
          },
          end: {
            line: 280,
            column: 124
          }
        }, {
          start: {
            line: 280,
            column: 127
          },
          end: {
            line: 280,
            column: 146
          }
        }],
        line: 280
      },
      "20": {
        loc: {
          start: {
            line: 280,
            column: 39
          },
          end: {
            line: 280,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 39
          },
          end: {
            line: 280,
            column: 84
          }
        }, {
          start: {
            line: 280,
            column: 88
          },
          end: {
            line: 280,
            column: 115
          }
        }],
        line: 280
      },
      "21": {
        loc: {
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 293,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 293,
            column: 21
          }
        }, {
          start: {
            line: 287,
            column: 27
          },
          end: {
            line: 293,
            column: 21
          }
        }],
        line: 281
      },
      "22": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "23": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: 320,
            column: 15
          },
          end: {
            line: 325,
            column: 9
          }
        }],
        line: 314
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/hooks/useMoveHandlers.ts"],
      sourcesContent: ["/**\n * @file Move handlers hook for chess training board\n * @module hooks/useMoveHandlers\n * \n * @description\n * Custom hook that encapsulates all move handling logic for chess training.\n * Extracted from TrainingBoard to separate business logic from UI rendering.\n * Handles drag-and-drop, click-to-move, and core move validation logic.\n * \n * @remarks\n * Key responsibilities:\n * - Chess move validation and execution\n * - Drag-and-drop event handling with promotion detection\n * - Click-to-move functionality with selection state\n * - Position readiness validation\n * - Comprehensive logging and error handling\n * \n * This hook maintains all the complex business logic while providing\n * a clean interface for chess board components.\n * \n * @example\n * ```tsx\n * const { onDrop, onSquareClick, selectedSquare } = useMoveHandlers({\n *   currentFen,\n *   isGameFinished,\n *   isPositionReady,\n *   trainingState,\n *   onMove: makeMove\n * });\n * \n * <Chessboard\n *   fen={currentFen}\n *   onPieceDrop={onDrop}\n *   onSquareClick={onSquareClick}\n *   arePiecesDraggable={!isGameFinished}\n * />\n * ```\n */\n\nimport { useCallback, useState } from 'react';\nimport { Chess } from 'chess.js';\nimport { getLogger } from '@shared/services/logging/Logger';\nimport { useUIStore } from '@shared/store/hooks';\n\n/**\n * Training state structure (subset needed for move handling)\n */\ninterface TrainingStateSubset {\n  currentPosition?: {\n    id: number;\n    fen: string;\n  } | null;\n  isPlayerTurn: boolean;\n  isOpponentThinking: boolean;\n}\n\n/**\n * Props for useMoveHandlers hook\n */\ninterface UseMoveHandlersProps {\n  /** Current FEN position string */\n  currentFen: string;\n  /** Whether the game has finished */\n  isGameFinished: boolean;\n  /** Whether the position is ready for interaction */\n  isPositionReady: boolean;\n  /** Training state subset needed for move validation */\n  trainingState: TrainingStateSubset;\n  /** Callback to execute moves - should be the makeMove function from useTrainingSession */\n  onMove: (move: any) => Promise<boolean | null>;\n}\n\n/**\n * Return value from useMoveHandlers hook\n */\ninterface UseMoveHandlersReturn {\n  /** Event handler for piece drop events from drag-and-drop */\n  onDrop: (sourceSquare: string, targetSquare: string, piece: string) => boolean;\n  /** Event handler for square click events (click-to-move) */\n  onSquareClick: ({ piece, square }: { piece: any; square: string }) => void;\n  /** Currently selected square for click-to-move functionality */\n  selectedSquare: string | null;\n  /** Utility function to clear the current selection */\n  clearSelection: () => void;\n}\n\n/**\n * Custom hook for chess move handling logic\n * \n * @description\n * Encapsulates all move handling logic including:\n * - Core move validation and execution\n * - Drag-and-drop event handling with promotion detection\n * - Click-to-move functionality with selection state management\n * - Position readiness validation and game state checks\n * - Comprehensive logging and error handling\n * \n * @remarks\n * This hook maintains all the complex business logic that was previously\n * embedded in TrainingBoard. It coordinates between multiple services:\n * - Chess.js for move validation\n * - TrainingSession hook for game state via onMove callback\n * - UI actions for user feedback\n * - Logging service for debugging\n * \n * The hook preserves all original functionality while providing a clean\n * interface that separates concerns between UI rendering and business logic.\n * \n * @param props Configuration object with game state and callbacks\n * @returns Object with event handlers and selection state\n */\nexport const useMoveHandlers = ({\n  currentFen,\n  isGameFinished,\n  isPositionReady,\n  trainingState,\n  onMove,\n}: UseMoveHandlersProps): UseMoveHandlersReturn => {\n  const [, uiActions] = useUIStore();\n  \n  // Click-to-move state management\n  const [selectedSquare, setSelectedSquare] = useState<string | null>(null);\n\n  /**\n   * Clear the current square selection\n   */\n  const clearSelection = useCallback(() => {\n    setSelectedSquare(null);\n  }, []);\n\n  /**\n   * Handles chess move execution and validation\n   *\n   * @param {Object} move - Move object with from/to squares\n   * @param {string} move.from - Starting square (e.g., \"e2\")\n   * @param {string} move.to - Target square (e.g., \"e4\")\n   * @param {string} [move.promotion] - Promotion piece if applicable\n   * @returns {Promise<any>} Move result or null if invalid\n   *\n   * @description\n   * Core move handler that:\n   * 1. Validates move legality using chess.js\n   * 2. Executes the move on the game instance\n   * 3. Triggers tablebase analysis for opponent response\n   * 4. Updates all relevant state slices\n   * 5. Handles errors with user feedback\n   *\n   * @remarks\n   * This function coordinates between multiple services:\n   * - Chess.js for move validation\n   * - TrainingSession hook for game state\n   * - Tablebase orchestrator for opponent moves\n   * - UI actions for user feedback\n   *\n   * Invalid moves increment the mistake counter and show\n   * a warning toast without modifying game state.\n   *\n   * @example\n   * ```typescript\n   * // User drags piece\n   * await handleMove({ from: \"e2\", to: \"e4\" });\n   *\n   * // With promotion\n   * await handleMove({ from: \"e7\", to: \"e8\", promotion: \"q\" });\n   * ```\n   */\n  const handleMove = useCallback(\n    async (move: any) => {\n      const logger = getLogger().setContext(\"useMoveHandlers-handleMove\");\n      logger.debug(\"\uD83D\uDE80 handleMove called\", {\n        move,\n        isGameFinished,\n        isPositionReady,\n        hasCurrentPosition: !!trainingState.currentPosition,\n        currentFen,\n      });\n\n      // CRITICAL: Block moves if position is not ready\n      if (!isPositionReady) {\n        logger.warn(\"\u26D4 Position not ready, blocking move\", {\n          hasCurrentPosition: !!trainingState.currentPosition,\n          currentPositionId: trainingState.currentPosition?.id,\n          currentPositionFen: trainingState.currentPosition?.fen,\n        });\n        return false;\n      }\n\n      // Add these critical debug logs\n      const moveLogger = getLogger().setContext(\"useMoveHandlers-handleMove\");\n      moveLogger.debug(\"handleMove called\", { move });\n      moveLogger.debug(\"Current FEN\", { fen: currentFen });\n\n      if (isGameFinished) {\n        logger.warn(\"handleMove early return\", { isGameFinished });\n        return false;\n      }\n\n      // Check if piece was dropped on same square (no move)\n      if (move.from === move.to) {\n        logger.debug(\"Piece dropped on same square, ignoring\", {\n          square: move.from,\n        });\n        return false;\n      }\n\n      try {\n        // Debug: Log game state before validation\n        logger.debug(\"Game state before move validation\", {\n          hasGame: false, // game is now null, handled by ChessService\n          currentFen: currentFen,\n        });\n\n        // Move validation is handled by ChessService in makeMove\n        // We don't need to validate here anymore\n        logger.debug(\"Move validation delegated to ChessService\", {\n          move,\n          currentFen,\n        });\n\n        // First make the move on the local game instance\n        logger.debug(\"Calling onMove callback\", { move });\n        const result = await onMove(move);\n        logger.debug(\"onMove result\", { result });\n\n        // The orchestrator now handles the entire workflow including:\n        // - Move validation\n        // - Error dialog for suboptimal moves\n        // - Opponent turn (only if move was optimal)\n        // TrainingBoard should NOT call handleOpponentTurn directly\n\n        return result;\n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : \"Move failed\";\n        uiActions.showToast(errorMessage, \"error\");\n        return false;\n      }\n    },\n    [\n      isGameFinished,\n      onMove,\n      trainingState,\n      uiActions,\n      currentFen,\n      isPositionReady,\n      trainingState.currentPosition,\n    ],\n  );\n\n  /**\n   * Handles piece drop events from the chessboard\n   *\n   * @param {string} sourceSquare - Square where piece was picked up\n   * @param {string} targetSquare - Square where piece was dropped\n   * @param {string} piece - Piece type (required by interface)\n   * @returns {boolean} Whether the drop was accepted\n   *\n   * @description\n   * Converts drag-and-drop events into move objects and delegates\n   * to the main move handler. Always promotes to queen by default.\n   *\n   * @remarks\n   * This is the primary user interaction handler for the chess board.\n   * Returns false if game is finished to prevent further moves.\n   * The actual move validation happens in handleMove.\n   *\n   * @example\n   * ```typescript\n   * // User drags pawn from e2 to e4\n   * onDrop(\"e2\", \"e4\", \"wP\") // returns true if valid\n   * ```\n   */\n  const onDrop = useCallback(\n    (sourceSquare: string, targetSquare: string, piece: string): boolean => {\n      const logger = getLogger().setContext(\"useMoveHandlers-onDrop\");\n\n      logger.debug(\"\uD83C\uDFAF onDrop called\", {\n        sourceSquare,\n        targetSquare,\n        piece,\n        isPositionReady,\n        isGameFinished,\n        hasCurrentPosition: !!trainingState.currentPosition,\n        currentFen,\n      });\n\n      // Block drops if position is not ready or game is finished\n      if (!isPositionReady || isGameFinished) {\n        logger.warn(\"\u26D4 onDrop blocked\", {\n          isPositionReady,\n          isGameFinished,\n          reason: !isPositionReady ? \"position not ready\" : \"game finished\",\n        });\n        return false;\n      }\n\n      // Check if this is a pawn promotion\n      const isPawn = piece.toLowerCase().endsWith(\"p\");\n      const targetRank = targetSquare[1];\n      const isPromotionRank = targetRank === \"8\" || targetRank === \"1\";\n\n      const move: any = {\n        from: sourceSquare,\n        to: targetSquare,\n      };\n\n      // Add promotion if pawn reaches last rank\n      if (isPawn && isPromotionRank) {\n        move.promotion = \"q\"; // Default to queen promotion\n      }\n\n      logger.debug(\"\u2705 onDrop calling handleMove\", { move });\n      handleMove(move);\n      return true;\n    },\n    [\n      handleMove,\n      isGameFinished,\n      isPositionReady,\n      trainingState.currentPosition,\n      currentFen,\n    ],\n  );\n\n  /**\n   * Handles square click events for click-to-move functionality\n   * \n   * @param {object} args - Arguments from react-chessboard\n   * @param {any} args.piece - Piece on the clicked square (can be null)\n   * @param {string} args.square - Square that was clicked\n   * @returns {void}\n   * \n   * @description\n   * Implements click-to-move interaction pattern for accessibility and E2E testing:\n   * - First click selects piece (if valid piece on square)\n   * - Second click attempts move to target square\n   * - Click on same square deselects piece\n   */\n  const onSquareClick = useCallback(\n    ({ piece, square }: { piece: any; square: string }): void => {\n      const logger = getLogger().setContext(\"useMoveHandlers-onSquareClick\");\n\n      logger.debug(\"\uD83D\uDDB1\uFE0F onSquareClick called\", {\n        square,\n        selectedSquare,\n        isPositionReady,\n        isGameFinished,\n      });\n\n      // Block clicks if position is not ready or game is finished\n      if (!isPositionReady || isGameFinished) {\n        logger.warn(\"\u26D4 onSquareClick blocked\", {\n          isPositionReady,\n          isGameFinished,\n          reason: !isPositionReady ? \"position not ready\" : \"game finished\",\n        });\n        return;\n      }\n\n      // If no square is selected, select this square if it has a piece\n      if (!selectedSquare) {\n        if (piece) {\n          // Check if it's the right color's turn\n          try {\n            const chess = new Chess(currentFen);\n            const currentTurn = chess.turn();\n            const pieceColor = piece.pieceType?.[0]; // 'w' or 'b'\n            \n            if (pieceColor === currentTurn) {\n              setSelectedSquare(square);\n              logger.debug(\"\u2705 Square selected\", { square, piece });\n            } else {\n              logger.debug(\"\u274C Wrong color piece\", { square, piece, currentTurn });\n            }\n          } catch (error) {\n            logger.error(\"Failed to validate piece color\", error as Error);\n          }\n        } else {\n          logger.debug(\"\u274C No piece on square\", { square });\n        }\n        return;\n      }\n\n      // If same square clicked, deselect\n      if (selectedSquare === square) {\n        setSelectedSquare(null);\n        logger.debug(\"\uD83D\uDD04 Square deselected\", { square });\n        return;\n      }\n\n      // Try to make move from selected square to clicked square\n      const result = onDrop(selectedSquare, square, \"\"); // Piece type not needed\n      if (result) {\n        setSelectedSquare(null); // Clear selection after successful move\n        logger.debug(\"\u2705 Move completed via click\", { from: selectedSquare, to: square });\n      } else {\n        logger.debug(\"\u274C Move failed via click\", { from: selectedSquare, to: square });\n      }\n    },\n    [selectedSquare, isPositionReady, isGameFinished, currentFen, onDrop],\n  );\n\n  return {\n    onDrop,\n    onSquareClick,\n    selectedSquare,\n    clearSelection,\n  };\n};"],
      names: ["useMoveHandlers", "currentFen", "isGameFinished", "isPositionReady", "trainingState", "onMove", "uiActions", "useUIStore", "selectedSquare", "setSelectedSquare", "useState", "clearSelection", "useCallback", "handleMove", "move", "logger", "getLogger", "setContext", "debug", "hasCurrentPosition", "currentPosition", "warn", "currentPositionId", "id", "currentPositionFen", "fen", "moveLogger", "from", "to", "square", "hasGame", "result", "error", "errorMessage", "Error", "message", "showToast", "onDrop", "sourceSquare", "targetSquare", "piece", "reason", "isPawn", "toLowerCase", "endsWith", "targetRank", "isPromotionRank", "promotion", "onSquareClick", "chess", "Chess", "currentTurn", "turn", "pieceColor", "pieceType"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b46ece908b84dc7f0b9917117598eb8df37d8233"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_powfi22ff = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_powfi22ff();
cov_powfi22ff().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_powfi22ff().s[1]++;
Object.defineProperty(exports, "useMoveHandlers", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_powfi22ff().f[0]++;
    cov_powfi22ff().s[2]++;
    return useMoveHandlers;
  }
});
const _react =
/* istanbul ignore next */
(cov_powfi22ff().s[3]++, require("react"));
const _chess =
/* istanbul ignore next */
(cov_powfi22ff().s[4]++, require("chess.js"));
const _Logger =
/* istanbul ignore next */
(cov_powfi22ff().s[5]++, require("../services/logging/Logger"));
const _hooks =
/* istanbul ignore next */
(cov_powfi22ff().s[6]++, require("../store/hooks"));
/* istanbul ignore next */
cov_powfi22ff().s[7]++;
const useMoveHandlers = ({
  currentFen,
  isGameFinished,
  isPositionReady,
  trainingState,
  onMove
}) => {
  /* istanbul ignore next */
  cov_powfi22ff().f[1]++;
  const [, uiActions] =
  /* istanbul ignore next */
  (cov_powfi22ff().s[8]++, (0, _hooks.useUIStore)());
  // Click-to-move state management
  const [selectedSquare, setSelectedSquare] =
  /* istanbul ignore next */
  (cov_powfi22ff().s[9]++, (0, _react.useState)(null));
  /**
  * Clear the current square selection
  */
  const clearSelection =
  /* istanbul ignore next */
  (cov_powfi22ff().s[10]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_powfi22ff().f[2]++;
    cov_powfi22ff().s[11]++;
    setSelectedSquare(null);
  }, []));
  /**
  * Handles chess move execution and validation
  *
  * @param {Object} move - Move object with from/to squares
  * @param {string} move.from - Starting square (e.g., "e2")
  * @param {string} move.to - Target square (e.g., "e4")
  * @param {string} [move.promotion] - Promotion piece if applicable
  * @returns {Promise<any>} Move result or null if invalid
  *
  * @description
  * Core move handler that:
  * 1. Validates move legality using chess.js
  * 2. Executes the move on the game instance
  * 3. Triggers tablebase analysis for opponent response
  * 4. Updates all relevant state slices
  * 5. Handles errors with user feedback
  *
  * @remarks
  * This function coordinates between multiple services:
  * - Chess.js for move validation
  * - TrainingSession hook for game state
  * - Tablebase orchestrator for opponent moves
  * - UI actions for user feedback
  *
  * Invalid moves increment the mistake counter and show
  * a warning toast without modifying game state.
  *
  * @example
  * ```typescript
  * // User drags piece
  * await handleMove({ from: "e2", to: "e4" });
  *
  * // With promotion
  * await handleMove({ from: "e7", to: "e8", promotion: "q" });
  * ```
  */
  const handleMove =
  /* istanbul ignore next */
  (cov_powfi22ff().s[12]++, (0, _react.useCallback)(async move => {
    /* istanbul ignore next */
    cov_powfi22ff().f[3]++;
    const logger =
    /* istanbul ignore next */
    (cov_powfi22ff().s[13]++, (0, _Logger.getLogger)().setContext("useMoveHandlers-handleMove"));
    /* istanbul ignore next */
    cov_powfi22ff().s[14]++;
    logger.debug("🚀 handleMove called", {
      move,
      isGameFinished,
      isPositionReady,
      hasCurrentPosition: !!trainingState.currentPosition,
      currentFen
    });
    // CRITICAL: Block moves if position is not ready
    /* istanbul ignore next */
    cov_powfi22ff().s[15]++;
    if (!isPositionReady) {
      /* istanbul ignore next */
      cov_powfi22ff().b[0][0]++;
      var _trainingState_currentPosition, _trainingState_currentPosition1;
      /* istanbul ignore next */
      cov_powfi22ff().s[16]++;
      logger.warn("⛔ Position not ready, blocking move", {
        hasCurrentPosition: !!trainingState.currentPosition,
        currentPositionId:
        /* istanbul ignore next */
        (cov_powfi22ff().b[2][0]++, (_trainingState_currentPosition = trainingState.currentPosition) === null) ||
        /* istanbul ignore next */
        (cov_powfi22ff().b[2][1]++, _trainingState_currentPosition === void 0) ?
        /* istanbul ignore next */
        (cov_powfi22ff().b[1][0]++, void 0) :
        /* istanbul ignore next */
        (cov_powfi22ff().b[1][1]++, _trainingState_currentPosition.id),
        currentPositionFen:
        /* istanbul ignore next */
        (cov_powfi22ff().b[4][0]++, (_trainingState_currentPosition1 = trainingState.currentPosition) === null) ||
        /* istanbul ignore next */
        (cov_powfi22ff().b[4][1]++, _trainingState_currentPosition1 === void 0) ?
        /* istanbul ignore next */
        (cov_powfi22ff().b[3][0]++, void 0) :
        /* istanbul ignore next */
        (cov_powfi22ff().b[3][1]++, _trainingState_currentPosition1.fen)
      });
      /* istanbul ignore next */
      cov_powfi22ff().s[17]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[0][1]++;
    }
    // Add these critical debug logs
    const moveLogger =
    /* istanbul ignore next */
    (cov_powfi22ff().s[18]++, (0, _Logger.getLogger)().setContext("useMoveHandlers-handleMove"));
    /* istanbul ignore next */
    cov_powfi22ff().s[19]++;
    moveLogger.debug("handleMove called", {
      move
    });
    /* istanbul ignore next */
    cov_powfi22ff().s[20]++;
    moveLogger.debug("Current FEN", {
      fen: currentFen
    });
    /* istanbul ignore next */
    cov_powfi22ff().s[21]++;
    if (isGameFinished) {
      /* istanbul ignore next */
      cov_powfi22ff().b[5][0]++;
      cov_powfi22ff().s[22]++;
      logger.warn("handleMove early return", {
        isGameFinished
      });
      /* istanbul ignore next */
      cov_powfi22ff().s[23]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[5][1]++;
    }
    // Check if piece was dropped on same square (no move)
    cov_powfi22ff().s[24]++;
    if (move.from === move.to) {
      /* istanbul ignore next */
      cov_powfi22ff().b[6][0]++;
      cov_powfi22ff().s[25]++;
      logger.debug("Piece dropped on same square, ignoring", {
        square: move.from
      });
      /* istanbul ignore next */
      cov_powfi22ff().s[26]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[6][1]++;
    }
    cov_powfi22ff().s[27]++;
    try {
      /* istanbul ignore next */
      cov_powfi22ff().s[28]++;
      // Debug: Log game state before validation
      logger.debug("Game state before move validation", {
        hasGame: false,
        currentFen: currentFen
      });
      // Move validation is handled by ChessService in makeMove
      // We don't need to validate here anymore
      /* istanbul ignore next */
      cov_powfi22ff().s[29]++;
      logger.debug("Move validation delegated to ChessService", {
        move,
        currentFen
      });
      // First make the move on the local game instance
      /* istanbul ignore next */
      cov_powfi22ff().s[30]++;
      logger.debug("Calling onMove callback", {
        move
      });
      const result =
      /* istanbul ignore next */
      (cov_powfi22ff().s[31]++, await onMove(move));
      /* istanbul ignore next */
      cov_powfi22ff().s[32]++;
      logger.debug("onMove result", {
        result
      });
      // The orchestrator now handles the entire workflow including:
      // - Move validation
      // - Error dialog for suboptimal moves
      // - Opponent turn (only if move was optimal)
      // TrainingBoard should NOT call handleOpponentTurn directly
      /* istanbul ignore next */
      cov_powfi22ff().s[33]++;
      return result;
    } catch (error) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_powfi22ff().s[34]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_powfi22ff().b[7][0]++, error.message) :
      /* istanbul ignore next */
      (cov_powfi22ff().b[7][1]++, "Move failed"));
      /* istanbul ignore next */
      cov_powfi22ff().s[35]++;
      uiActions.showToast(errorMessage, "error");
      /* istanbul ignore next */
      cov_powfi22ff().s[36]++;
      return false;
    }
  }, [isGameFinished, onMove, trainingState, uiActions, currentFen, isPositionReady, trainingState.currentPosition]));
  /**
  * Handles piece drop events from the chessboard
  *
  * @param {string} sourceSquare - Square where piece was picked up
  * @param {string} targetSquare - Square where piece was dropped
  * @param {string} piece - Piece type (required by interface)
  * @returns {boolean} Whether the drop was accepted
  *
  * @description
  * Converts drag-and-drop events into move objects and delegates
  * to the main move handler. Always promotes to queen by default.
  *
  * @remarks
  * This is the primary user interaction handler for the chess board.
  * Returns false if game is finished to prevent further moves.
  * The actual move validation happens in handleMove.
  *
  * @example
  * ```typescript
  * // User drags pawn from e2 to e4
  * onDrop("e2", "e4", "wP") // returns true if valid
  * ```
  */
  const onDrop =
  /* istanbul ignore next */
  (cov_powfi22ff().s[37]++, (0, _react.useCallback)((sourceSquare, targetSquare, piece) => {
    /* istanbul ignore next */
    cov_powfi22ff().f[4]++;
    const logger =
    /* istanbul ignore next */
    (cov_powfi22ff().s[38]++, (0, _Logger.getLogger)().setContext("useMoveHandlers-onDrop"));
    /* istanbul ignore next */
    cov_powfi22ff().s[39]++;
    logger.debug("🎯 onDrop called", {
      sourceSquare,
      targetSquare,
      piece,
      isPositionReady,
      isGameFinished,
      hasCurrentPosition: !!trainingState.currentPosition,
      currentFen
    });
    // Block drops if position is not ready or game is finished
    /* istanbul ignore next */
    cov_powfi22ff().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_powfi22ff().b[9][0]++, !isPositionReady) ||
    /* istanbul ignore next */
    (cov_powfi22ff().b[9][1]++, isGameFinished)) {
      /* istanbul ignore next */
      cov_powfi22ff().b[8][0]++;
      cov_powfi22ff().s[41]++;
      logger.warn("⛔ onDrop blocked", {
        isPositionReady,
        isGameFinished,
        reason: !isPositionReady ?
        /* istanbul ignore next */
        (cov_powfi22ff().b[10][0]++, "position not ready") :
        /* istanbul ignore next */
        (cov_powfi22ff().b[10][1]++, "game finished")
      });
      /* istanbul ignore next */
      cov_powfi22ff().s[42]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[8][1]++;
    }
    // Check if this is a pawn promotion
    const isPawn =
    /* istanbul ignore next */
    (cov_powfi22ff().s[43]++, piece.toLowerCase().endsWith("p"));
    const targetRank =
    /* istanbul ignore next */
    (cov_powfi22ff().s[44]++, targetSquare[1]);
    const isPromotionRank =
    /* istanbul ignore next */
    (cov_powfi22ff().s[45]++,
    /* istanbul ignore next */
    (cov_powfi22ff().b[11][0]++, targetRank === "8") ||
    /* istanbul ignore next */
    (cov_powfi22ff().b[11][1]++, targetRank === "1"));
    const move =
    /* istanbul ignore next */
    (cov_powfi22ff().s[46]++, {
      from: sourceSquare,
      to: targetSquare
    });
    // Add promotion if pawn reaches last rank
    /* istanbul ignore next */
    cov_powfi22ff().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_powfi22ff().b[13][0]++, isPawn) &&
    /* istanbul ignore next */
    (cov_powfi22ff().b[13][1]++, isPromotionRank)) {
      /* istanbul ignore next */
      cov_powfi22ff().b[12][0]++;
      cov_powfi22ff().s[48]++;
      move.promotion = "q"; // Default to queen promotion
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[12][1]++;
    }
    cov_powfi22ff().s[49]++;
    logger.debug("✅ onDrop calling handleMove", {
      move
    });
    /* istanbul ignore next */
    cov_powfi22ff().s[50]++;
    handleMove(move);
    /* istanbul ignore next */
    cov_powfi22ff().s[51]++;
    return true;
  }, [handleMove, isGameFinished, isPositionReady, trainingState.currentPosition, currentFen]));
  /**
  * Handles square click events for click-to-move functionality
  * 
  * @param {object} args - Arguments from react-chessboard
  * @param {any} args.piece - Piece on the clicked square (can be null)
  * @param {string} args.square - Square that was clicked
  * @returns {void}
  * 
  * @description
  * Implements click-to-move interaction pattern for accessibility and E2E testing:
  * - First click selects piece (if valid piece on square)
  * - Second click attempts move to target square
  * - Click on same square deselects piece
  */
  const onSquareClick =
  /* istanbul ignore next */
  (cov_powfi22ff().s[52]++, (0, _react.useCallback)(({
    piece,
    square
  }) => {
    /* istanbul ignore next */
    cov_powfi22ff().f[5]++;
    const logger =
    /* istanbul ignore next */
    (cov_powfi22ff().s[53]++, (0, _Logger.getLogger)().setContext("useMoveHandlers-onSquareClick"));
    /* istanbul ignore next */
    cov_powfi22ff().s[54]++;
    logger.debug("🖱️ onSquareClick called", {
      square,
      selectedSquare,
      isPositionReady,
      isGameFinished
    });
    // Block clicks if position is not ready or game is finished
    /* istanbul ignore next */
    cov_powfi22ff().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_powfi22ff().b[15][0]++, !isPositionReady) ||
    /* istanbul ignore next */
    (cov_powfi22ff().b[15][1]++, isGameFinished)) {
      /* istanbul ignore next */
      cov_powfi22ff().b[14][0]++;
      cov_powfi22ff().s[56]++;
      logger.warn("⛔ onSquareClick blocked", {
        isPositionReady,
        isGameFinished,
        reason: !isPositionReady ?
        /* istanbul ignore next */
        (cov_powfi22ff().b[16][0]++, "position not ready") :
        /* istanbul ignore next */
        (cov_powfi22ff().b[16][1]++, "game finished")
      });
      /* istanbul ignore next */
      cov_powfi22ff().s[57]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[14][1]++;
    }
    // If no square is selected, select this square if it has a piece
    cov_powfi22ff().s[58]++;
    if (!selectedSquare) {
      /* istanbul ignore next */
      cov_powfi22ff().b[17][0]++;
      cov_powfi22ff().s[59]++;
      if (piece) {
        /* istanbul ignore next */
        cov_powfi22ff().b[18][0]++;
        cov_powfi22ff().s[60]++;
        // Check if it's the right color's turn
        try {
          var _piece_pieceType;
          const chess =
          /* istanbul ignore next */
          (cov_powfi22ff().s[61]++, new _chess.Chess(currentFen));
          const currentTurn =
          /* istanbul ignore next */
          (cov_powfi22ff().s[62]++, chess.turn());
          const pieceColor =
          /* istanbul ignore next */
          (cov_powfi22ff().s[63]++,
          /* istanbul ignore next */
          (cov_powfi22ff().b[20][0]++, (_piece_pieceType = piece.pieceType) === null) ||
          /* istanbul ignore next */
          (cov_powfi22ff().b[20][1]++, _piece_pieceType === void 0) ?
          /* istanbul ignore next */
          (cov_powfi22ff().b[19][0]++, void 0) :
          /* istanbul ignore next */
          (cov_powfi22ff().b[19][1]++, _piece_pieceType[0])); // 'w' or 'b'
          /* istanbul ignore next */
          cov_powfi22ff().s[64]++;
          if (pieceColor === currentTurn) {
            /* istanbul ignore next */
            cov_powfi22ff().b[21][0]++;
            cov_powfi22ff().s[65]++;
            setSelectedSquare(square);
            /* istanbul ignore next */
            cov_powfi22ff().s[66]++;
            logger.debug("✅ Square selected", {
              square,
              piece
            });
          } else {
            /* istanbul ignore next */
            cov_powfi22ff().b[21][1]++;
            cov_powfi22ff().s[67]++;
            logger.debug("❌ Wrong color piece", {
              square,
              piece,
              currentTurn
            });
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_powfi22ff().s[68]++;
          logger.error("Failed to validate piece color", error);
        }
      } else {
        /* istanbul ignore next */
        cov_powfi22ff().b[18][1]++;
        cov_powfi22ff().s[69]++;
        logger.debug("❌ No piece on square", {
          square
        });
      }
      /* istanbul ignore next */
      cov_powfi22ff().s[70]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[17][1]++;
    }
    // If same square clicked, deselect
    cov_powfi22ff().s[71]++;
    if (selectedSquare === square) {
      /* istanbul ignore next */
      cov_powfi22ff().b[22][0]++;
      cov_powfi22ff().s[72]++;
      setSelectedSquare(null);
      /* istanbul ignore next */
      cov_powfi22ff().s[73]++;
      logger.debug("🔄 Square deselected", {
        square
      });
      /* istanbul ignore next */
      cov_powfi22ff().s[74]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_powfi22ff().b[22][1]++;
    }
    // Try to make move from selected square to clicked square
    const result =
    /* istanbul ignore next */
    (cov_powfi22ff().s[75]++, onDrop(selectedSquare, square, "")); // Piece type not needed
    /* istanbul ignore next */
    cov_powfi22ff().s[76]++;
    if (result) {
      /* istanbul ignore next */
      cov_powfi22ff().b[23][0]++;
      cov_powfi22ff().s[77]++;
      setSelectedSquare(null); // Clear selection after successful move
      /* istanbul ignore next */
      cov_powfi22ff().s[78]++;
      logger.debug("✅ Move completed via click", {
        from: selectedSquare,
        to: square
      });
    } else {
      /* istanbul ignore next */
      cov_powfi22ff().b[23][1]++;
      cov_powfi22ff().s[79]++;
      logger.debug("❌ Move failed via click", {
        from: selectedSquare,
        to: square
      });
    }
  }, [selectedSquare, isPositionReady, isGameFinished, currentFen, onDrop]));
  /* istanbul ignore next */
  cov_powfi22ff().s[80]++;
  return {
    onDrop,
    onSquareClick,
    selectedSquare,
    clearSelection
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcG93ZmkyMmZmIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibmFtZXMiLCJtYXBwaW5ncyIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJ1c2VNb3ZlSGFuZGxlcnMiLCJjdXJyZW50RmVuIiwiaXNHYW1lRmluaXNoZWQiLCJpc1Bvc2l0aW9uUmVhZHkiLCJ0cmFpbmluZ1N0YXRlIiwib25Nb3ZlIiwidWlBY3Rpb25zIiwiX2hvb2tzIiwidXNlVUlTdG9yZSIsInNlbGVjdGVkU3F1YXJlIiwic2V0U2VsZWN0ZWRTcXVhcmUiLCJfcmVhY3QiLCJ1c2VTdGF0ZSIsImNsZWFyU2VsZWN0aW9uIiwidXNlQ2FsbGJhY2siLCJoYW5kbGVNb3ZlIiwibW92ZSIsImxvZ2dlciIsIl9Mb2dnZXIiLCJnZXRMb2dnZXIiLCJzZXRDb250ZXh0IiwiZGVidWciLCJoYXNDdXJyZW50UG9zaXRpb24iLCJjdXJyZW50UG9zaXRpb24iLCJfdHJhaW5pbmdTdGF0ZV9jdXJyZW50UG9zaXRpb24iLCJfdHJhaW5pbmdTdGF0ZV9jdXJyZW50UG9zaXRpb24xIiwid2FybiIsImN1cnJlbnRQb3NpdGlvbklkIiwiaWQiLCJjdXJyZW50UG9zaXRpb25GZW4iLCJmZW4iLCJtb3ZlTG9nZ2VyIiwiZnJvbSIsInRvIiwic3F1YXJlIiwiaGFzR2FtZSIsInJlc3VsdCIsImVycm9yIiwiZXJyb3JNZXNzYWdlIiwiRXJyb3IiLCJtZXNzYWdlIiwic2hvd1RvYXN0Iiwib25Ecm9wIiwic291cmNlU3F1YXJlIiwidGFyZ2V0U3F1YXJlIiwicGllY2UiLCJyZWFzb24iLCJpc1Bhd24iLCJ0b0xvd2VyQ2FzZSIsImVuZHNXaXRoIiwidGFyZ2V0UmFuayIsImlzUHJvbW90aW9uUmFuayIsInByb21vdGlvbiIsIm9uU3F1YXJlQ2xpY2siLCJfcGllY2VfcGllY2VUeXBlIiwiY2hlc3MiLCJfY2hlc3MiLCJDaGVzcyIsImN1cnJlbnRUdXJuIiwidHVybiIsInBpZWNlQ29sb3IiLCJwaWVjZVR5cGUiXSwic291cmNlcyI6WyIvaG9tZS90aGVodS9jb29sUHJvamVjdHMvRW5kZ2FtZVRyYWluZXItdHJhaW5pbmctYm9hcmQtY29tcGxldGUvc3JjL3NoYXJlZC9ob29rcy91c2VNb3ZlSGFuZGxlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBNb3ZlIGhhbmRsZXJzIGhvb2sgZm9yIGNoZXNzIHRyYWluaW5nIGJvYXJkXG4gKiBAbW9kdWxlIGhvb2tzL3VzZU1vdmVIYW5kbGVyc1xuICogXG4gKiBAZGVzY3JpcHRpb25cbiAqIEN1c3RvbSBob29rIHRoYXQgZW5jYXBzdWxhdGVzIGFsbCBtb3ZlIGhhbmRsaW5nIGxvZ2ljIGZvciBjaGVzcyB0cmFpbmluZy5cbiAqIEV4dHJhY3RlZCBmcm9tIFRyYWluaW5nQm9hcmQgdG8gc2VwYXJhdGUgYnVzaW5lc3MgbG9naWMgZnJvbSBVSSByZW5kZXJpbmcuXG4gKiBIYW5kbGVzIGRyYWctYW5kLWRyb3AsIGNsaWNrLXRvLW1vdmUsIGFuZCBjb3JlIG1vdmUgdmFsaWRhdGlvbiBsb2dpYy5cbiAqIFxuICogQHJlbWFya3NcbiAqIEtleSByZXNwb25zaWJpbGl0aWVzOlxuICogLSBDaGVzcyBtb3ZlIHZhbGlkYXRpb24gYW5kIGV4ZWN1dGlvblxuICogLSBEcmFnLWFuZC1kcm9wIGV2ZW50IGhhbmRsaW5nIHdpdGggcHJvbW90aW9uIGRldGVjdGlvblxuICogLSBDbGljay10by1tb3ZlIGZ1bmN0aW9uYWxpdHkgd2l0aCBzZWxlY3Rpb24gc3RhdGVcbiAqIC0gUG9zaXRpb24gcmVhZGluZXNzIHZhbGlkYXRpb25cbiAqIC0gQ29tcHJlaGVuc2l2ZSBsb2dnaW5nIGFuZCBlcnJvciBoYW5kbGluZ1xuICogXG4gKiBUaGlzIGhvb2sgbWFpbnRhaW5zIGFsbCB0aGUgY29tcGxleCBidXNpbmVzcyBsb2dpYyB3aGlsZSBwcm92aWRpbmdcbiAqIGEgY2xlYW4gaW50ZXJmYWNlIGZvciBjaGVzcyBib2FyZCBjb21wb25lbnRzLlxuICogXG4gKiBAZXhhbXBsZVxuICogYGBgdHN4XG4gKiBjb25zdCB7IG9uRHJvcCwgb25TcXVhcmVDbGljaywgc2VsZWN0ZWRTcXVhcmUgfSA9IHVzZU1vdmVIYW5kbGVycyh7XG4gKiAgIGN1cnJlbnRGZW4sXG4gKiAgIGlzR2FtZUZpbmlzaGVkLFxuICogICBpc1Bvc2l0aW9uUmVhZHksXG4gKiAgIHRyYWluaW5nU3RhdGUsXG4gKiAgIG9uTW92ZTogbWFrZU1vdmVcbiAqIH0pO1xuICogXG4gKiA8Q2hlc3Nib2FyZFxuICogICBmZW49e2N1cnJlbnRGZW59XG4gKiAgIG9uUGllY2VEcm9wPXtvbkRyb3B9XG4gKiAgIG9uU3F1YXJlQ2xpY2s9e29uU3F1YXJlQ2xpY2t9XG4gKiAgIGFyZVBpZWNlc0RyYWdnYWJsZT17IWlzR2FtZUZpbmlzaGVkfVxuICogLz5cbiAqIGBgYFxuICovXG5cbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENoZXNzIH0gZnJvbSAnY2hlc3MuanMnO1xuaW1wb3J0IHsgZ2V0TG9nZ2VyIH0gZnJvbSAnQHNoYXJlZC9zZXJ2aWNlcy9sb2dnaW5nL0xvZ2dlcic7XG5pbXBvcnQgeyB1c2VVSVN0b3JlIH0gZnJvbSAnQHNoYXJlZC9zdG9yZS9ob29rcyc7XG5cbi8qKlxuICogVHJhaW5pbmcgc3RhdGUgc3RydWN0dXJlIChzdWJzZXQgbmVlZGVkIGZvciBtb3ZlIGhhbmRsaW5nKVxuICovXG5pbnRlcmZhY2UgVHJhaW5pbmdTdGF0ZVN1YnNldCB7XG4gIGN1cnJlbnRQb3NpdGlvbj86IHtcbiAgICBpZDogbnVtYmVyO1xuICAgIGZlbjogc3RyaW5nO1xuICB9IHwgbnVsbDtcbiAgaXNQbGF5ZXJUdXJuOiBib29sZWFuO1xuICBpc09wcG9uZW50VGhpbmtpbmc6IGJvb2xlYW47XG59XG5cbi8qKlxuICogUHJvcHMgZm9yIHVzZU1vdmVIYW5kbGVycyBob29rXG4gKi9cbmludGVyZmFjZSBVc2VNb3ZlSGFuZGxlcnNQcm9wcyB7XG4gIC8qKiBDdXJyZW50IEZFTiBwb3NpdGlvbiBzdHJpbmcgKi9cbiAgY3VycmVudEZlbjogc3RyaW5nO1xuICAvKiogV2hldGhlciB0aGUgZ2FtZSBoYXMgZmluaXNoZWQgKi9cbiAgaXNHYW1lRmluaXNoZWQ6IGJvb2xlYW47XG4gIC8qKiBXaGV0aGVyIHRoZSBwb3NpdGlvbiBpcyByZWFkeSBmb3IgaW50ZXJhY3Rpb24gKi9cbiAgaXNQb3NpdGlvblJlYWR5OiBib29sZWFuO1xuICAvKiogVHJhaW5pbmcgc3RhdGUgc3Vic2V0IG5lZWRlZCBmb3IgbW92ZSB2YWxpZGF0aW9uICovXG4gIHRyYWluaW5nU3RhdGU6IFRyYWluaW5nU3RhdGVTdWJzZXQ7XG4gIC8qKiBDYWxsYmFjayB0byBleGVjdXRlIG1vdmVzIC0gc2hvdWxkIGJlIHRoZSBtYWtlTW92ZSBmdW5jdGlvbiBmcm9tIHVzZVRyYWluaW5nU2Vzc2lvbiAqL1xuICBvbk1vdmU6IChtb3ZlOiBhbnkpID0+IFByb21pc2U8Ym9vbGVhbiB8IG51bGw+O1xufVxuXG4vKipcbiAqIFJldHVybiB2YWx1ZSBmcm9tIHVzZU1vdmVIYW5kbGVycyBob29rXG4gKi9cbmludGVyZmFjZSBVc2VNb3ZlSGFuZGxlcnNSZXR1cm4ge1xuICAvKiogRXZlbnQgaGFuZGxlciBmb3IgcGllY2UgZHJvcCBldmVudHMgZnJvbSBkcmFnLWFuZC1kcm9wICovXG4gIG9uRHJvcDogKHNvdXJjZVNxdWFyZTogc3RyaW5nLCB0YXJnZXRTcXVhcmU6IHN0cmluZywgcGllY2U6IHN0cmluZykgPT4gYm9vbGVhbjtcbiAgLyoqIEV2ZW50IGhhbmRsZXIgZm9yIHNxdWFyZSBjbGljayBldmVudHMgKGNsaWNrLXRvLW1vdmUpICovXG4gIG9uU3F1YXJlQ2xpY2s6ICh7IHBpZWNlLCBzcXVhcmUgfTogeyBwaWVjZTogYW55OyBzcXVhcmU6IHN0cmluZyB9KSA9PiB2b2lkO1xuICAvKiogQ3VycmVudGx5IHNlbGVjdGVkIHNxdWFyZSBmb3IgY2xpY2stdG8tbW92ZSBmdW5jdGlvbmFsaXR5ICovXG4gIHNlbGVjdGVkU3F1YXJlOiBzdHJpbmcgfCBudWxsO1xuICAvKiogVXRpbGl0eSBmdW5jdGlvbiB0byBjbGVhciB0aGUgY3VycmVudCBzZWxlY3Rpb24gKi9cbiAgY2xlYXJTZWxlY3Rpb246ICgpID0+IHZvaWQ7XG59XG5cbi8qKlxuICogQ3VzdG9tIGhvb2sgZm9yIGNoZXNzIG1vdmUgaGFuZGxpbmcgbG9naWNcbiAqIFxuICogQGRlc2NyaXB0aW9uXG4gKiBFbmNhcHN1bGF0ZXMgYWxsIG1vdmUgaGFuZGxpbmcgbG9naWMgaW5jbHVkaW5nOlxuICogLSBDb3JlIG1vdmUgdmFsaWRhdGlvbiBhbmQgZXhlY3V0aW9uXG4gKiAtIERyYWctYW5kLWRyb3AgZXZlbnQgaGFuZGxpbmcgd2l0aCBwcm9tb3Rpb24gZGV0ZWN0aW9uXG4gKiAtIENsaWNrLXRvLW1vdmUgZnVuY3Rpb25hbGl0eSB3aXRoIHNlbGVjdGlvbiBzdGF0ZSBtYW5hZ2VtZW50XG4gKiAtIFBvc2l0aW9uIHJlYWRpbmVzcyB2YWxpZGF0aW9uIGFuZCBnYW1lIHN0YXRlIGNoZWNrc1xuICogLSBDb21wcmVoZW5zaXZlIGxvZ2dpbmcgYW5kIGVycm9yIGhhbmRsaW5nXG4gKiBcbiAqIEByZW1hcmtzXG4gKiBUaGlzIGhvb2sgbWFpbnRhaW5zIGFsbCB0aGUgY29tcGxleCBidXNpbmVzcyBsb2dpYyB0aGF0IHdhcyBwcmV2aW91c2x5XG4gKiBlbWJlZGRlZCBpbiBUcmFpbmluZ0JvYXJkLiBJdCBjb29yZGluYXRlcyBiZXR3ZWVuIG11bHRpcGxlIHNlcnZpY2VzOlxuICogLSBDaGVzcy5qcyBmb3IgbW92ZSB2YWxpZGF0aW9uXG4gKiAtIFRyYWluaW5nU2Vzc2lvbiBob29rIGZvciBnYW1lIHN0YXRlIHZpYSBvbk1vdmUgY2FsbGJhY2tcbiAqIC0gVUkgYWN0aW9ucyBmb3IgdXNlciBmZWVkYmFja1xuICogLSBMb2dnaW5nIHNlcnZpY2UgZm9yIGRlYnVnZ2luZ1xuICogXG4gKiBUaGUgaG9vayBwcmVzZXJ2ZXMgYWxsIG9yaWdpbmFsIGZ1bmN0aW9uYWxpdHkgd2hpbGUgcHJvdmlkaW5nIGEgY2xlYW5cbiAqIGludGVyZmFjZSB0aGF0IHNlcGFyYXRlcyBjb25jZXJucyBiZXR3ZWVuIFVJIHJlbmRlcmluZyBhbmQgYnVzaW5lc3MgbG9naWMuXG4gKiBcbiAqIEBwYXJhbSBwcm9wcyBDb25maWd1cmF0aW9uIG9iamVjdCB3aXRoIGdhbWUgc3RhdGUgYW5kIGNhbGxiYWNrc1xuICogQHJldHVybnMgT2JqZWN0IHdpdGggZXZlbnQgaGFuZGxlcnMgYW5kIHNlbGVjdGlvbiBzdGF0ZVxuICovXG5leHBvcnQgY29uc3QgdXNlTW92ZUhhbmRsZXJzID0gKHtcbiAgY3VycmVudEZlbixcbiAgaXNHYW1lRmluaXNoZWQsXG4gIGlzUG9zaXRpb25SZWFkeSxcbiAgdHJhaW5pbmdTdGF0ZSxcbiAgb25Nb3ZlLFxufTogVXNlTW92ZUhhbmRsZXJzUHJvcHMpOiBVc2VNb3ZlSGFuZGxlcnNSZXR1cm4gPT4ge1xuICBjb25zdCBbLCB1aUFjdGlvbnNdID0gdXNlVUlTdG9yZSgpO1xuICBcbiAgLy8gQ2xpY2stdG8tbW92ZSBzdGF0ZSBtYW5hZ2VtZW50XG4gIGNvbnN0IFtzZWxlY3RlZFNxdWFyZSwgc2V0U2VsZWN0ZWRTcXVhcmVdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgLyoqXG4gICAqIENsZWFyIHRoZSBjdXJyZW50IHNxdWFyZSBzZWxlY3Rpb25cbiAgICovXG4gIGNvbnN0IGNsZWFyU2VsZWN0aW9uID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldFNlbGVjdGVkU3F1YXJlKG51bGwpO1xuICB9LCBbXSk7XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgY2hlc3MgbW92ZSBleGVjdXRpb24gYW5kIHZhbGlkYXRpb25cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IG1vdmUgLSBNb3ZlIG9iamVjdCB3aXRoIGZyb20vdG8gc3F1YXJlc1xuICAgKiBAcGFyYW0ge3N0cmluZ30gbW92ZS5mcm9tIC0gU3RhcnRpbmcgc3F1YXJlIChlLmcuLCBcImUyXCIpXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtb3ZlLnRvIC0gVGFyZ2V0IHNxdWFyZSAoZS5nLiwgXCJlNFwiKVxuICAgKiBAcGFyYW0ge3N0cmluZ30gW21vdmUucHJvbW90aW9uXSAtIFByb21vdGlvbiBwaWVjZSBpZiBhcHBsaWNhYmxlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IE1vdmUgcmVzdWx0IG9yIG51bGwgaWYgaW52YWxpZFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogQ29yZSBtb3ZlIGhhbmRsZXIgdGhhdDpcbiAgICogMS4gVmFsaWRhdGVzIG1vdmUgbGVnYWxpdHkgdXNpbmcgY2hlc3MuanNcbiAgICogMi4gRXhlY3V0ZXMgdGhlIG1vdmUgb24gdGhlIGdhbWUgaW5zdGFuY2VcbiAgICogMy4gVHJpZ2dlcnMgdGFibGViYXNlIGFuYWx5c2lzIGZvciBvcHBvbmVudCByZXNwb25zZVxuICAgKiA0LiBVcGRhdGVzIGFsbCByZWxldmFudCBzdGF0ZSBzbGljZXNcbiAgICogNS4gSGFuZGxlcyBlcnJvcnMgd2l0aCB1c2VyIGZlZWRiYWNrXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIFRoaXMgZnVuY3Rpb24gY29vcmRpbmF0ZXMgYmV0d2VlbiBtdWx0aXBsZSBzZXJ2aWNlczpcbiAgICogLSBDaGVzcy5qcyBmb3IgbW92ZSB2YWxpZGF0aW9uXG4gICAqIC0gVHJhaW5pbmdTZXNzaW9uIGhvb2sgZm9yIGdhbWUgc3RhdGVcbiAgICogLSBUYWJsZWJhc2Ugb3JjaGVzdHJhdG9yIGZvciBvcHBvbmVudCBtb3Zlc1xuICAgKiAtIFVJIGFjdGlvbnMgZm9yIHVzZXIgZmVlZGJhY2tcbiAgICpcbiAgICogSW52YWxpZCBtb3ZlcyBpbmNyZW1lbnQgdGhlIG1pc3Rha2UgY291bnRlciBhbmQgc2hvd1xuICAgKiBhIHdhcm5pbmcgdG9hc3Qgd2l0aG91dCBtb2RpZnlpbmcgZ2FtZSBzdGF0ZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyBVc2VyIGRyYWdzIHBpZWNlXG4gICAqIGF3YWl0IGhhbmRsZU1vdmUoeyBmcm9tOiBcImUyXCIsIHRvOiBcImU0XCIgfSk7XG4gICAqXG4gICAqIC8vIFdpdGggcHJvbW90aW9uXG4gICAqIGF3YWl0IGhhbmRsZU1vdmUoeyBmcm9tOiBcImU3XCIsIHRvOiBcImU4XCIsIHByb21vdGlvbjogXCJxXCIgfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgY29uc3QgaGFuZGxlTW92ZSA9IHVzZUNhbGxiYWNrKFxuICAgIGFzeW5jIChtb3ZlOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGxvZ2dlciA9IGdldExvZ2dlcigpLnNldENvbnRleHQoXCJ1c2VNb3ZlSGFuZGxlcnMtaGFuZGxlTW92ZVwiKTtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhcIvCfmoAgaGFuZGxlTW92ZSBjYWxsZWRcIiwge1xuICAgICAgICBtb3ZlLFxuICAgICAgICBpc0dhbWVGaW5pc2hlZCxcbiAgICAgICAgaXNQb3NpdGlvblJlYWR5LFxuICAgICAgICBoYXNDdXJyZW50UG9zaXRpb246ICEhdHJhaW5pbmdTdGF0ZS5jdXJyZW50UG9zaXRpb24sXG4gICAgICAgIGN1cnJlbnRGZW4sXG4gICAgICB9KTtcblxuICAgICAgLy8gQ1JJVElDQUw6IEJsb2NrIG1vdmVzIGlmIHBvc2l0aW9uIGlzIG5vdCByZWFkeVxuICAgICAgaWYgKCFpc1Bvc2l0aW9uUmVhZHkpIHtcbiAgICAgICAgbG9nZ2VyLndhcm4oXCLim5QgUG9zaXRpb24gbm90IHJlYWR5LCBibG9ja2luZyBtb3ZlXCIsIHtcbiAgICAgICAgICBoYXNDdXJyZW50UG9zaXRpb246ICEhdHJhaW5pbmdTdGF0ZS5jdXJyZW50UG9zaXRpb24sXG4gICAgICAgICAgY3VycmVudFBvc2l0aW9uSWQ6IHRyYWluaW5nU3RhdGUuY3VycmVudFBvc2l0aW9uPy5pZCxcbiAgICAgICAgICBjdXJyZW50UG9zaXRpb25GZW46IHRyYWluaW5nU3RhdGUuY3VycmVudFBvc2l0aW9uPy5mZW4sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIEFkZCB0aGVzZSBjcml0aWNhbCBkZWJ1ZyBsb2dzXG4gICAgICBjb25zdCBtb3ZlTG9nZ2VyID0gZ2V0TG9nZ2VyKCkuc2V0Q29udGV4dChcInVzZU1vdmVIYW5kbGVycy1oYW5kbGVNb3ZlXCIpO1xuICAgICAgbW92ZUxvZ2dlci5kZWJ1ZyhcImhhbmRsZU1vdmUgY2FsbGVkXCIsIHsgbW92ZSB9KTtcbiAgICAgIG1vdmVMb2dnZXIuZGVidWcoXCJDdXJyZW50IEZFTlwiLCB7IGZlbjogY3VycmVudEZlbiB9KTtcblxuICAgICAgaWYgKGlzR2FtZUZpbmlzaGVkKSB7XG4gICAgICAgIGxvZ2dlci53YXJuKFwiaGFuZGxlTW92ZSBlYXJseSByZXR1cm5cIiwgeyBpc0dhbWVGaW5pc2hlZCB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICAvLyBDaGVjayBpZiBwaWVjZSB3YXMgZHJvcHBlZCBvbiBzYW1lIHNxdWFyZSAobm8gbW92ZSlcbiAgICAgIGlmIChtb3ZlLmZyb20gPT09IG1vdmUudG8pIHtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwiUGllY2UgZHJvcHBlZCBvbiBzYW1lIHNxdWFyZSwgaWdub3JpbmdcIiwge1xuICAgICAgICAgIHNxdWFyZTogbW92ZS5mcm9tLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0cnkge1xuICAgICAgICAvLyBEZWJ1ZzogTG9nIGdhbWUgc3RhdGUgYmVmb3JlIHZhbGlkYXRpb25cbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwiR2FtZSBzdGF0ZSBiZWZvcmUgbW92ZSB2YWxpZGF0aW9uXCIsIHtcbiAgICAgICAgICBoYXNHYW1lOiBmYWxzZSwgLy8gZ2FtZSBpcyBub3cgbnVsbCwgaGFuZGxlZCBieSBDaGVzc1NlcnZpY2VcbiAgICAgICAgICBjdXJyZW50RmVuOiBjdXJyZW50RmVuLFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBNb3ZlIHZhbGlkYXRpb24gaXMgaGFuZGxlZCBieSBDaGVzc1NlcnZpY2UgaW4gbWFrZU1vdmVcbiAgICAgICAgLy8gV2UgZG9uJ3QgbmVlZCB0byB2YWxpZGF0ZSBoZXJlIGFueW1vcmVcbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwiTW92ZSB2YWxpZGF0aW9uIGRlbGVnYXRlZCB0byBDaGVzc1NlcnZpY2VcIiwge1xuICAgICAgICAgIG1vdmUsXG4gICAgICAgICAgY3VycmVudEZlbixcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gRmlyc3QgbWFrZSB0aGUgbW92ZSBvbiB0aGUgbG9jYWwgZ2FtZSBpbnN0YW5jZVxuICAgICAgICBsb2dnZXIuZGVidWcoXCJDYWxsaW5nIG9uTW92ZSBjYWxsYmFja1wiLCB7IG1vdmUgfSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG9uTW92ZShtb3ZlKTtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwib25Nb3ZlIHJlc3VsdFwiLCB7IHJlc3VsdCB9KTtcblxuICAgICAgICAvLyBUaGUgb3JjaGVzdHJhdG9yIG5vdyBoYW5kbGVzIHRoZSBlbnRpcmUgd29ya2Zsb3cgaW5jbHVkaW5nOlxuICAgICAgICAvLyAtIE1vdmUgdmFsaWRhdGlvblxuICAgICAgICAvLyAtIEVycm9yIGRpYWxvZyBmb3Igc3Vib3B0aW1hbCBtb3Zlc1xuICAgICAgICAvLyAtIE9wcG9uZW50IHR1cm4gKG9ubHkgaWYgbW92ZSB3YXMgb3B0aW1hbClcbiAgICAgICAgLy8gVHJhaW5pbmdCb2FyZCBzaG91bGQgTk9UIGNhbGwgaGFuZGxlT3Bwb25lbnRUdXJuIGRpcmVjdGx5XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9XG4gICAgICAgICAgZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBcIk1vdmUgZmFpbGVkXCI7XG4gICAgICAgIHVpQWN0aW9ucy5zaG93VG9hc3QoZXJyb3JNZXNzYWdlLCBcImVycm9yXCIpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcbiAgICBbXG4gICAgICBpc0dhbWVGaW5pc2hlZCxcbiAgICAgIG9uTW92ZSxcbiAgICAgIHRyYWluaW5nU3RhdGUsXG4gICAgICB1aUFjdGlvbnMsXG4gICAgICBjdXJyZW50RmVuLFxuICAgICAgaXNQb3NpdGlvblJlYWR5LFxuICAgICAgdHJhaW5pbmdTdGF0ZS5jdXJyZW50UG9zaXRpb24sXG4gICAgXSxcbiAgKTtcblxuICAvKipcbiAgICogSGFuZGxlcyBwaWVjZSBkcm9wIGV2ZW50cyBmcm9tIHRoZSBjaGVzc2JvYXJkXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VTcXVhcmUgLSBTcXVhcmUgd2hlcmUgcGllY2Ugd2FzIHBpY2tlZCB1cFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U3F1YXJlIC0gU3F1YXJlIHdoZXJlIHBpZWNlIHdhcyBkcm9wcGVkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwaWVjZSAtIFBpZWNlIHR5cGUgKHJlcXVpcmVkIGJ5IGludGVyZmFjZSlcbiAgICogQHJldHVybnMge2Jvb2xlYW59IFdoZXRoZXIgdGhlIGRyb3Agd2FzIGFjY2VwdGVkXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBDb252ZXJ0cyBkcmFnLWFuZC1kcm9wIGV2ZW50cyBpbnRvIG1vdmUgb2JqZWN0cyBhbmQgZGVsZWdhdGVzXG4gICAqIHRvIHRoZSBtYWluIG1vdmUgaGFuZGxlci4gQWx3YXlzIHByb21vdGVzIHRvIHF1ZWVuIGJ5IGRlZmF1bHQuXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIFRoaXMgaXMgdGhlIHByaW1hcnkgdXNlciBpbnRlcmFjdGlvbiBoYW5kbGVyIGZvciB0aGUgY2hlc3MgYm9hcmQuXG4gICAqIFJldHVybnMgZmFsc2UgaWYgZ2FtZSBpcyBmaW5pc2hlZCB0byBwcmV2ZW50IGZ1cnRoZXIgbW92ZXMuXG4gICAqIFRoZSBhY3R1YWwgbW92ZSB2YWxpZGF0aW9uIGhhcHBlbnMgaW4gaGFuZGxlTW92ZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgdHlwZXNjcmlwdFxuICAgKiAvLyBVc2VyIGRyYWdzIHBhd24gZnJvbSBlMiB0byBlNFxuICAgKiBvbkRyb3AoXCJlMlwiLCBcImU0XCIsIFwid1BcIikgLy8gcmV0dXJucyB0cnVlIGlmIHZhbGlkXG4gICAqIGBgYFxuICAgKi9cbiAgY29uc3Qgb25Ecm9wID0gdXNlQ2FsbGJhY2soXG4gICAgKHNvdXJjZVNxdWFyZTogc3RyaW5nLCB0YXJnZXRTcXVhcmU6IHN0cmluZywgcGllY2U6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICAgICAgY29uc3QgbG9nZ2VyID0gZ2V0TG9nZ2VyKCkuc2V0Q29udGV4dChcInVzZU1vdmVIYW5kbGVycy1vbkRyb3BcIik7XG5cbiAgICAgIGxvZ2dlci5kZWJ1ZyhcIvCfjq8gb25Ecm9wIGNhbGxlZFwiLCB7XG4gICAgICAgIHNvdXJjZVNxdWFyZSxcbiAgICAgICAgdGFyZ2V0U3F1YXJlLFxuICAgICAgICBwaWVjZSxcbiAgICAgICAgaXNQb3NpdGlvblJlYWR5LFxuICAgICAgICBpc0dhbWVGaW5pc2hlZCxcbiAgICAgICAgaGFzQ3VycmVudFBvc2l0aW9uOiAhIXRyYWluaW5nU3RhdGUuY3VycmVudFBvc2l0aW9uLFxuICAgICAgICBjdXJyZW50RmVuLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIEJsb2NrIGRyb3BzIGlmIHBvc2l0aW9uIGlzIG5vdCByZWFkeSBvciBnYW1lIGlzIGZpbmlzaGVkXG4gICAgICBpZiAoIWlzUG9zaXRpb25SZWFkeSB8fCBpc0dhbWVGaW5pc2hlZCkge1xuICAgICAgICBsb2dnZXIud2FybihcIuKblCBvbkRyb3AgYmxvY2tlZFwiLCB7XG4gICAgICAgICAgaXNQb3NpdGlvblJlYWR5LFxuICAgICAgICAgIGlzR2FtZUZpbmlzaGVkLFxuICAgICAgICAgIHJlYXNvbjogIWlzUG9zaXRpb25SZWFkeSA/IFwicG9zaXRpb24gbm90IHJlYWR5XCIgOiBcImdhbWUgZmluaXNoZWRcIixcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdGhpcyBpcyBhIHBhd24gcHJvbW90aW9uXG4gICAgICBjb25zdCBpc1Bhd24gPSBwaWVjZS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKFwicFwiKTtcbiAgICAgIGNvbnN0IHRhcmdldFJhbmsgPSB0YXJnZXRTcXVhcmVbMV07XG4gICAgICBjb25zdCBpc1Byb21vdGlvblJhbmsgPSB0YXJnZXRSYW5rID09PSBcIjhcIiB8fCB0YXJnZXRSYW5rID09PSBcIjFcIjtcblxuICAgICAgY29uc3QgbW92ZTogYW55ID0ge1xuICAgICAgICBmcm9tOiBzb3VyY2VTcXVhcmUsXG4gICAgICAgIHRvOiB0YXJnZXRTcXVhcmUsXG4gICAgICB9O1xuXG4gICAgICAvLyBBZGQgcHJvbW90aW9uIGlmIHBhd24gcmVhY2hlcyBsYXN0IHJhbmtcbiAgICAgIGlmIChpc1Bhd24gJiYgaXNQcm9tb3Rpb25SYW5rKSB7XG4gICAgICAgIG1vdmUucHJvbW90aW9uID0gXCJxXCI7IC8vIERlZmF1bHQgdG8gcXVlZW4gcHJvbW90aW9uXG4gICAgICB9XG5cbiAgICAgIGxvZ2dlci5kZWJ1ZyhcIuKchSBvbkRyb3AgY2FsbGluZyBoYW5kbGVNb3ZlXCIsIHsgbW92ZSB9KTtcbiAgICAgIGhhbmRsZU1vdmUobW92ZSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIFtcbiAgICAgIGhhbmRsZU1vdmUsXG4gICAgICBpc0dhbWVGaW5pc2hlZCxcbiAgICAgIGlzUG9zaXRpb25SZWFkeSxcbiAgICAgIHRyYWluaW5nU3RhdGUuY3VycmVudFBvc2l0aW9uLFxuICAgICAgY3VycmVudEZlbixcbiAgICBdLFxuICApO1xuXG4gIC8qKlxuICAgKiBIYW5kbGVzIHNxdWFyZSBjbGljayBldmVudHMgZm9yIGNsaWNrLXRvLW1vdmUgZnVuY3Rpb25hbGl0eVxuICAgKiBcbiAgICogQHBhcmFtIHtvYmplY3R9IGFyZ3MgLSBBcmd1bWVudHMgZnJvbSByZWFjdC1jaGVzc2JvYXJkXG4gICAqIEBwYXJhbSB7YW55fSBhcmdzLnBpZWNlIC0gUGllY2Ugb24gdGhlIGNsaWNrZWQgc3F1YXJlIChjYW4gYmUgbnVsbClcbiAgICogQHBhcmFtIHtzdHJpbmd9IGFyZ3Muc3F1YXJlIC0gU3F1YXJlIHRoYXQgd2FzIGNsaWNrZWRcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqIFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogSW1wbGVtZW50cyBjbGljay10by1tb3ZlIGludGVyYWN0aW9uIHBhdHRlcm4gZm9yIGFjY2Vzc2liaWxpdHkgYW5kIEUyRSB0ZXN0aW5nOlxuICAgKiAtIEZpcnN0IGNsaWNrIHNlbGVjdHMgcGllY2UgKGlmIHZhbGlkIHBpZWNlIG9uIHNxdWFyZSlcbiAgICogLSBTZWNvbmQgY2xpY2sgYXR0ZW1wdHMgbW92ZSB0byB0YXJnZXQgc3F1YXJlXG4gICAqIC0gQ2xpY2sgb24gc2FtZSBzcXVhcmUgZGVzZWxlY3RzIHBpZWNlXG4gICAqL1xuICBjb25zdCBvblNxdWFyZUNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgKHsgcGllY2UsIHNxdWFyZSB9OiB7IHBpZWNlOiBhbnk7IHNxdWFyZTogc3RyaW5nIH0pOiB2b2lkID0+IHtcbiAgICAgIGNvbnN0IGxvZ2dlciA9IGdldExvZ2dlcigpLnNldENvbnRleHQoXCJ1c2VNb3ZlSGFuZGxlcnMtb25TcXVhcmVDbGlja1wiKTtcblxuICAgICAgbG9nZ2VyLmRlYnVnKFwi8J+Wse+4jyBvblNxdWFyZUNsaWNrIGNhbGxlZFwiLCB7XG4gICAgICAgIHNxdWFyZSxcbiAgICAgICAgc2VsZWN0ZWRTcXVhcmUsXG4gICAgICAgIGlzUG9zaXRpb25SZWFkeSxcbiAgICAgICAgaXNHYW1lRmluaXNoZWQsXG4gICAgICB9KTtcblxuICAgICAgLy8gQmxvY2sgY2xpY2tzIGlmIHBvc2l0aW9uIGlzIG5vdCByZWFkeSBvciBnYW1lIGlzIGZpbmlzaGVkXG4gICAgICBpZiAoIWlzUG9zaXRpb25SZWFkeSB8fCBpc0dhbWVGaW5pc2hlZCkge1xuICAgICAgICBsb2dnZXIud2FybihcIuKblCBvblNxdWFyZUNsaWNrIGJsb2NrZWRcIiwge1xuICAgICAgICAgIGlzUG9zaXRpb25SZWFkeSxcbiAgICAgICAgICBpc0dhbWVGaW5pc2hlZCxcbiAgICAgICAgICByZWFzb246ICFpc1Bvc2l0aW9uUmVhZHkgPyBcInBvc2l0aW9uIG5vdCByZWFkeVwiIDogXCJnYW1lIGZpbmlzaGVkXCIsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIElmIG5vIHNxdWFyZSBpcyBzZWxlY3RlZCwgc2VsZWN0IHRoaXMgc3F1YXJlIGlmIGl0IGhhcyBhIHBpZWNlXG4gICAgICBpZiAoIXNlbGVjdGVkU3F1YXJlKSB7XG4gICAgICAgIGlmIChwaWVjZSkge1xuICAgICAgICAgIC8vIENoZWNrIGlmIGl0J3MgdGhlIHJpZ2h0IGNvbG9yJ3MgdHVyblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBjaGVzcyA9IG5ldyBDaGVzcyhjdXJyZW50RmVuKTtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRUdXJuID0gY2hlc3MudHVybigpO1xuICAgICAgICAgICAgY29uc3QgcGllY2VDb2xvciA9IHBpZWNlLnBpZWNlVHlwZT8uWzBdOyAvLyAndycgb3IgJ2InXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChwaWVjZUNvbG9yID09PSBjdXJyZW50VHVybikge1xuICAgICAgICAgICAgICBzZXRTZWxlY3RlZFNxdWFyZShzcXVhcmUpO1xuICAgICAgICAgICAgICBsb2dnZXIuZGVidWcoXCLinIUgU3F1YXJlIHNlbGVjdGVkXCIsIHsgc3F1YXJlLCBwaWVjZSB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhcIuKdjCBXcm9uZyBjb2xvciBwaWVjZVwiLCB7IHNxdWFyZSwgcGllY2UsIGN1cnJlbnRUdXJuIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoXCJGYWlsZWQgdG8gdmFsaWRhdGUgcGllY2UgY29sb3JcIiwgZXJyb3IgYXMgRXJyb3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsb2dnZXIuZGVidWcoXCLinYwgTm8gcGllY2Ugb24gc3F1YXJlXCIsIHsgc3F1YXJlIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gSWYgc2FtZSBzcXVhcmUgY2xpY2tlZCwgZGVzZWxlY3RcbiAgICAgIGlmIChzZWxlY3RlZFNxdWFyZSA9PT0gc3F1YXJlKSB7XG4gICAgICAgIHNldFNlbGVjdGVkU3F1YXJlKG51bGwpO1xuICAgICAgICBsb2dnZXIuZGVidWcoXCLwn5SEIFNxdWFyZSBkZXNlbGVjdGVkXCIsIHsgc3F1YXJlIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRyeSB0byBtYWtlIG1vdmUgZnJvbSBzZWxlY3RlZCBzcXVhcmUgdG8gY2xpY2tlZCBzcXVhcmVcbiAgICAgIGNvbnN0IHJlc3VsdCA9IG9uRHJvcChzZWxlY3RlZFNxdWFyZSwgc3F1YXJlLCBcIlwiKTsgLy8gUGllY2UgdHlwZSBub3QgbmVlZGVkXG4gICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgIHNldFNlbGVjdGVkU3F1YXJlKG51bGwpOyAvLyBDbGVhciBzZWxlY3Rpb24gYWZ0ZXIgc3VjY2Vzc2Z1bCBtb3ZlXG4gICAgICAgIGxvZ2dlci5kZWJ1ZyhcIuKchSBNb3ZlIGNvbXBsZXRlZCB2aWEgY2xpY2tcIiwgeyBmcm9tOiBzZWxlY3RlZFNxdWFyZSwgdG86IHNxdWFyZSB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvZ2dlci5kZWJ1ZyhcIuKdjCBNb3ZlIGZhaWxlZCB2aWEgY2xpY2tcIiwgeyBmcm9tOiBzZWxlY3RlZFNxdWFyZSwgdG86IHNxdWFyZSB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtzZWxlY3RlZFNxdWFyZSwgaXNQb3NpdGlvblJlYWR5LCBpc0dhbWVGaW5pc2hlZCwgY3VycmVudEZlbiwgb25Ecm9wXSxcbiAgKTtcblxuICByZXR1cm4ge1xuICAgIG9uRHJvcCxcbiAgICBvblNxdWFyZUNsaWNrLFxuICAgIHNlbGVjdGVkU3F1YXJlLFxuICAgIGNsZWFyU2VsZWN0aW9uLFxuICB9O1xufTsiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBcUNDOztBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsT0FBQTtNQUFBQyxPQUFB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