8e65064dce074e861b2599ebe5208b3f
/**
 * @fileoverview Unit tests for Header component
 * @description Tests main application header with title and styling
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _Header = require("../../../../shared/components/layout/Header");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe("Header Component", ()=>{
    describe("Rendering", ()=>{
        it("should render main title", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            expect(_react1.screen.getByText("Schach Endspiel Training")).toBeInTheDocument();
        });
        it("should render subtitle", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            expect(_react1.screen.getByText("Verbessere dein Endspiel")).toBeInTheDocument();
        });
        it("should render chess king icon", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            expect(_react1.screen.getByText("♔")).toBeInTheDocument();
        });
        it("should be rendered as header element", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = _react1.screen.getByRole("banner");
            expect(header).toBeInTheDocument();
            expect(header.tagName).toBe("HEADER");
        });
    });
    describe("Structure and Layout", ()=>{
        it("should have proper header structure", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = container.querySelector("header");
            expect(header).toBeInTheDocument();
            // Should have max-width container
            const container_div = header === null || header === void 0 ? void 0 : header.querySelector(".max-w-7xl");
            expect(container_div).toBeInTheDocument();
            // Should have flex layout
            const flexDiv = container_div === null || container_div === void 0 ? void 0 : container_div.querySelector(".flex.items-center.justify-between");
            expect(flexDiv).toBeInTheDocument();
        });
        it("should have left section with icon and title", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            // Find the left section (first flex section)
            const leftSection = container.querySelector(".flex.items-center.space-x-3");
            expect(leftSection).toBeInTheDocument();
            // Should contain icon and title
            expect(leftSection).toHaveTextContent("♔");
            expect(leftSection).toHaveTextContent("Schach Endspiel Training");
        });
        it("should have right section with subtitle", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            // The subtitle should be in the right section
            const subtitle = _react1.screen.getByText("Verbessere dein Endspiel");
            expect(subtitle).toBeInTheDocument();
        });
    });
    describe("CSS Classes and Styling", ()=>{
        it("should have fixed positioning classes", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = container.querySelector("header");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("fixed");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("top-0");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("left-0");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("right-0");
        });
        it("should have proper z-index", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = container.querySelector("header");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("z-50");
        });
        it("should have dark card styling", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = container.querySelector("header");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("dark-card-elevated");
        });
        it("should have responsive container", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const containerDiv = container.querySelector(".max-w-7xl.mx-auto");
            expect(containerDiv).toBeInTheDocument();
        });
        it("should have proper padding", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const containerDiv = container.querySelector(".px-4.py-3");
            expect(containerDiv).toBeInTheDocument();
        });
        it("should use CSS custom properties for colors", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const title = _react1.screen.getByText("Schach Endspiel Training");
            const subtitle = _react1.screen.getByText("Verbessere dein Endspiel");
            // Check that the elements have the correct inline styles set
            // Note: JSDOM may not parse CSS custom properties, so we check for the property being set
            expect(title).toHaveStyle({
                color: "var(--text-primary)"
            });
            expect(subtitle).toHaveStyle({
                color: "var(--text-secondary)"
            });
        });
    });
    describe("Typography", ()=>{
        it("should have correct title typography classes", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const title = _react1.screen.getByText("Schach Endspiel Training");
            expect(title.className).toContain("text-xl");
            expect(title.className).toContain("font-bold");
        });
        it("should have correct subtitle typography classes", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const subtitle = _react1.screen.getByText("Verbessere dein Endspiel");
            expect(subtitle.className).toContain("text-sm");
        });
        it("should have correct icon size", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const icon = _react1.screen.getByText("♔");
            expect(icon.className).toContain("text-2xl");
        });
    });
    describe("Accessibility", ()=>{
        it("should use semantic header element", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = _react1.screen.getByRole("banner");
            expect(header.tagName).toBe("HEADER");
        });
        it("should have proper heading hierarchy", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const heading = _react1.screen.getByRole("heading", {
                level: 1
            });
            expect(heading).toHaveTextContent("Schach Endspiel Training");
        });
        it("should have accessible text content", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            // All text should be visible and accessible
            expect(_react1.screen.getByText("Schach Endspiel Training")).toBeVisible();
            expect(_react1.screen.getByText("Verbessere dein Endspiel")).toBeVisible();
            expect(_react1.screen.getByText("♔")).toBeVisible();
        });
    });
    describe("Responsive Design", ()=>{
        it("should have responsive container classes", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const responsiveContainer = container.querySelector(".max-w-7xl.mx-auto.px-4");
            expect(responsiveContainer).toBeInTheDocument();
        });
        it("should have flexible layout", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const flexContainer = container.querySelector(".flex.items-center.justify-between");
            expect(flexContainer).toBeInTheDocument();
        });
        it("should have proper spacing classes", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const spacedContainer = container.querySelector(".space-x-3");
            expect(spacedContainer).toBeInTheDocument();
        });
    });
    describe("Component Stability", ()=>{
        it("should render consistently", ()=>{
            const { container: container1 } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const { container: container2 } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            expect(container1.innerHTML).toBe(container2.innerHTML);
        });
        it("should not have dynamic content", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const initialHtml = container.innerHTML;
            // Re-render after some time
            setTimeout(()=>{
                const { container: newContainer } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
                expect(newContainer.innerHTML).toBe(initialHtml);
            }, 100);
        });
    });
    describe("Layout Integration", ()=>{
        it("should be positioned for layout integration", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = container.querySelector("header");
            // Should be fixed positioned to work with app layout
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("fixed");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("top-0");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("left-0");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("right-0");
            // Should have high z-index to stay on top
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("z-50");
        });
        it("should have elevated styling for visibility", ()=>{
            const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const header = container.querySelector("header");
            expect(header === null || header === void 0 ? void 0 : header.className).toContain("dark-card-elevated");
        });
    });
    describe("Text Content", ()=>{
        it("should display German text correctly", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            // Should handle German characters correctly
            expect(_react1.screen.getByText("Schach Endspiel Training")).toBeInTheDocument();
            expect(_react1.screen.getByText("Verbessere dein Endspiel")).toBeInTheDocument();
        });
        it("should display Unicode chess symbol correctly", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const icon = _react1.screen.getByText("♔");
            expect(icon).toBeInTheDocument();
            expect(icon.textContent).toBe("♔");
        });
    });
    describe("Performance", ()=>{
        it("should be a functional component without state", ()=>{
            // Header should be a simple functional component
            expect(typeof _Header.Header).toBe("function");
        });
        it("should render quickly without heavy computations", ()=>{
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            const endTime = performance.now();
            // Should render very quickly (less than 10ms in most cases)
            expect(endTime - startTime).toBeLessThan(50);
        });
        it("should not cause memory leaks", ()=>{
            const { unmount } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {}));
            // Should unmount cleanly
            expect(()=>unmount()).not.toThrow();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,