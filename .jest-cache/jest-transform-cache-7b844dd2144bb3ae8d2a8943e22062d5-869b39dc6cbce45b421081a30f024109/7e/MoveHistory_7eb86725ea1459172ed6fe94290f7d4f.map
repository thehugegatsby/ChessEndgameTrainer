{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/components/training/MoveHistory.tsx"],"sourcesContent":["/**\n * @file Move history display component\n * @module components/training/MoveHistory\n *\n * @description\n * Displays chess move history in a traditional two-column format with\n * optional evaluations. Shows moves in algebraic notation with visual\n * styling and supports tablebase evaluations.\n *\n * @remarks\n * Key features:\n * - Two-column layout (white/black moves) with move numbering\n * - Optional evaluation display with color coding\n * - Tablebase evaluation support with emoji indicators\n * - Scrollable container with maximum height constraints\n * - Hover effects and responsive design\n * - Empty state messaging for no moves\n * - German language interface\n *\n * The component handles tablebase evaluations (win/draw/loss categories) with appropriate\n * visual indicators and color coding.\n */\n\nimport React from \"react\";\nimport { Move } from \"chess.js\";\nimport { UI_CONSTANTS } from \"@shared/constants/uiConstants\";\n\n/**\n * Evaluation data structure for move analysis\n *\n * @interface EvaluationData\n *\n * @property {number} evaluation - Engine evaluation in centipawns\n * @property {number} [mateInMoves] - Mate in X moves (positive for white advantage)\n * @property {object} [tablebase] - Tablebase evaluation data\n * @property {boolean} tablebase.isTablebasePosition - Whether position is in tablebase\n * @property {'win' | 'loss' | 'draw'} [tablebase.category] - Result category\n * @property {number} [tablebase.wdl] - Win/Draw/Loss numeric value\n * @property {number} [tablebase.dtm] - Distance to mate in plies\n */\ninterface EvaluationData {\n  evaluation: number;\n  mateInMoves?: number;\n  tablebase?: {\n    isTablebasePosition: boolean;\n    category?: \"win\" | \"loss\" | \"draw\";\n    wdl?: number;\n    dtm?: number;\n  };\n}\n\n/**\n * Props for the MoveHistory component\n *\n * @interface MoveHistoryProps\n *\n * @property {Move[]} moves - Array of chess moves in chess.js format\n * @property {boolean} [showEvaluations=false] - Whether to display evaluations\n * @property {EvaluationData[]} [evaluations] - Optional evaluation data for each move\n */\ninterface MoveHistoryProps {\n  moves: Move[];\n  showEvaluations?: boolean;\n  evaluations?: EvaluationData[];\n}\n\n/**\n * Move history display component\n *\n * @component\n * @description\n * Renders chess move history in a traditional chess scorecard format.\n * Displays moves in two columns (white and black) with move numbers,\n * and optionally shows position evaluations with color-coded indicators.\n *\n * @remarks\n * Component features:\n * - Traditional chess notation display (1. e4 e5 2. Nf3 Nc6)\n * - Tablebase integration with emoji indicators (üèÜ Win, ‚ùå Loss, ‚öñÔ∏è Draw)\n * - Engine evaluation display with centipawn values\n * - Mate-in-X detection and display\n * - Color-coded evaluation feedback\n * - Responsive design with scrollable content\n * - Hover effects for better user interaction\n *\n * Evaluation priority:\n * 1. Tablebase evaluations (exact results)\n * 2. Mate-in-X evaluations\n *\n * @example\n * ```tsx\n * // Basic move history without evaluations\n * <MoveHistory moves={gameHistory} />\n *\n * // With evaluation display\n * <MoveHistory\n *   moves={gameHistory}\n *   showEvaluations={true}\n *   evaluations={positionEvaluations}\n * />\n *\n * // In a game interface\n * <div className=\"game-sidebar\">\n *   <MoveHistory\n *     moves={currentGame.moves}\n *     showEvaluations={showAnalysis}\n *     evaluations={analysisData}\n *   />\n * </div>\n * ```\n *\n * @param {MoveHistoryProps} props - Move history configuration\n * @returns {JSX.Element} Rendered move history component\n */\nexport const MoveHistory: React.FC<MoveHistoryProps> = ({\n  moves,\n  showEvaluations = false,\n  evaluations = [],\n}) => {\n  // Erstelle Zugpaare mit korrekter sofortiger Positionierung\n  const movePairs: Array<{\n    number: number;\n    white: Move;\n    black: Move;\n    whiteEval: EvaluationData;\n    blackEval: EvaluationData;\n  }> = [];\n  for (let i = 0; i < moves.length; i += 2) {\n    const moveNumber = Math.floor(i / 2) + 1;\n    const whiteMove = moves[i];\n    const blackMove = moves[i + 1];\n\n    movePairs.push({\n      number: moveNumber,\n      white: whiteMove,\n      black: blackMove,\n      whiteEval: evaluations[i],\n      blackEval: evaluations[i + 1],\n    });\n  }\n\n  const formatEvaluation = (evalData?: {\n    evaluation: number;\n    mateInMoves?: number;\n    tablebase?: {\n      isTablebasePosition: boolean;\n      category?: \"win\" | \"loss\" | \"draw\";\n      wdl?: number;\n      dtm?: number;\n    };\n  }) => {\n    if (!evalData) return \"\";\n\n    // Tablebase evaluation with emojis\n    if (evalData.tablebase?.isTablebasePosition) {\n      const { category, wdl, dtm } = evalData.tablebase;\n      let emoji = \"\";\n      let text = \"\";\n\n      if (category) {\n        switch (category) {\n          case \"win\":\n            emoji = \"üèÜ\";\n            text = dtm ? `W${dtm}` : \"Win\";\n            break;\n          case \"loss\":\n            emoji = \"‚ùå\";\n            text = dtm ? `L${dtm}` : \"Loss\";\n            break;\n          case \"draw\":\n            emoji = \"‚öñÔ∏è\";\n            text = \"Draw\";\n            break;\n        }\n      } else if (wdl !== undefined) {\n        if (wdl === 2) {\n          emoji = \"üèÜ\";\n          text = dtm ? `W${dtm}` : \"Win\";\n        } else if (wdl === -2) {\n          emoji = \"‚ùå\";\n          text = dtm ? `L${dtm}` : \"Loss\";\n        } else {\n          emoji = \"‚öñÔ∏è\";\n          text = \"Draw\";\n        }\n      }\n\n      return `${emoji} ${text}`;\n    }\n\n    if (evalData.mateInMoves !== undefined) {\n      return `#${Math.abs(evalData.mateInMoves)}`;\n    }\n\n    const eval_ = evalData.evaluation;\n    if (Math.abs(eval_) < 0.1) return \"0.0\";\n    return eval_ > 0 ? `+${eval_.toFixed(1)}` : eval_.toFixed(1);\n  };\n\n  const getEvaluationColor = (evalData?: {\n    evaluation: number;\n    mateInMoves?: number;\n    tablebase?: {\n      isTablebasePosition: boolean;\n      category?: \"win\" | \"loss\" | \"draw\";\n      wdl?: number;\n    };\n  }) => {\n    if (!evalData) return \"\";\n\n    // Tablebase evaluation colors\n    if (evalData.tablebase?.isTablebasePosition) {\n      const { category, wdl } = evalData.tablebase;\n\n      if (category) {\n        switch (category) {\n          case \"win\":\n            return \"text-green-700\";\n          case \"loss\":\n            return \"text-red-700\";\n          case \"draw\":\n            return \"text-yellow-600\";\n        }\n      } else if (wdl !== undefined) {\n        if (wdl === 2) return \"text-green-700\";\n        if (wdl === -2) return \"text-red-700\";\n        return \"text-yellow-600\";\n      }\n    }\n\n    if (evalData.mateInMoves !== undefined) {\n      return evalData.mateInMoves > 0 ? \"text-green-700\" : \"text-red-700\";\n    }\n\n    const eval_ = evalData.evaluation;\n    if (eval_ > 2) return \"text-green-700\";\n    if (eval_ > 0.5) return \"text-green-600\";\n    if (eval_ > -0.5) return \"text-gray-600\";\n    if (eval_ > -2) return \"text-orange-600\";\n    return \"text-red-600\";\n  };\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-2xl shadow-lg h-full overflow-hidden\">\n      <div className=\"bg-gradient-to-r from-emerald-500 to-teal-600 text-white p-4\">\n        <h2 className=\"text-xl font-bold flex items-center gap-2\">\n          <span>üìã</span>\n          <span>Z√ºge{showEvaluations ? \" & Bewertungen\" : \"\"}</span>\n        </h2>\n      </div>\n\n      <div className=\"p-3\">\n        {moves.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"inline-flex items-center justify-center w-12 h-12 bg-gray-100 rounded-full mb-3\">\n              <span className=\"text-xl\">üéØ</span>\n            </div>\n            <p className=\"text-gray-500 text-base italic\">\n              Noch keine Z√ºge gespielt\n            </p>\n            <p className=\"text-gray-400 text-sm mt-1\">\n              Ziehe eine Figur um zu beginnen\n            </p>\n          </div>\n        ) : (\n          <div\n            className=\"overflow-y-auto\"\n            style={{ maxHeight: UI_CONSTANTS.MOVE_HISTORY.MAX_HEIGHT }}\n            data-testid=\"move-list\"\n          >\n            <div className=\"space-y-0.5\">\n              {movePairs.map((pair) => (\n                <div\n                  key={pair.number}\n                  className=\"group flex items-center py-1.5 px-2 rounded-lg hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 transition-all duration-200 border border-transparent hover:border-blue-100\"\n                >\n                  <span className=\"font-bold text-emerald-600 w-6 text-right text-sm\">\n                    {pair.number}.\n                  </span>\n                  <div className=\"flex-1 ml-3 min-w-0\">\n                    <div className=\"flex items-center gap-2\">\n                      {/* Wei√üer Zug - links */}\n                      <div className=\"flex flex-col items-center min-w-0 flex-1\">\n                        <span \n                          className=\"font-mono text-sm text-gray-800 bg-gray-50 px-1.5 py-0.5 rounded group-hover:bg-white transition-colors truncate w-full text-center\"\n                          data-testid={`move-item-${(pair.number - 1) * 2}`}\n                        >\n                          {pair.white.san}\n                        </span>\n                        {showEvaluations && (\n                          <span\n                            className={`text-xs font-mono ${getEvaluationColor(pair.whiteEval)} mt-0.5`}\n                          >\n                            {formatEvaluation(pair.whiteEval)}\n                          </span>\n                        )}\n                      </div>\n\n                      {/* Schwarzer Zug - rechts */}\n                      <div className=\"flex flex-col items-center min-w-0 flex-1\">\n                        {pair.black ? (\n                          <>\n                            <span \n                              className=\"font-mono text-sm text-gray-600 bg-gray-50 px-1.5 py-0.5 rounded group-hover:bg-white transition-colors truncate w-full text-center\"\n                              data-testid={`move-item-${(pair.number - 1) * 2 + 1}`}\n                            >\n                              {pair.black.san}\n                            </span>\n                            {showEvaluations && (\n                              <span\n                                className={`text-xs font-mono ${getEvaluationColor(pair.blackEval)} mt-0.5`}\n                              >\n                                {formatEvaluation(pair.blackEval)}\n                              </span>\n                            )}\n                          </>\n                        ) : (\n                          // Empty placeholder to maintain consistent spacing\n                          <div className=\"h-6\"></div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":["MoveHistory","moves","showEvaluations","evaluations","movePairs","i","length","moveNumber","Math","floor","whiteMove","blackMove","push","number","white","black","whiteEval","blackEval","formatEvaluation","evalData","tablebase","isTablebasePosition","category","wdl","dtm","emoji","text","undefined","mateInMoves","abs","eval_","evaluation","toFixed","getEvaluationColor","div","className","h2","span","p","style","maxHeight","UI_CONSTANTS","MOVE_HISTORY","MAX_HEIGHT","data-testid","map","pair","san"],"mappings":"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"}