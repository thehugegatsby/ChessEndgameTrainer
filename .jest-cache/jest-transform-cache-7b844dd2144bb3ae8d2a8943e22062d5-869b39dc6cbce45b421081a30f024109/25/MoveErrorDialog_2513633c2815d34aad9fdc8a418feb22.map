{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/components/ui/MoveErrorDialog.tsx"],"sourcesContent":["/**\n * @file Move error dialog component for chess training\n * @module components/ui/MoveErrorDialog\n *\n * @description\n * Modal dialog that appears when a player makes a suboptimal move during\n * training. Provides feedback based on Win/Draw/Loss (WDL) evaluation changes\n * and offers options to take back the move or continue. Features a\n * visually striking gradient design to capture attention.\n *\n * @remarks\n * Key features:\n * - Dynamic error messages based on WDL changes\n * - Shows best move suggestion when available\n * - Gradient border design for visual impact\n * - Options to take back or continue playing\n * - German language interface\n * - Backdrop click to close\n * - Responsive design\n *\n * The component analyzes the WDL change to provide context-appropriate\n * feedback messages (e.g., \"ruins winning position\", \"leads to loss\").\n */\n\nimport React from \"react\";\n\n/**\n * Props for the MoveErrorDialog component\n *\n * @interface MoveErrorDialogProps\n *\n * @property {boolean} isOpen - Controls dialog visibility\n * @property {() => void} onClose - Callback when dialog is closed\n * @property {() => void} onTakeBack - Callback to take back the move\n * @property {() => void} [onRestart] - Optional callback to restart (currently unused)\n * @property {() => void} [onShowBestMove] - Optional callback to show best move (currently unused)\n * @property {number} wdlBefore - Win/Draw/Loss value before the move (2=win, 0=draw, -2=loss)\n * @property {number} wdlAfter - Win/Draw/Loss value after the move\n * @property {string} [bestMove] - The best move that should have been played\n */\ninterface MoveErrorDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onTakeBack: () => void;\n  onRestart?: () => void;\n  onShowBestMove?: () => void;\n  wdlBefore: number;\n  wdlAfter: number;\n  bestMove?: string;\n}\n\n/**\n * Move error dialog component\n *\n * @component\n * @description\n * Displays a modal dialog when the player makes a suboptimal move.\n * Analyzes the Win/Draw/Loss (WDL) evaluation change to provide\n * appropriate feedback and coaching. The striking visual design\n * helps reinforce learning moments.\n *\n * @remarks\n * WDL value meanings:\n * - 2: Winning position\n * - 0: Draw\n * - -2: Losing position\n *\n * The component provides different messages based on the severity\n * of the error, helping players understand the impact of their moves.\n *\n * @example\n * ```tsx\n * <MoveErrorDialog\n *   isOpen={showError}\n *   onClose={() => setShowError(false)}\n *   onTakeBack={() => takeBackMove()}\n *   wdlBefore={2}\n *   wdlAfter={0}\n *   bestMove=\"Kg7\"\n * />\n * ```\n *\n * @param {MoveErrorDialogProps} props - Dialog configuration\n * @returns {JSX.Element | null} Rendered dialog or null when closed\n */\nexport const MoveErrorDialog: React.FC<MoveErrorDialogProps> = ({\n  isOpen,\n  onClose,\n  onTakeBack,\n  wdlBefore,\n  wdlAfter,\n  bestMove,\n}) => {\n  if (!isOpen) return null;\n\n  /**\n   * Determine error message based on WDL change\n   *\n   * @private\n   * @returns {string} Localized error message in German\n   *\n   * @description\n   * Analyzes the WDL values before and after the move to provide\n   * context-appropriate feedback:\n   * - Win to non-win: \"Ruins the win\"\n   * - Draw to loss: \"Leads to loss\"\n   * - Any deterioration: \"Worsens the position\"\n   * - Default: \"This move is an error\"\n   */\n  const getMessage = () => {\n    if (wdlBefore === 2 && wdlAfter < 2) {\n      return \"Dieser Zug verdirbt den Gewinn!\";\n    } else if (wdlBefore === 0 && wdlAfter === -2) {\n      return \"Dieser Zug führt zum Verlust!\";\n    } else if (wdlBefore > wdlAfter) {\n      return \"Dieser Zug verschlechtert die Stellung!\";\n    }\n    return \"Dieser Zug ist ein Fehler!\";\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50\"\n      onClick={onClose}\n      data-testid=\"move-error-dialog\"\n    >\n      <div\n        className=\"relative bg-gradient-to-br from-red-500 to-pink-600 p-1 rounded-2xl max-w-md w-full mx-4\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"bg-[var(--bg-primary)] rounded-2xl p-6\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <div className=\"p-3 rounded-full bg-gradient-to-br from-red-400 to-pink-500\">\n              <svg\n                className=\"w-6 h-6 text-white\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-bold text-white\">Fehler erkannt!</h3>\n          </div>\n          <p className=\"text-gray-300 mb-2\">{getMessage()}</p>\n          {bestMove && (\n            <p className=\"text-gray-400 text-sm mb-4\">\n              Bester Zug war:{\" \"}\n              <strong className=\"text-gray-200\">{bestMove}</strong>\n            </p>\n          )}\n          <div className=\"flex gap-3\">\n            <button\n              onClick={onClose}\n              className=\"flex-1 px-4 py-2 text-white bg-white/10 backdrop-blur rounded-lg hover:bg-white/20 transition-all\"\n            >\n              Weiterspielen\n            </button>\n            <button\n              onClick={onTakeBack}\n              className=\"flex-1 px-4 py-2 text-white bg-gradient-to-r from-red-500 to-pink-600 rounded-lg hover:shadow-lg transform hover:scale-105 transition-all\"\n            >\n              Zurücknehmen\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["MoveErrorDialog","isOpen","onClose","onTakeBack","wdlBefore","wdlAfter","bestMove","getMessage","div","className","onClick","data-testid","e","stopPropagation","svg","fill","stroke","viewBox","path","strokeLinecap","strokeLinejoin","strokeWidth","d","h3","p","strong","button"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;;;+BA+DYA;;;eAAAA;;;;8DA7DK;;;;;;AA6DX,MAAMA,kBAAkD,CAAC,EAC9DC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACT;IACC,IAAI,CAACL,QAAQ,OAAO;IAEpB;;;;;;;;;;;;;GAaC,GACD,MAAMM,aAAa;QACjB,IAAIH,cAAc,KAAKC,WAAW,GAAG;YACnC,OAAO;QACT,OAAO,IAAID,cAAc,KAAKC,aAAa,CAAC,GAAG;YAC7C,OAAO;QACT,OAAO,IAAID,YAAYC,UAAU;YAC/B,OAAO;QACT;QACA,OAAO;IACT;IAEA,qBACE,qBAACG;QACCC,WAAU;QACVC,SAASR;QACTS,eAAY;kBAEZ,cAAA,qBAACH;YACCC,WAAU;YACVC,SAAS,CAACE,IAAMA,EAAEC,eAAe;sBAEjC,cAAA,sBAACL;gBAAIC,WAAU;;kCACb,sBAACD;wBAAIC,WAAU;;0CACb,qBAACD;gCAAIC,WAAU;0CACb,cAAA,qBAACK;oCACCL,WAAU;oCACVM,MAAK;oCACLC,QAAO;oCACPC,SAAQ;8CAER,cAAA,qBAACC;wCACCC,eAAc;wCACdC,gBAAe;wCACfC,aAAa;wCACbC,GAAE;;;;0CAIR,qBAACC;gCAAGd,WAAU;0CAA+B;;;;kCAE/C,qBAACe;wBAAEf,WAAU;kCAAsBF;;oBAClCD,0BACC,sBAACkB;wBAAEf,WAAU;;4BAA6B;4BACxB;0CAChB,qBAACgB;gCAAOhB,WAAU;0CAAiBH;;;;kCAGvC,sBAACE;wBAAIC,WAAU;;0CACb,qBAACiB;gCACChB,SAASR;gCACTO,WAAU;0CACX;;0CAGD,qBAACiB;gCACChB,SAASP;gCACTM,WAAU;0CACX;;;;;;;;AAQb"}