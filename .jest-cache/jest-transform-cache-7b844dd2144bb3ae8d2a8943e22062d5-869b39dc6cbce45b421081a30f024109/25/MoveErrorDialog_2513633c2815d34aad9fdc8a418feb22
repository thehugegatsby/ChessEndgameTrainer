748061aa30ff34a1064ded07cdabf1c6
/**
 * @file Move error dialog component for chess training
 * @module components/ui/MoveErrorDialog
 *
 * @description
 * Modal dialog that appears when a player makes a suboptimal move during
 * training. Provides feedback based on Win/Draw/Loss (WDL) evaluation changes
 * and offers options to take back the move or continue. Features a
 * visually striking gradient design to capture attention.
 *
 * @remarks
 * Key features:
 * - Dynamic error messages based on WDL changes
 * - Shows best move suggestion when available
 * - Gradient border design for visual impact
 * - Options to take back or continue playing
 * - German language interface
 * - Backdrop click to close
 * - Responsive design
 *
 * The component analyzes the WDL change to provide context-appropriate
 * feedback messages (e.g., "ruins winning position", "leads to loss").
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MoveErrorDialog", {
    enumerable: true,
    get: function() {
        return MoveErrorDialog;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const MoveErrorDialog = ({ isOpen, onClose, onTakeBack, wdlBefore, wdlAfter, bestMove })=>{
    if (!isOpen) return null;
    /**
   * Determine error message based on WDL change
   *
   * @private
   * @returns {string} Localized error message in German
   *
   * @description
   * Analyzes the WDL values before and after the move to provide
   * context-appropriate feedback:
   * - Win to non-win: "Ruins the win"
   * - Draw to loss: "Leads to loss"
   * - Any deterioration: "Worsens the position"
   * - Default: "This move is an error"
   */ const getMessage = ()=>{
        if (wdlBefore === 2 && wdlAfter < 2) {
            return "Dieser Zug verdirbt den Gewinn!";
        } else if (wdlBefore === 0 && wdlAfter === -2) {
            return "Dieser Zug führt zum Verlust!";
        } else if (wdlBefore > wdlAfter) {
            return "Dieser Zug verschlechtert die Stellung!";
        }
        return "Dieser Zug ist ein Fehler!";
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50",
        onClick: onClose,
        "data-testid": "move-error-dialog",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "relative bg-gradient-to-br from-red-500 to-pink-600 p-1 rounded-2xl max-w-md w-full mx-4",
            onClick: (e)=>e.stopPropagation(),
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "bg-[var(--bg-primary)] rounded-2xl p-6",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-3 mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "p-3 rounded-full bg-gradient-to-br from-red-400 to-pink-500",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                    className: "w-6 h-6 text-white",
                                    fill: "none",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                        strokeLinecap: "round",
                                        strokeLinejoin: "round",
                                        strokeWidth: 2,
                                        d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                                    })
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: "text-xl font-bold text-white",
                                children: "Fehler erkannt!"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-gray-300 mb-2",
                        children: getMessage()
                    }),
                    bestMove && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                        className: "text-gray-400 text-sm mb-4",
                        children: [
                            "Bester Zug war:",
                            " ",
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                className: "text-gray-200",
                                children: bestMove
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex gap-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: onClose,
                                className: "flex-1 px-4 py-2 text-white bg-white/10 backdrop-blur rounded-lg hover:bg-white/20 transition-all",
                                children: "Weiterspielen"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: onTakeBack,
                                className: "flex-1 px-4 py-2 text-white bg-gradient-to-r from-red-500 to-pink-600 rounded-lg hover:shadow-lg transform hover:scale-105 transition-all",
                                children: "Zurücknehmen"
                            })
                        ]
                    })
                ]
            })
        })
    });
};

//# sourceMappingURL=data:application/json;base64,