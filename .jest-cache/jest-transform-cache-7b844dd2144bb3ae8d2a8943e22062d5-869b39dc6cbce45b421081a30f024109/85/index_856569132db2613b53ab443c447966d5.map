{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/store/hooks/index.ts"],"sourcesContent":["/**\n * @file Store hooks index\n * @module store/hooks\n *\n * @description\n * Central export point for all Zustand store hooks. Provides consolidated\n * domain-specific hooks that combine related state and actions for better\n * ergonomics and performance.\n *\n * @remarks\n * These consolidated hooks provide convenient access to domain-specific state\n * and actions. However, for optimal performance, prefer direct selectors\n * from useStore when you only need 1-2 values:\n *\n * **Performance Best Practices:**\n * - Use consolidated hooks for high-level container components that need many values\n * - Use direct selectors for leaf components that need specific values\n * - Always use useShallow when selecting multiple properties\n *\n * Hook Categories:\n *\n * 1. Domain Hooks (focused on single responsibilities):\n *    - useGameStore: Pure chess game state and operations\n *    - useTrainingStore: Training sessions and navigation\n *    - useTablebaseStore: Tablebase evaluations and analysis\n *    - useUIStore: UI elements, toasts, modals, panels\n *\n * @example\n * ```tsx\n * import { useStore } from '@/store/rootStore';\n * import { useShallow } from 'zustand/react/shallow';\n *\n * // ✅ Preferred: Direct selectors for specific values\n * function MoveButton() {\n *   const makeMove = useStore(state => state.makeMove);\n *   const isGameFinished = useStore(state => state.isGameFinished);\n *   // Component only re-renders when these specific values change\n * }\n *\n * // ✅ Good: useShallow for multiple related values\n * function GameInfo() {\n *   const { currentFen, moveHistory, gameResult } = useStore(\n *     useShallow(state => ({\n *       currentFen: state.currentFen,\n *       moveHistory: state.moveHistory,\n *       gameResult: state.gameResult,\n *     }))\n *   );\n * }\n *\n * // ⚠️ Use consolidated hooks only for container components\n * function ChessGameContainer() {\n *   const gameStore = useGameStore(); // Many values needed\n *   const trainingStore = useTrainingStore();\n *   // This is appropriate for a high-level container\n * }\n * ```\n */\n\n// Consolidated Domain Hooks\nexport { useGameStore } from \"./useGameStore\";\nexport { useTrainingStore } from \"./useTrainingStore\";\nexport { useUIStore } from \"./useUIStore\";\nexport { useTablebaseStore } from \"./useTablebaseStore\";\nexport { useProgressStore, useProgressState, useProgressActions, useDerivedProgress, useDueCardsCache } from \"./useProgressStore\";\n"],"names":["useDerivedProgress","useDueCardsCache","useGameStore","useProgressActions","useProgressState","useProgressStore","useTablebaseStore","useTrainingStore","useUIStore"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyDC,GAED,4BAA4B;;;;;;;;;;;;QAKqCA;eAAAA,oCAAkB;;QAAEC;eAAAA,kCAAgB;;QAJ5FC;eAAAA,0BAAY;;QAIwBC;eAAAA,oCAAkB;;QAApCC;eAAAA,kCAAgB;;QAAlCC;eAAAA,kCAAgB;;QADhBC;eAAAA,oCAAiB;;QAFjBC;eAAAA,kCAAgB;;QAChBC;eAAAA,sBAAU;;;8BAFU;kCACI;4BACN;mCACO;kCAC2E"}