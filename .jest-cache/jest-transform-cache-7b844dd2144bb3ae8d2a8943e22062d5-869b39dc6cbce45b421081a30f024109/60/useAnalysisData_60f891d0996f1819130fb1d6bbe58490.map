{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/hooks/useAnalysisData.ts"],"sourcesContent":["/**\n * @file Hook for managing chess analysis data\n * @module hooks/useAnalysisData\n *\n * @description\n * Simple state management hook for chess position analysis data.\n * Provides a clean interface for components that need to display or update analysis results.\n */\n\nimport { useState } from \"react\";\nimport { AnalysisData } from \"@shared/types/analysisTypes\";\n\n/**\n * Hook for managing chess analysis data state\n *\n * @description\n * Provides a simple state container for analysis data with getter and setter.\n * Used by components that display position evaluations, best moves, and analysis results.\n *\n * @returns {Object} Hook return object\n * @returns {AnalysisData | null} returns.analysisData - Current analysis data or null\n * @returns {Function} returns.setAnalysisData - Function to update analysis data\n *\n * @example\n * ```tsx\n * function AnalysisPanel() {\n *   const { analysisData, setAnalysisData } = useAnalysisData();\n *\n *   useEffect(() => {\n *     // Fetch analysis when position changes\n *     fetchAnalysis(currentFen).then(setAnalysisData);\n *   }, [currentFen]);\n *\n *   if (!analysisData) return <div>No analysis available</div>;\n *\n *   return (\n *     <div>\n *       <div>Evaluation: {analysisData.evaluation}</div>\n *       <div>Best move: {analysisData.bestMove}</div>\n *     </div>\n *   );\n * }\n * ```\n *\n * @see {@link AnalysisData} for the data structure\n */\nexport function useAnalysisData() {\n  const [analysisData, setAnalysisData] = useState<AnalysisData | null>(null);\n  return { analysisData, setAnalysisData } as const;\n}\n"],"names":["useAnalysisData","analysisData","setAnalysisData","useState"],"mappings":"AAAA;;;;;;;CAOC;;;;+BAuCeA;;;eAAAA;;;uBArCS;AAqClB,SAASA;IACd,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAsB;IACtE,OAAO;QAAEF;QAAcC;IAAgB;AACzC"}