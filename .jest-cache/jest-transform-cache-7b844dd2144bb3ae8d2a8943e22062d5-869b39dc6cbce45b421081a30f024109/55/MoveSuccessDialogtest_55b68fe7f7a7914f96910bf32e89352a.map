{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/unit/components/ui/MoveSuccessDialog.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { MoveSuccessDialog } from '@shared/components/ui/MoveSuccessDialog';\n\ndescribe('MoveSuccessDialog', () => {\n  const defaultProps = {\n    isOpen: true,\n    promotionPiece: 'Dame',\n    moveDescription: 'e8=Q+',\n    onClose: jest.fn(),\n    onContinue: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Rendering', () => {\n    it('renders dialog when open', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      // Check for German success message header\n      expect(screen.getByText('Erfolg!')).toBeInTheDocument();\n    });\n\n    it('does not render when closed', () => {\n      render(<MoveSuccessDialog {...defaultProps} isOpen={false} />);\n      \n      expect(screen.queryByText('Erfolg!')).not.toBeInTheDocument();\n    });\n\n    it('displays the move description', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      expect(screen.getByText(defaultProps.moveDescription)).toBeInTheDocument();\n      expect(screen.getByText('Gewinnzug:')).toBeInTheDocument();\n    });\n\n    it('hides move description when not provided', () => {\n      render(<MoveSuccessDialog {...defaultProps} moveDescription={undefined} />);\n      \n      expect(screen.queryByText('Gewinnzug:')).not.toBeInTheDocument();\n    });\n\n    it('shows correct message for Dame promotion', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Dame\" />);\n      \n      expect(screen.getByText('Ausgezeichnet! Umwandlung in Dame führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Queen promotion (English)', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Queen\" />);\n      \n      expect(screen.getByText('Ausgezeichnet! Umwandlung in Queen führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Turm promotion', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Turm\" />);\n      \n      expect(screen.getByText('Großartig! Umwandlung in Turm führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Rook promotion (English)', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Rook\" />);\n      \n      expect(screen.getByText('Großartig! Umwandlung in Rook führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Läufer promotion', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Läufer\" />);\n      \n      expect(screen.getByText('Klug! Umwandlung in Läufer führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Bishop promotion (English)', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Bishop\" />);\n      \n      expect(screen.getByText('Klug! Umwandlung in Bishop führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Springer promotion', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Springer\" />);\n      \n      expect(screen.getByText('Clever! Umwandlung in Springer führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows correct message for Knight promotion (English)', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Knight\" />);\n      \n      expect(screen.getByText('Clever! Umwandlung in Knight führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows default message for unknown promotion piece', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"Unknown\" />);\n      \n      expect(screen.getByText('Perfekt! Umwandlung in Unknown führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('shows default message when no promotion piece provided', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece={undefined} />);\n      \n      expect(screen.getByText('Glückwunsch! Die Umwandlung führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('handles case-insensitive promotion piece names', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"DAME\" />);\n      \n      // Should still match despite uppercase\n      expect(screen.getByText('Ausgezeichnet! Umwandlung in DAME führt zum Sieg!')).toBeInTheDocument();\n    });\n  });\n\n  describe('Interactions', () => {\n    it('calls onContinue when continue button is clicked', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      const continueButton = screen.getByRole('button', { name: 'Weiter' });\n      fireEvent.click(continueButton);\n      \n      expect(defaultProps.onContinue).toHaveBeenCalledTimes(1);\n    });\n\n    it('calls onClose when understood button is clicked', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      const closeButton = screen.getByRole('button', { name: 'Verstanden' });\n      fireEvent.click(closeButton);\n      \n      expect(defaultProps.onClose).toHaveBeenCalledTimes(1);\n      expect(defaultProps.onContinue).not.toHaveBeenCalled();\n    });\n\n    it('calls onClose when clicking outside the dialog', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      // Click on the backdrop/overlay - it's the outermost div\n      const backdrop = screen.getByText('Erfolg!').closest('.fixed');\n      fireEvent.click(backdrop!);\n      \n      expect(defaultProps.onClose).toHaveBeenCalledTimes(1);\n    });\n\n    it('does not close when clicking inside the dialog content', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      // Click on the inner dialog content\n      const dialogTitle = screen.getByText('Erfolg!');\n      fireEvent.click(dialogTitle);\n      \n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n    });\n\n    it('prevents event propagation when clicking dialog content', () => {\n      const mockOnClick = jest.fn();\n      \n      render(\n        <div onClick={mockOnClick}>\n          <MoveSuccessDialog {...defaultProps} />\n        </div>\n      );\n      \n      // Click on dialog content should not propagate to parent\n      const dialogTitle = screen.getByText('Erfolg!');\n      fireEvent.click(dialogTitle);\n      \n      expect(mockOnClick).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('has proper heading structure', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      const heading = screen.getByRole('heading', { name: 'Erfolg!' });\n      expect(heading).toBeInTheDocument();\n    });\n\n    it('has interactive buttons', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      const buttons = screen.getAllByRole('button');\n      expect(buttons).toHaveLength(2);\n      \n      const verstanden = screen.getByRole('button', { name: 'Verstanden' });\n      const weiter = screen.getByRole('button', { name: 'Weiter' });\n      \n      expect(verstanden).toBeInTheDocument();\n      expect(weiter).toBeInTheDocument();\n    });\n\n    it('renders semantic structure', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      // Check for proper text structure\n      expect(screen.getByText('Erfolg!')).toBeInTheDocument();\n      expect(screen.getByText(/Umwandlung/)).toBeInTheDocument();\n    });\n  });\n\n  describe('Visual Elements', () => {\n    it('displays success icon', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      // Check for SVG success icon by looking for the checkmark path\n      const svgElements = document.querySelectorAll('svg');\n      expect(svgElements.length).toBe(1);\n      \n      // Check the checkmark circle path is present\n      const pathElement = document.querySelector('path[d*=\"M9 12l2 2 4-4m6 2a9 9 0\"]');\n      expect(pathElement).toBeInTheDocument();\n    });\n\n    it('has proper styling classes for success theme', () => {\n      render(<MoveSuccessDialog {...defaultProps} />);\n      \n      const backdrop = screen.getByText('Erfolg!').closest('.fixed');\n      expect(backdrop).toHaveClass('fixed', 'inset-0', 'bg-black', 'bg-opacity-80');\n      \n      // Check for green gradient (success theme)\n      const gradientContainer = document.querySelector('.bg-gradient-to-br.from-green-500.to-emerald-600');\n      expect(gradientContainer).toBeInTheDocument();\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('handles empty promotion piece', () => {\n      render(<MoveSuccessDialog {...defaultProps} promotionPiece=\"\" />);\n      \n      // Should show default message when promotion piece is empty string\n      expect(screen.getByText('Glückwunsch! Die Umwandlung führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('handles empty move description', () => {\n      render(<MoveSuccessDialog {...defaultProps} moveDescription=\"\" />);\n      \n      // Should not display the move description section\n      expect(screen.queryByText('Gewinnzug:')).not.toBeInTheDocument();\n    });\n\n    it('handles all props being undefined', () => {\n      render(\n        <MoveSuccessDialog \n          isOpen={true} \n          onClose={jest.fn()} \n          onContinue={jest.fn()} \n          promotionPiece={undefined} \n          moveDescription={undefined} \n        />\n      );\n      \n      expect(screen.getByText('Erfolg!')).toBeInTheDocument();\n      expect(screen.getByText('Glückwunsch! Die Umwandlung führt zum Sieg!')).toBeInTheDocument();\n    });\n\n    it('maintains button functionality with minimal props', () => {\n      const minimalProps = {\n        isOpen: true,\n        onClose: jest.fn(),\n        onContinue: jest.fn(),\n      };\n      \n      render(<MoveSuccessDialog {...minimalProps} />);\n      \n      // Both buttons should still work\n      const continueButton = screen.getByRole('button', { name: 'Weiter' });\n      const closeButton = screen.getByRole('button', { name: 'Verstanden' });\n      \n      fireEvent.click(continueButton);\n      expect(minimalProps.onContinue).toHaveBeenCalledTimes(1);\n      \n      fireEvent.click(closeButton);\n      expect(minimalProps.onClose).toHaveBeenCalledTimes(1);\n    });\n  });\n});"],"names":["describe","defaultProps","isOpen","promotionPiece","moveDescription","onClose","jest","fn","onContinue","beforeEach","clearAllMocks","it","render","MoveSuccessDialog","expect","screen","getByText","toBeInTheDocument","queryByText","not","undefined","continueButton","getByRole","name","fireEvent","click","toHaveBeenCalledTimes","closeButton","toHaveBeenCalled","backdrop","closest","dialogTitle","mockOnClick","div","onClick","heading","buttons","getAllByRole","toHaveLength","verstanden","weiter","svgElements","document","querySelectorAll","length","toBe","pathElement","querySelector","toHaveClass","gradientContainer","minimalProps"],"mappings":"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"}