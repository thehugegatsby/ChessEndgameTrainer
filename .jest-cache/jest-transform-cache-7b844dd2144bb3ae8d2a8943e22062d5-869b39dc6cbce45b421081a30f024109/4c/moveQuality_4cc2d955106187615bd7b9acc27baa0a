2969599dc237b4181d75627b12cd68ea
/**
 * @file Move quality assessment utilities for tablebase analysis
 * @module utils/moveQuality
 *
 * @description
 * Pure functions for assessing chess move quality based on tablebase WDL
 * (Win/Draw/Loss) values. Provides comprehensive analysis of move impact
 * including critical move detection and human-readable quality descriptions.
 *
 * @remarks
 * Key features:
 * - WDL-based move quality assessment (excellent, good, mistake)
 * - Critical move detection for position evaluation changes
 * - Human-readable quality descriptions for UI display
 * - Perspective-aware analysis (player vs opponent viewpoint)
 *
 * All functions are pure and side-effect free, designed for use in
 * performance-critical contexts like real-time move analysis.
 */"use strict";

/* istanbul ignore next */
function cov_cmrazaa5i() {
  var path = "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/utils/moveQuality.ts";
  var hash = "ab75ec19216a3d1fa1398a444bced0eafe3b4286";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/utils/moveQuality.ts",
    statementMap: {
      "0": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "1": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "2": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 42
        }
      },
      "3": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "4": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "5": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "6": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 42
        }
      },
      "7": {
        start: {
          line: 38,
          column: 11
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "8": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "9": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "11": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "12": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 10
          }
        },
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "1": {
        name: "assessTablebaseMoveQuality",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 35
          }
        },
        loc: {
          start: {
            line: 29,
            column: 57
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/utils/moveQuality.ts"],
      sourcesContent: ["/**\n * @file Move quality assessment utilities for tablebase analysis\n * @module utils/moveQuality\n *\n * @description\n * Pure functions for assessing chess move quality based on tablebase WDL\n * (Win/Draw/Loss) values. Provides comprehensive analysis of move impact\n * including critical move detection and human-readable quality descriptions.\n *\n * @remarks\n * Key features:\n * - WDL-based move quality assessment (excellent, good, mistake)\n * - Critical move detection for position evaluation changes\n * - Human-readable quality descriptions for UI display\n * - Perspective-aware analysis (player vs opponent viewpoint)\n *\n * All functions are pure and side-effect free, designed for use in\n * performance-critical contexts like real-time move analysis.\n */\n\nimport type {\n  SimplifiedMoveQualityResult,\n  MoveQualityType,\n} from \"@shared/types/evaluation\";\n\n/**\n * Analyzes move quality based on tablebase WDL values\n *\n * @param {number} wdlBefore - WDL value before the move (from player's perspective)\n * @param {number} wdlAfter - WDL value after the move (from opponent's perspective, needs negation)\n * @returns {SimplifiedMoveQualityResult} Comprehensive move quality assessment\n *\n * @description\n * Compares tablebase evaluations before and after a move to determine\n * move quality. Handles perspective conversion since wdlAfter represents\n * the opponent's view and must be negated for player perspective analysis.\n *\n * @remarks\n * Quality categories:\n * - excellent: Move improves WDL evaluation (wdlChange > 0)\n * - good: Move maintains WDL evaluation (wdlChange = 0)\n * - mistake: Move worsens WDL evaluation (wdlChange < 0)\n *\n * The WDL change calculation: -wdlAfter - wdlBefore accounts for\n * perspective flip when it becomes the opponent's turn.\n *\n * @example\n * ```typescript\n * // Excellent move: Win to win (maintains advantage)\n * const result1 = assessTablebaseMoveQuality(2, -2);\n * // { quality: 'excellent', reason: 'Optimal tablebase move' }\n *\n * // Mistake: Win to draw\n * const result2 = assessTablebaseMoveQuality(2, 0);\n * // { quality: 'mistake', reason: 'Worsens tablebase position' }\n * ```\n */\nexport function assessTablebaseMoveQuality(\n  wdlBefore: number,\n  wdlAfter: number,\n): SimplifiedMoveQualityResult {\n  // Since we're analyzing from the player's perspective who made the move,\n  // we need to negate the WDL for the position after (opponent's turn)\n  const wdlChange = -wdlAfter - wdlBefore;\n\n  let quality: MoveQualityType;\n  let reason: string;\n\n  if (wdlChange > 0) {\n    quality = \"excellent\";\n    reason = \"Optimal tablebase move\";\n  } else if (wdlChange === 0) {\n    quality = \"good\";\n    reason = \"Maintains tablebase evaluation\";\n  } else {\n    quality = \"mistake\";\n    reason = \"Worsens tablebase position\";\n  }\n\n  return {\n    quality,\n    reason,\n    isTablebaseAnalysis: true,\n    tablebaseInfo: {\n      wdlBefore,\n      wdlAfter: -wdlAfter,\n    },\n  };\n}\n"],
      names: ["assessTablebaseMoveQuality", "wdlBefore", "wdlAfter", "wdlChange", "quality", "reason", "isTablebaseAnalysis", "tablebaseInfo"],
      mappings: "AAAA;;;;;;;;;;;;;;;;;;CAkBC;;;;+BAuCeA;;;eAAAA;;;AAAT,SAASA,2BACdC,SAAiB,EACjBC,QAAgB;IAEhB,yEAAyE;IACzE,qEAAqE;IACrE,MAAMC,YAAY,CAACD,WAAWD;IAE9B,IAAIG;IACJ,IAAIC;IAEJ,IAAIF,YAAY,GAAG;QACjBC,UAAU;QACVC,SAAS;IACX,OAAO,IAAIF,cAAc,GAAG;QAC1BC,UAAU;QACVC,SAAS;IACX,OAAO;QACLD,UAAU;QACVC,SAAS;IACX;IAEA,OAAO;QACLD;QACAC;QACAC,qBAAqB;QACrBC,eAAe;YACbN;YACAC,UAAU,CAACA;QACb;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ab75ec19216a3d1fa1398a444bced0eafe3b4286"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cmrazaa5i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cmrazaa5i();
cov_cmrazaa5i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_cmrazaa5i().s[1]++;
Object.defineProperty(exports, "assessTablebaseMoveQuality", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_cmrazaa5i().f[0]++;
    cov_cmrazaa5i().s[2]++;
    return assessTablebaseMoveQuality;
  }
});
function assessTablebaseMoveQuality(wdlBefore, wdlAfter) {
  /* istanbul ignore next */
  cov_cmrazaa5i().f[1]++;
  // Since we're analyzing from the player's perspective who made the move,
  // we need to negate the WDL for the position after (opponent's turn)
  const wdlChange =
  /* istanbul ignore next */
  (cov_cmrazaa5i().s[3]++, -wdlAfter - wdlBefore);
  let quality;
  let reason;
  /* istanbul ignore next */
  cov_cmrazaa5i().s[4]++;
  if (wdlChange > 0) {
    /* istanbul ignore next */
    cov_cmrazaa5i().b[0][0]++;
    cov_cmrazaa5i().s[5]++;
    quality = "excellent";
    /* istanbul ignore next */
    cov_cmrazaa5i().s[6]++;
    reason = "Optimal tablebase move";
  } else {
    /* istanbul ignore next */
    cov_cmrazaa5i().b[0][1]++;
    cov_cmrazaa5i().s[7]++;
    if (wdlChange === 0) {
      /* istanbul ignore next */
      cov_cmrazaa5i().b[1][0]++;
      cov_cmrazaa5i().s[8]++;
      quality = "good";
      /* istanbul ignore next */
      cov_cmrazaa5i().s[9]++;
      reason = "Maintains tablebase evaluation";
    } else {
      /* istanbul ignore next */
      cov_cmrazaa5i().b[1][1]++;
      cov_cmrazaa5i().s[10]++;
      quality = "mistake";
      /* istanbul ignore next */
      cov_cmrazaa5i().s[11]++;
      reason = "Worsens tablebase position";
    }
  }
  /* istanbul ignore next */
  cov_cmrazaa5i().s[12]++;
  return {
    quality,
    reason,
    isTablebaseAnalysis: true,
    tablebaseInfo: {
      wdlBefore,
      wdlAfter: -wdlAfter
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,