{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/hooks/usePageReady.ts"],"sourcesContent":["/**\n * @file Hook for managing page ready state\n * @module hooks/usePageReady\n *\n * @description\n * Provides a consistent way to signal when a page/component is fully loaded.\n * Essential for E2E tests to know when to start interacting with the page.\n */\n\nimport { useState, useEffect } from \"react\";\n\n/**\n * Custom hook for managing page ready state in E2E tests\n *\n * @description\n * Provides a consistent way to signal when a page/component is fully loaded.\n * Monitors multiple loading conditions and only returns true when all are complete.\n * Optionally emits a custom event for E2E test frameworks to listen to.\n *\n * @param {boolean[]} dependencies - Array of boolean conditions that must all be true\n * @returns {boolean} Whether all dependencies are ready and the page is fully loaded\n *\n * @example\n * ```tsx\n * function ChessBoard() {\n *   const [dataLoaded, setDataLoaded] = useState(false);\n *   const [boardInitialized, setBoardInitialized] = useState(false);\n *   const [analysisReady, setAnalysisReady] = useState(false);\n *\n *   const isPageReady = usePageReady([\n *     dataLoaded,\n *     boardInitialized,\n *     analysisReady\n *   ]);\n *\n *   return (\n *     <div data-page-ready={isPageReady}>\n *       {!isPageReady && <LoadingSpinner />}\n *       <Board />\n *     </div>\n *   );\n * }\n * ```\n *\n * @remarks\n * - Returns false until all dependencies are true\n * - Once true, stays true (doesn't flip back to false)\n * - Emits 'page-ready' custom event when NEXT_PUBLIC_E2E_SIGNALS is enabled\n * - Empty dependencies array results in immediate ready state\n */\nexport function usePageReady(dependencies: boolean[] = []): boolean {\n  const [isPageReady, setIsPageReady] = useState(false);\n\n  useEffect(() => {\n    // Check if all dependencies are true\n    const allReady =\n      dependencies.length === 0 || dependencies.every((dep) => dep === true);\n\n    if (allReady && !isPageReady) {\n      setIsPageReady(true);\n\n      // Optional: Emit custom event for debugging\n      if (\n        typeof window !== \"undefined\" &&\n        process.env.NEXT_PUBLIC_E2E_SIGNALS === \"true\"\n      ) {\n        window.dispatchEvent(\n          new CustomEvent(\"page-ready\", {\n            detail: { timestamp: Date.now() },\n          }),\n        );\n      }\n    }\n  }, dependencies);\n\n  return isPageReady;\n}\n"],"names":["usePageReady","dependencies","isPageReady","setIsPageReady","useState","useEffect","allReady","length","every","dep","window","process","env","NEXT_PUBLIC_E2E_SIGNALS","dispatchEvent","CustomEvent","detail","timestamp","Date","now"],"mappings":"AAAA;;;;;;;CAOC;;;;+BA2CeA;;;eAAAA;;;uBAzCoB;AAyC7B,SAASA,aAAaC,eAA0B,EAAE;IACvD,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAC;IAE/CC,IAAAA,gBAAS,EAAC;QACR,qCAAqC;QACrC,MAAMC,WACJL,aAAaM,MAAM,KAAK,KAAKN,aAAaO,KAAK,CAAC,CAACC,MAAQA,QAAQ;QAEnE,IAAIH,YAAY,CAACJ,aAAa;YAC5BC,eAAe;YAEf,4CAA4C;YAC5C,IACE,OAAOO,WAAW,eAClBC,QAAQC,GAAG,CAACC,uBAAuB,KAAK,QACxC;gBACAH,OAAOI,aAAa,CAClB,IAAIC,YAAY,cAAc;oBAC5BC,QAAQ;wBAAEC,WAAWC,KAAKC,GAAG;oBAAG;gBAClC;YAEJ;QACF;IACF,GAAGlB;IAEH,OAAOC;AACT"}