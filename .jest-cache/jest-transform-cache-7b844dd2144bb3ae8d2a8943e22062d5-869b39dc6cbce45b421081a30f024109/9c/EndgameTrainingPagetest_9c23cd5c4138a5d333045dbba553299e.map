{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/unit/pages/EndgameTrainingPage.test.tsx"],"sourcesContent":["import React from \"react\";\nimport { useGameStore, useTrainingStore, useUIStore } from \"@shared/store/hooks\";\nimport { useRouter } from \"next/navigation\";\nimport { IntegrationTestPositions } from \"../../fixtures/fenPositions\";\n\n// Mock the hooks\njest.mock(\"@shared/store/hooks\");\njest.mock(\"next/navigation\");\njest.mock(\"@shared/hooks/useToast\", () => ({\n  useToast: () => ({\n    showToast: jest.fn(),\n  }),\n}));\n\n// Mock the components\njest.mock(\"@shared/components/training\", () => ({\n  TrainingBoard: () => <div>TrainingBoard</div>,\n  MovePanelZustand: () => <div>MovePanelZustand</div>,\n  NavigationControls: () => <div>NavigationControls</div>,\n}));\n\njest.mock(\"@shared/components/training/TablebaseAnalysisPanel\", () => ({\n  TablebaseAnalysisPanel: () => <div>TablebaseAnalysisPanel</div>,\n}));\n\njest.mock(\"@shared/components/navigation/AdvancedEndgameMenu\", () => ({\n  AdvancedEndgameMenu: () => <div>AdvancedEndgameMenu</div>,\n}));\n\ndescribe(\"EndgameTrainingPage - Lichess URL Generation\", () => {\n  let mockGameState: any;\n  let mockGameActions: any;\n  let mockTrainingState: any;\n  let mockTrainingActions: any;\n  let mockUIState: any;\n  let mockUIActions: any;\n\n  beforeEach(() => {\n    // Setup default mock states\n    mockGameState = {\n      currentFen: \"8/8/8/4k3/8/8/4P3/4K3 w - - 0 1\",\n      currentPgn: \"\",\n      moveHistory: [],\n      currentMoveIndex: -1,\n      isGameFinished: false,\n      gameResult: null,\n    };\n\n    mockGameActions = {\n      initializeGame: jest.fn(),\n      makeMove: jest.fn(),\n      undoMove: jest.fn(),\n      goToMove: jest.fn(),\n    };\n\n    mockTrainingState = {\n      isTraining: false,\n      trainingMode: \"practice\",\n      playerColor: \"white\",\n    };\n\n    mockTrainingActions = {\n      startTraining: jest.fn(),\n      stopTraining: jest.fn(),\n    };\n\n    mockUIState = {\n      analysisPanel: {\n        isOpen: false,\n      },\n    };\n\n    mockUIActions = {\n      updateAnalysisPanel: jest.fn(),\n    };\n\n    // Setup mock implementations\n    (useGameStore as jest.Mock).mockReturnValue([mockGameState, mockGameActions]);\n    (useTrainingStore as jest.Mock).mockReturnValue([mockTrainingState, mockTrainingActions]);\n    (useUIStore as jest.Mock).mockReturnValue([mockUIState, mockUIActions]);\n    (useRouter as jest.Mock).mockReturnValue({\n      push: jest.fn(),\n    });\n  });\n\n  describe(\"getLichessUrl\", () => {\n    it(\"should generate FEN-based URL when no PGN is available\", () => {\n      // The component should use FEN-only URL when currentPgn is empty\n      const expectedUrl = \"https://lichess.org/analysis/8/8/8/4k3/8/8/4P3/4K3_w_-_-_0_1\";\n      \n      // Test that the function would generate the correct URL\n      const currentPgn = \"\";\n      const currentFen = \"8/8/8/4k3/8/8/4P3/4K3 w - - 0 1\";\n      const moveHistory: any[] = [];\n\n      const url = currentPgn && moveHistory.length > 0\n        ? `https://lichess.org/analysis/pgn/${encodeURIComponent(currentPgn)}`\n        : `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n\n      expect(url).toBe(expectedUrl);\n    });\n\n    it(\"should generate FEN-based URL when no moves have been made\", () => {\n      // Even with PGN present, if no moves, use FEN\n      const currentPgn = '[SetUp \"1\"]\\n[FEN \"8/8/8/4k3/8/8/4P3/4K3 w - - 0 1\"]\\n\\n*';\n      const currentFen = \"8/8/8/4k3/8/8/4P3/4K3 w - - 0 1\";\n      const moveHistory: any[] = [];\n\n      const url = currentPgn && moveHistory.length > 0\n        ? `https://lichess.org/analysis/pgn/${encodeURIComponent(currentPgn)}`\n        : `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n\n      const expectedUrl = \"https://lichess.org/analysis/8/8/8/4k3/8/8/4P3/4K3_w_-_-_0_1\";\n      expect(url).toBe(expectedUrl);\n    });\n\n    it(\"should generate PGN-based URL when PGN is available with moves\", () => {\n      // Test with a sample PGN\n      const samplePgn = \"1. e4 e5 2. Nf3 Nc6\";\n      const currentFen = \"r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3\";\n      const moveHistory = [\n        { from: \"e2\", to: \"e4\", san: \"e4\" },\n        { from: \"e7\", to: \"e5\", san: \"e5\" },\n        { from: \"g1\", to: \"f3\", san: \"Nf3\" },\n        { from: \"b8\", to: \"c6\", san: \"Nc6\" },\n      ];\n\n      const url = samplePgn && moveHistory.length > 0\n        ? `https://lichess.org/analysis/pgn/${encodeURIComponent(samplePgn)}`\n        : `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n\n      const expectedUrl = `https://lichess.org/analysis/pgn/${encodeURIComponent(samplePgn)}`;\n      expect(url).toBe(expectedUrl);\n    });\n\n    it(\"should handle empty move history even with PGN present\", () => {\n      // Edge case: PGN exists but move history is empty (shouldn't normally happen)\n      const currentPgn = \"1. e4\";\n      const currentFen = \"rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1\";\n      const moveHistory: any[] = [];\n\n      const url = currentPgn && moveHistory.length > 0\n        ? `https://lichess.org/analysis/pgn/${encodeURIComponent(currentPgn)}`\n        : `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n\n      // Should fall back to FEN since moveHistory is empty\n      const expectedUrl = `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n      expect(url).toBe(expectedUrl);\n    });\n\n    it(\"should properly encode PGN with special characters\", () => {\n      // Test PGN with promotions and special notation\n      const complexPgn = \"1. e4 e5 2. Nf3 Nc6 3. Bb5 a6 4. Ba4 Nf6 5. O-O Be7\";\n      const moveHistory = new Array(10).fill({ from: \"a1\", to: \"a2\", san: \"a2\" }); // Dummy moves\n\n      const url = complexPgn && moveHistory.length > 0\n        ? `https://lichess.org/analysis/pgn/${encodeURIComponent(complexPgn)}`\n        : `https://lichess.org/analysis/8/8/8/8/8/8/8/8_w_-_-_0_1`;\n\n      expect(url).toContain(\"analysis/pgn/\");\n      expect(url).toContain(encodeURIComponent(complexPgn));\n      // Verify proper encoding\n      expect(url).toContain(\"1.%20e4%20e5%202.%20Nf3\");\n    });\n\n    it(\"should handle endgame position with partial game\", () => {\n      // Simulate an endgame where we've made some moves\n      const endgamePgn = \"[FEN \\\"8/8/8/4k3/8/8/4P3/4K3 w - - 0 1\\\"]\\n\\n1. e3 Kd5 2. Kf2 Ke4\";\n      const complexEndgame = IntegrationTestPositions.COMPLEX_ENDGAME;\n      const currentFen = complexEndgame.fen;\n      const moveHistory = [\n        { from: \"e2\", to: \"e3\", san: \"e3\" },\n        { from: \"e5\", to: \"d5\", san: \"Kd5\" },\n        { from: \"e1\", to: \"f2\", san: \"Kf2\" },\n        { from: \"d5\", to: \"e4\", san: \"Ke4\" },\n      ];\n\n      const url = endgamePgn && moveHistory.length > 0\n        ? `https://lichess.org/analysis/pgn/${encodeURIComponent(endgamePgn)}`\n        : `https://lichess.org/analysis/${currentFen.replace(/ /g, \"_\")}`;\n\n      expect(url).toContain(\"analysis/pgn/\");\n      expect(url).toContain(encodeURIComponent(\"[FEN\"));\n    });\n  });\n});"],"names":["jest","mock","useToast","showToast","fn","TrainingBoard","div","MovePanelZustand","NavigationControls","TablebaseAnalysisPanel","AdvancedEndgameMenu","describe","mockGameState","mockGameActions","mockTrainingState","mockTrainingActions","mockUIState","mockUIActions","beforeEach","currentFen","currentPgn","moveHistory","currentMoveIndex","isGameFinished","gameResult","initializeGame","makeMove","undoMove","goToMove","isTraining","trainingMode","playerColor","startTraining","stopTraining","analysisPanel","isOpen","updateAnalysisPanel","useGameStore","mockReturnValue","useTrainingStore","useUIStore","useRouter","push","it","expectedUrl","url","length","encodeURIComponent","replace","expect","toBe","samplePgn","from","to","san","complexPgn","Array","fill","toContain","endgamePgn","complexEndgame","IntegrationTestPositions","COMPLEX_ENDGAME","fen"],"mappings":"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"}