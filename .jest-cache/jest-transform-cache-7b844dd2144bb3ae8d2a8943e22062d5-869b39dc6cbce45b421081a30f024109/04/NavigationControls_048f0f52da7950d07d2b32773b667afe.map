{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/components/training/NavigationControls.tsx"],"sourcesContent":["/**\n * @file Navigation controls for move history\n * @module components/training/NavigationControls\n *\n * @description\n * Navigation control buttons for moving through chess game history.\n * Provides Lichess-style navigation with first/previous/next/last\n * buttons. Integrates directly with Zustand store for state management.\n *\n * @remarks\n * Key features:\n * - Four-button navigation (first, previous, next, last)\n * - Intelligent button state management (disabled at boundaries)\n * - SVG icons for clear visual feedback\n * - Accessibility support with ARIA labels\n * - German language tooltips\n * - Test-friendly data attributes\n * - Responsive hover and active states\n *\n * The component automatically calculates navigation boundaries and\n * disables appropriate buttons when at the start or end of move history.\n */\n\nimport React from \"react\";\nimport { useGameStore } from \"@shared/store/hooks\";\n\n/**\n * Navigation controls for move history\n *\n * @component\n * @description\n * Provides a set of navigation buttons for moving through chess game\n * move history. Similar to video player controls but for chess moves.\n * Integrates with the Zustand store for seamless state management.\n *\n * @remarks\n * Navigation behavior:\n * - First: Jump to initial position (before any moves)\n * - Previous: Go back one move\n * - Next: Go forward one move\n * - Last: Jump to current position (after all moves)\n *\n * Button states:\n * - Buttons are disabled when navigation is not possible\n * - Visual feedback shows enabled/disabled states\n * - Hover effects provide interactive feedback\n * - Active states provide click feedback\n *\n * The component uses memoization to prevent unnecessary re-renders\n * and calculates navigation state efficiently.\n *\n * @example\n * ```tsx\n * // Basic usage in game interface\n * <NavigationControls />\n *\n * // In a move panel or sidebar\n * <div className=\"move-controls\">\n *   <MoveHistory moves={gameHistory} />\n *   <NavigationControls />\n * </div>\n *\n * // With custom styling\n * <div className=\"custom-nav-container\">\n *   <NavigationControls />\n * </div>\n * ```\n *\n * @returns {JSX.Element} Navigation control buttons\n */\nexport const NavigationControls: React.FC = React.memo(() => {\n  const [gameState, gameActions] = useGameStore();\n\n  // Calculate navigation state\n  const totalMoves = gameState.moveHistory.length;\n  const currentIndex = gameState.currentMoveIndex ?? totalMoves - 1;\n  const isAtStart = currentIndex <= -1;\n  const isAtEnd = currentIndex >= totalMoves - 1;\n\n  return (\n    <div\n      className=\"navigation-controls flex items-center justify-center gap-2 p-2 bg-gray-800 rounded-lg\"\n      data-testid=\"move-navigation\"\n    >\n      <button\n        onClick={gameActions.goToFirst}\n        disabled={isAtStart}\n        className={`p-2 rounded transition-all ${\n          isAtStart\n            ? \"text-gray-600 cursor-not-allowed\"\n            : \"text-white hover:bg-gray-700 active:scale-95\"\n        }`}\n        title=\"Zum Anfang der Zugliste\"\n        aria-label=\"Zum Anfang der Zugliste\"\n        data-testid=\"nav-first\"\n      >\n        <svg width={16} height={16} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\" />\n        </svg>\n      </button>\n\n      <button\n        onClick={gameActions.goToPrevious}\n        disabled={isAtStart}\n        className={`p-2 rounded transition-all ${\n          isAtStart\n            ? \"text-gray-600 cursor-not-allowed\"\n            : \"text-white hover:bg-gray-700 active:scale-95\"\n        }`}\n        title=\"Ein Zug zurück\"\n        aria-label=\"Ein Zug zurück\"\n        data-testid=\"nav-back\"\n      >\n        <svg width={16} height={16} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" />\n        </svg>\n        <span className=\"sr-only\">Ein Zug zurück</span>\n      </button>\n\n      <button\n        onClick={gameActions.goToNext}\n        disabled={isAtEnd}\n        className={`p-2 rounded transition-all ${\n          isAtEnd\n            ? \"text-gray-600 cursor-not-allowed\"\n            : \"text-white hover:bg-gray-700 active:scale-95\"\n        }`}\n        title=\"Ein Zug vor\"\n        aria-label=\"Ein Zug vor\"\n        data-testid=\"nav-forward\"\n      >\n        <svg width={16} height={16} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" />\n        </svg>\n      </button>\n\n      <button\n        onClick={gameActions.goToLast}\n        disabled={isAtEnd}\n        className={`p-2 rounded transition-all ${\n          isAtEnd\n            ? \"text-gray-600 cursor-not-allowed\"\n            : \"text-white hover:bg-gray-700 active:scale-95\"\n        }`}\n        title=\"Zum Ende der Zugliste\"\n        aria-label=\"Zum Ende der Zugliste\"\n        data-testid=\"nav-last\"\n      >\n        <svg width={16} height={16} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\" />\n        </svg>\n      </button>\n    </div>\n  );\n});\n\nNavigationControls.displayName = \"NavigationControls\";\n"],"names":["NavigationControls","React","memo","gameState","gameActions","useGameStore","totalMoves","moveHistory","length","currentIndex","currentMoveIndex","isAtStart","isAtEnd","div","className","data-testid","button","onClick","goToFirst","disabled","title","aria-label","svg","width","height","viewBox","fill","path","d","goToPrevious","span","goToNext","goToLast","displayName"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;CAqBC;;;;+BAiDYA;;;eAAAA;;;;8DA/CK;uBACW;;;;;;AA8CtB,MAAMA,mCAA+BC,cAAK,CAACC,IAAI,CAAC;IACrD,MAAM,CAACC,WAAWC,YAAY,GAAGC,IAAAA,mBAAY;IAE7C,6BAA6B;IAC7B,MAAMC,aAAaH,UAAUI,WAAW,CAACC,MAAM;QAC1BL;IAArB,MAAMM,eAAeN,CAAAA,8BAAAA,UAAUO,gBAAgB,cAA1BP,yCAAAA,8BAA8BG,aAAa;IAChE,MAAMK,YAAYF,gBAAgB,CAAC;IACnC,MAAMG,UAAUH,gBAAgBH,aAAa;IAE7C,qBACE,sBAACO;QACCC,WAAU;QACVC,eAAY;;0BAEZ,qBAACC;gBACCC,SAASb,YAAYc,SAAS;gBAC9BC,UAAUR;gBACVG,WAAW,CAAC,2BAA2B,EACrCH,YACI,qCACA,gDACJ;gBACFS,OAAM;gBACNC,cAAW;gBACXN,eAAY;0BAEZ,cAAA,qBAACO;oBAAIC,OAAO;oBAAIC,QAAQ;oBAAIC,SAAQ;oBAAYC,MAAK;8BACnD,cAAA,qBAACC;wBAAKC,GAAE;;;;0BAIZ,sBAACZ;gBACCC,SAASb,YAAYyB,YAAY;gBACjCV,UAAUR;gBACVG,WAAW,CAAC,2BAA2B,EACrCH,YACI,qCACA,gDACJ;gBACFS,OAAM;gBACNC,cAAW;gBACXN,eAAY;;kCAEZ,qBAACO;wBAAIC,OAAO;wBAAIC,QAAQ;wBAAIC,SAAQ;wBAAYC,MAAK;kCACnD,cAAA,qBAACC;4BAAKC,GAAE;;;kCAEV,qBAACE;wBAAKhB,WAAU;kCAAU;;;;0BAG5B,qBAACE;gBACCC,SAASb,YAAY2B,QAAQ;gBAC7BZ,UAAUP;gBACVE,WAAW,CAAC,2BAA2B,EACrCF,UACI,qCACA,gDACJ;gBACFQ,OAAM;gBACNC,cAAW;gBACXN,eAAY;0BAEZ,cAAA,qBAACO;oBAAIC,OAAO;oBAAIC,QAAQ;oBAAIC,SAAQ;oBAAYC,MAAK;8BACnD,cAAA,qBAACC;wBAAKC,GAAE;;;;0BAIZ,qBAACZ;gBACCC,SAASb,YAAY4B,QAAQ;gBAC7Bb,UAAUP;gBACVE,WAAW,CAAC,2BAA2B,EACrCF,UACI,qCACA,gDACJ;gBACFQ,OAAM;gBACNC,cAAW;gBACXN,eAAY;0BAEZ,cAAA,qBAACO;oBAAIC,OAAO;oBAAIC,QAAQ;oBAAIC,SAAQ;oBAAYC,MAAK;8BACnD,cAAA,qBAACC;wBAAKC,GAAE;;;;;;AAKlB;AAEA5B,mBAAmBiC,WAAW,GAAG"}