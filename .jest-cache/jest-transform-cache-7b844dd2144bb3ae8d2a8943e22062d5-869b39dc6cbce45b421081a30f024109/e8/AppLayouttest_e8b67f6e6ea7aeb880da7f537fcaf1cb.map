{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/tests/unit/ui/layout/AppLayout.test.tsx"],"sourcesContent":["/**\n * @fileoverview Unit tests for AppLayout component\n * @description Tests main layout component with header, menu, and navigation\n */\n\nimport React from \"react\";\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport { AppLayout } from \"@shared/components/layout/AppLayout\";\n\n// Mock Next.js Link component\njest.mock(\"next/link\", () => {\n  return function MockLink({\n    children,\n    href,\n  }: {\n    children: React.ReactNode;\n    href: string;\n  }) {\n    return <a href={href}>{children}</a>;\n  };\n});\n\n// Mock child components\njest.mock(\"@shared/components/layout/Header\", () => ({\n  Header: () => <div data-testid=\"mock-header\">Header Component</div>,\n}));\n\njest.mock(\"@shared/components/navigation/AdvancedEndgameMenu\", () => ({\n  AdvancedEndgameMenu: ({ isOpen, onClose, currentPositionId }: any) => (\n    <div\n      data-testid=\"mock-menu\"\n      data-is-open={isOpen}\n      data-position-id={currentPositionId}\n    >\n      Menu Component\n      <button onClick={onClose}>Close Menu</button>\n    </div>\n  ),\n}));\n\njest.mock(\"@shared/components/ui/DarkModeToggle\", () => ({\n  DarkModeToggle: () => (\n    <div data-testid=\"mock-dark-toggle\">Dark Mode Toggle</div>\n  ),\n}));\n\njest.mock(\"@shared/components/ui/SettingsIcon\", () => ({\n  SettingsIcon: () => <div data-testid=\"mock-settings\">Settings Icon</div>,\n}));\n\ndescribe(\"AppLayout Component\", () => {\n  const mockChildren = <div data-testid=\"test-content\">Test Content</div>;\n\n  const defaultProps = {\n    children: mockChildren,\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Basic Rendering\", () => {\n    it(\"should render main layout structure\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      expect(screen.getByTestId(\"test-content\")).toBeInTheDocument();\n      expect(screen.getByTestId(\"mock-menu\")).toBeInTheDocument();\n      expect(screen.getByTestId(\"mock-settings\")).toBeInTheDocument();\n    });\n\n    it(\"should render header section\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      expect(screen.getByText(\"Endgame Training\")).toBeInTheDocument();\n      expect(screen.getByTestId(\"mock-settings\")).toBeInTheDocument();\n    });\n\n    it(\"should pass currentPositionId to menu\", () => {\n      render(<AppLayout {...defaultProps} currentPositionId={42} />);\n\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-position-id\", \"42\");\n    });\n\n    it(\"should render children in main content area\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const mainContent = screen.getByRole(\"main\");\n      expect(mainContent).toBeInTheDocument();\n      expect(mainContent).toContainElement(screen.getByTestId(\"test-content\"));\n    });\n  });\n\n  describe(\"Menu State Management\", () => {\n    it(\"should start with menu open by default\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"true\");\n    });\n\n    it(\"should close menu when close button clicked\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const closeButton = screen.getByText(\"Close Menu\");\n      fireEvent.click(closeButton);\n\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"false\");\n    });\n\n    it(\"should toggle menu with mobile toggle button\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      // Initially open\n      let menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"true\");\n\n      // Find and click mobile toggle button\n      const toggleButton = screen.getByText(\"❌ Menü schließen\");\n      fireEvent.click(toggleButton);\n\n      menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"false\");\n\n      // Should change button text when closed\n      expect(screen.getByText(\"📖 Navigation\")).toBeInTheDocument();\n\n      // Click again to open\n      fireEvent.click(screen.getByText(\"📖 Navigation\"));\n\n      menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"true\");\n    });\n  });\n\n  describe(\"Header Structure\", () => {\n    it(\"should have fixed header with correct styling\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const header = container.querySelector(\"header\");\n      expect(header?.className).toContain(\"fixed\");\n      expect(header?.className).toContain(\"top-0\");\n      expect(header?.className).toContain(\"left-0\");\n      expect(header?.className).toContain(\"right-0\");\n      expect(header?.className).toContain(\"z-50\");\n      expect(header?.className).toContain(\"bg-gray-900\");\n      expect(header?.className).toContain(\"border-b\");\n      expect(header?.className).toContain(\"border-gray-700\");\n    });\n\n    it(\"should have proper header content layout\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const title = screen.getByText(\"Endgame Training\");\n      expect(title.className).toContain(\"text-xl\");\n      expect(title.className).toContain(\"font-bold\");\n      expect(title.className).toContain(\"text-white\");\n    });\n  });\n\n  describe(\"Main Content Layout\", () => {\n    it(\"should have proper main layout structure\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const mainLayout = container.querySelector(\".flex.pt-14\");\n      expect(mainLayout).toBeInTheDocument();\n\n      const flexContent = container.querySelector(\".flex-1\");\n      expect(flexContent).toBeInTheDocument();\n    });\n\n    it(\"should have container with proper styling\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const mainContainer = container.querySelector(\".container.mx-auto.p-4\");\n      expect(mainContainer).toBeInTheDocument();\n    });\n\n    it(\"should apply background color from CSS variables\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const rootDiv = container.firstChild as HTMLElement;\n      // CSS variables are not evaluated in jsdom\n      expect(rootDiv).toHaveClass(\"min-h-screen\");\n    });\n  });\n\n  describe(\"Mobile Navigation\", () => {\n    it(\"should show mobile toggle button\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const mobileToggle = screen.getByText(\"❌ Menü schließen\");\n      // Check parent container has responsive class\n      expect(mobileToggle.parentElement).toHaveClass(\"lg:hidden\");\n    });\n\n    it(\"should have responsive classes for mobile toggle\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const toggleButton = screen.getByText(\"❌ Menü schließen\");\n      expect(toggleButton.className).toContain(\"px-4\");\n      expect(toggleButton.className).toContain(\"py-2\");\n      expect(toggleButton.className).toContain(\"bg-blue-600\");\n      expect(toggleButton.className).toContain(\"text-white\");\n      expect(toggleButton.className).toContain(\"rounded-lg\");\n      expect(toggleButton.className).toContain(\"hover:bg-blue-700\");\n    });\n  });\n\n  describe(\"Desktop Floating Actions\", () => {\n    it(\"should render desktop floating action buttons\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const dashboardLink = screen.getByText(\"📊\");\n      expect(dashboardLink).toHaveAttribute(\"href\", \"/dashboard\");\n      expect(dashboardLink).toHaveTextContent(\"📊\");\n    });\n\n    it(\"should render dark mode toggle in floating actions\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const darkToggle = screen.getAllByTestId(\"mock-dark-toggle\")[0]; // Desktop version\n      expect(darkToggle).toBeInTheDocument();\n    });\n\n    it(\"should have proper styling for floating actions\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const floatingContainer = container.querySelector(\n        \".fixed.bottom-6.right-6\",\n      );\n      expect(floatingContainer).toBeInTheDocument();\n      expect(floatingContainer?.className).toContain(\"hidden\");\n      expect(floatingContainer?.className).toContain(\"lg:flex\");\n    });\n  });\n\n  describe(\"Mobile Bottom Navigation\", () => {\n    it(\"should render mobile bottom navigation by default\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const bottomNav = screen.getByText(\"📊 Dashboard\");\n      expect(bottomNav).toBeInTheDocument();\n      expect(bottomNav.closest(\"a\")).toHaveAttribute(\"href\", \"/dashboard\");\n    });\n\n    it(\"should render home link in bottom navigation\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const homeLink = screen.getByText(\"🏠 Home\");\n      expect(homeLink.closest(\"a\")).toHaveAttribute(\"href\", \"/\");\n    });\n\n    it(\"should hide bottom navigation when showMobileBottomNav is false\", () => {\n      render(<AppLayout {...defaultProps} showMobileBottomNav={false} />);\n\n      expect(screen.queryByText(\"📊 Dashboard\")).not.toBeInTheDocument();\n      expect(screen.queryByText(\"🏠 Home\")).not.toBeInTheDocument();\n    });\n\n    it(\"should have proper bottom navigation styling\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const bottomNav = container.querySelector(\".lg\\\\:hidden.fixed.bottom-0\");\n      expect(bottomNav).toBeInTheDocument();\n      expect(bottomNav?.className).toContain(\"dark-card-elevated\");\n      expect(bottomNav?.className).toContain(\"border-t\");\n    });\n\n    it(\"should include dark mode toggle in bottom navigation\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      // Should have dark mode toggle in bottom nav (second instance)\n      const darkToggles = screen.getAllByTestId(\"mock-dark-toggle\");\n      expect(darkToggles.length).toBeGreaterThan(1);\n    });\n  });\n\n  describe(\"Responsive Behavior\", () => {\n    it(\"should have responsive classes for different screen sizes\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      // Mobile toggle should be hidden on large screens\n      const mobileSection = container.querySelector(\".lg\\\\:hidden.p-4\");\n      expect(mobileSection).toBeInTheDocument();\n\n      // Floating actions should be hidden on mobile\n      const desktopActions = container.querySelector(\".hidden.lg\\\\:flex\");\n      expect(desktopActions).toBeInTheDocument();\n    });\n\n    it(\"should handle window resize gracefully\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      // Should not break with different viewport sizes\n      expect(screen.getByTestId(\"test-content\")).toBeInTheDocument();\n      expect(screen.getByTestId(\"mock-menu\")).toBeInTheDocument();\n    });\n  });\n\n  describe(\"Link Navigation\", () => {\n    it(\"should render dashboard links correctly\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const dashboardLinks = screen.getAllByText(/Dashboard/);\n      dashboardLinks.forEach((link) => {\n        expect(link.closest(\"a\")).toHaveAttribute(\"href\", \"/dashboard\");\n      });\n    });\n\n    it(\"should render home link correctly\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const homeLink = screen.getByText(\"🏠 Home\");\n      expect(homeLink.closest(\"a\")).toHaveAttribute(\"href\", \"/\");\n    });\n\n    it(\"should have proper button styling for navigation links\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const dashboardButton = screen.getByText(\"📊 Dashboard\");\n      // Button styling is handled by Link component\n      expect(dashboardButton).toBeInTheDocument();\n    });\n  });\n\n  describe(\"CSS Layout Classes\", () => {\n    it(\"should apply minimum height to main container\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const mainContainer = container.firstChild as HTMLElement;\n      expect(mainContainer.className).toContain(\"min-h-screen\");\n    });\n\n    it(\"should have flex layout for main content\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const flexContainer = container.querySelector(\".flex.pt-14\");\n      expect(flexContainer).toBeInTheDocument();\n    });\n\n    it(\"should have proper spacing and padding\", () => {\n      const { container } = render(<AppLayout {...defaultProps} />);\n\n      const headerPadding = container.querySelector(\".px-4.py-3\");\n      const contentPadding = container.querySelector(\".container.mx-auto.p-4\");\n\n      expect(headerPadding).toBeInTheDocument();\n      expect(contentPadding).toBeInTheDocument();\n    });\n  });\n\n  describe(\"Component Integration\", () => {\n    it(\"should integrate properly with menu component\", () => {\n      render(<AppLayout {...defaultProps} currentPositionId={123} />);\n\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-position-id\", \"123\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"true\");\n    });\n\n    it(\"should handle menu close callback\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"true\");\n\n      const closeButton = screen.getByText(\"Close Menu\");\n      fireEvent.click(closeButton);\n\n      expect(menu).toHaveAttribute(\"data-is-open\", \"false\");\n    });\n  });\n\n  describe(\"Edge Cases\", () => {\n    it(\"should handle missing children gracefully\", () => {\n      render(<AppLayout children={undefined} />);\n\n      const mainContent = screen.getByRole(\"main\");\n      expect(mainContent).toBeInTheDocument();\n    });\n\n    it(\"should handle undefined currentPositionId\", () => {\n      render(<AppLayout {...defaultProps} currentPositionId={undefined} />);\n\n      const menu = screen.getByTestId(\"mock-menu\");\n      // Check menu exists, data attributes are optional\n      expect(menu).toBeInTheDocument();\n    });\n\n    it(\"should handle rapid menu toggle clicks\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      const toggleButton = screen.getByText(\"❌ Menü schließen\");\n\n      // Rapid clicks\n      for (let i = 0; i < 10; i++) {\n        fireEvent.click(toggleButton);\n      }\n\n      // Final state depends on implementation\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toBeInTheDocument();\n    });\n\n    it(\"should handle complex children content\", () => {\n      const complexChildren = (\n        <div>\n          <h1>Complex Content</h1>\n          <div>\n            <p>Nested content</p>\n            <button>Action Button</button>\n          </div>\n        </div>\n      );\n\n      render(<AppLayout children={complexChildren} />);\n\n      expect(screen.getByText(\"Complex Content\")).toBeInTheDocument();\n      expect(screen.getByText(\"Nested content\")).toBeInTheDocument();\n      expect(screen.getByText(\"Action Button\")).toBeInTheDocument();\n    });\n  });\n\n  describe(\"Performance\", () => {\n    it(\"should not cause memory leaks on unmount\", () => {\n      const { unmount } = render(<AppLayout {...defaultProps} />);\n\n      expect(() => unmount()).not.toThrow();\n    });\n\n    it(\"should handle frequent prop changes efficiently\", () => {\n      const { rerender } = render(\n        <AppLayout {...defaultProps} currentPositionId={1} />,\n      );\n\n      // Frequent position changes\n      for (let i = 2; i <= 20; i++) {\n        rerender(<AppLayout {...defaultProps} currentPositionId={i} />);\n      }\n\n      expect(screen.getByTestId(\"test-content\")).toBeInTheDocument();\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-position-id\", \"20\");\n    });\n  });\n\n  describe(\"State Management\", () => {\n    it(\"should maintain menu state across re-renders\", () => {\n      const { rerender } = render(<AppLayout {...defaultProps} />);\n\n      // Close menu\n      const closeButton = screen.getByText(\"Close Menu\");\n      fireEvent.click(closeButton);\n\n      let menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"false\");\n\n      // Re-render with different props\n      rerender(<AppLayout {...defaultProps} currentPositionId={42} />);\n\n      // Menu should still be closed\n      menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"false\");\n    });\n\n    it(\"should initialize with correct default state\", () => {\n      render(<AppLayout {...defaultProps} />);\n\n      // Menu should start open\n      const menu = screen.getByTestId(\"mock-menu\");\n      expect(menu).toHaveAttribute(\"data-is-open\", \"true\");\n\n      // Mobile bottom nav should be shown by default\n      expect(screen.getByText(\"📊 Dashboard\")).toBeInTheDocument();\n    });\n  });\n});\n"],"names":["jest","mock","MockLink","children","href","a","Header","div","data-testid","AdvancedEndgameMenu","isOpen","onClose","currentPositionId","data-is-open","data-position-id","button","onClick","DarkModeToggle","SettingsIcon","describe","mockChildren","defaultProps","beforeEach","clearAllMocks","it","render","AppLayout","expect","screen","getByTestId","toBeInTheDocument","getByText","menu","toHaveAttribute","mainContent","getByRole","toContainElement","closeButton","fireEvent","click","toggleButton","container","header","querySelector","className","toContain","title","mainLayout","flexContent","mainContainer","rootDiv","firstChild","toHaveClass","mobileToggle","parentElement","dashboardLink","toHaveTextContent","darkToggle","getAllByTestId","floatingContainer","bottomNav","closest","homeLink","showMobileBottomNav","queryByText","not","darkToggles","length","toBeGreaterThan","mobileSection","desktopActions","dashboardLinks","getAllByText","forEach","link","dashboardButton","flexContainer","headerPadding","contentPadding","undefined","i","complexChildren","h1","p","unmount","toThrow","rerender"],"mappings":"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"}