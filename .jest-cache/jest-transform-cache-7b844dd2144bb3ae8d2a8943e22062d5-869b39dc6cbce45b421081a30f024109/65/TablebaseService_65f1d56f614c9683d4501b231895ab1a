018878c971b4a2d87d218320c738bf50
/**
 * Optimized Tablebase Service - Single API Call Architecture
 *
 * @remarks
 * This service uses the Lichess Tablebase API's "moves" field to get all move
 * evaluations in a single API call, instead of making N+1 calls.
 *
 * Key improvements:
 * - 1 API call instead of 20-40 for getTopMoves
 * - Caches complete tablebase entries including moves
 * - Correct WDL perspective handling
 * - No chess.js dependency for move generation
 * - FEN normalization for improved cache hit rate
 *
 * Important limitations:
 * - DTM (Distance to Mate) values are only available for positions with â‰¤5 pieces
 * - Positions with 6-7 pieces only have DTZ (Distance to Zeroing) values
 * - Rate limiting applies (~130 rapid requests trigger limits)
 */"use strict";

/* istanbul ignore next */
function cov_17mw7yy3a9() {
  var path = "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/TablebaseService.ts";
  var hash = "049452d00726a46705557541982066d195ba7bc8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/TablebaseService.ts",
    statementMap: {
      "0": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "1": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "2": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "3": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 54
        }
      },
      "4": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 37
        }
      },
      "5": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "6": {
        start: {
          line: 32,
          column: 13
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "7": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "8": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "10": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 25
        }
      },
      "11": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "12": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 71
        }
      },
      "13": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "14": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 67
        }
      },
      "15": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "16": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "17": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 77,
          column: 14
        }
      },
      "18": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "19": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 85,
          column: 14
        }
      },
      "20": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "21": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 67
        }
      },
      "22": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "23": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "24": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 142,
          column: 14
        }
      },
      "25": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "26": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "27": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "28": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 144
        }
      },
      "29": {
        start: {
          line: 130,
          column: 33
        },
        end: {
          line: 130,
          column: 147
        }
      },
      "30": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 131,
          column: 59
        }
      },
      "31": {
        start: {
          line: 132,
          column: 23
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "32": {
        start: {
          line: 135,
          column: 33
        },
        end: {
          line: 135,
          column: 150
        }
      },
      "33": {
        start: {
          line: 137,
          column: 33
        },
        end: {
          line: 137,
          column: 150
        }
      },
      "34": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 59
        }
      },
      "35": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "36": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 213
        }
      },
      "37": {
        start: {
          line: 146,
          column: 30
        },
        end: {
          line: 146,
          column: 78
        }
      },
      "38": {
        start: {
          line: 146,
          column: 57
        },
        end: {
          line: 146,
          column: 77
        }
      },
      "39": {
        start: {
          line: 148,
          column: 37
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "40": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "41": {
        start: {
          line: 150,
          column: 59
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "42": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 173,
          column: 15
        }
      },
      "43": {
        start: {
          line: 166,
          column: 56
        },
        end: {
          line: 171,
          column: 21
        }
      },
      "44": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 177,
          column: 14
        }
      },
      "45": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "46": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 14
        }
      },
      "47": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 52
        }
      },
      "48": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 220,
          column: 73
        }
      },
      "49": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "50": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 76
        }
      },
      "51": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 49
        }
      },
      "52": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 62
        }
      },
      "53": {
        start: {
          line: 227,
          column: 27
        },
        end: {
          line: 227,
          column: 58
        }
      },
      "54": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "55": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "56": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 24
        }
      },
      "57": {
        start: {
          line: 236,
          column: 23
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "58": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "59": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "60": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 42
        }
      },
      "61": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 32
        }
      },
      "62": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 39
        }
      },
      "63": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 63
        }
      },
      "64": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "65": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "66": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 47
        }
      },
      "67": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 27
        }
      },
      "68": {
        start: {
          line: 255,
          column: 24
        },
        end: {
          line: 255,
          column: 76
        }
      },
      "69": {
        start: {
          line: 257,
          column: 35
        },
        end: {
          line: 260,
          column: 10
        }
      },
      "70": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 55
        }
      },
      "71": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 68
        }
      },
      "72": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 34
        }
      },
      "73": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 29
        }
      },
      "74": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 37
        }
      },
      "75": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "76": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 27
        }
      },
      "77": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "78": {
        start: {
          line: 274,
          column: 35
        },
        end: {
          line: 274,
          column: 56
        }
      },
      "79": {
        start: {
          line: 275,
          column: 34
        },
        end: {
          line: 275,
          column: 74
        }
      },
      "80": {
        start: {
          line: 275,
          column: 49
        },
        end: {
          line: 275,
          column: 67
        }
      },
      "81": {
        start: {
          line: 277,
          column: 33
        },
        end: {
          line: 279,
          column: 18
        }
      },
      "82": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 40
        }
      },
      "83": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 306,
          column: 17
        }
      },
      "84": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 65
        }
      },
      "85": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "86": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 287,
          column: 27
        }
      },
      "87": {
        start: {
          line: 288,
          column: 24
        },
        end: {
          line: 288,
          column: 62
        }
      },
      "88": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 289,
          column: 36
        }
      },
      "89": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 300,
          column: 21
        }
      },
      "90": {
        start: {
          line: 293,
          column: 38
        },
        end: {
          line: 293,
          column: 105
        }
      },
      "91": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 297,
          column: 27
        }
      },
      "92": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 81
        }
      },
      "93": {
        start: {
          line: 298,
          column: 53
        },
        end: {
          line: 298,
          column: 79
        }
      },
      "94": {
        start: {
          line: 299,
          column: 24
        },
        end: {
          line: 299,
          column: 33
        }
      },
      "95": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 304,
          column: 21
        }
      },
      "96": {
        start: {
          line: 303,
          column: 24
        },
        end: {
          line: 303,
          column: 76
        }
      },
      "97": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 69
        }
      },
      "98": {
        start: {
          line: 307,
          column: 37
        },
        end: {
          line: 307,
          column: 58
        }
      },
      "99": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 322,
          column: 17
        }
      },
      "100": {
        start: {
          line: 311,
          column: 20
        },
        end: {
          line: 311,
          column: 105
        }
      },
      "101": {
        start: {
          line: 313,
          column: 20
        },
        end: {
          line: 320,
          column: 21
        }
      },
      "102": {
        start: {
          line: 314,
          column: 24
        },
        end: {
          line: 318,
          column: 27
        }
      },
      "103": {
        start: {
          line: 319,
          column: 24
        },
        end: {
          line: 319,
          column: 66
        }
      },
      "104": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 32
        }
      },
      "105": {
        start: {
          line: 324,
          column: 30
        },
        end: {
          line: 324,
          column: 76
        }
      },
      "106": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 55
        }
      },
      "107": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 331,
          column: 19
        }
      },
      "108": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 29
        }
      },
      "109": {
        start: {
          line: 334,
          column: 37
        },
        end: {
          line: 334,
          column: 93
        }
      },
      "110": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 338,
          column: 19
        }
      },
      "111": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 342,
          column: 17
        }
      },
      "112": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 32
        }
      },
      "113": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 353,
          column: 17
        }
      },
      "114": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 348,
          column: 23
        }
      },
      "115": {
        start: {
          line: 349,
          column: 20
        },
        end: {
          line: 351,
          column: 21
        }
      },
      "116": {
        start: {
          line: 350,
          column: 24
        },
        end: {
          line: 350,
          column: 88
        }
      },
      "117": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 106
        }
      },
      "118": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 81
        }
      },
      "119": {
        start: {
          line: 355,
          column: 45
        },
        end: {
          line: 355,
          column: 79
        }
      },
      "120": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 58
        }
      },
      "121": {
        start: {
          line: 372,
          column: 30
        },
        end: {
          line: 372,
          column: 55
        }
      },
      "122": {
        start: {
          line: 374,
          column: 33
        },
        end: {
          line: 374,
          column: 45
        }
      },
      "123": {
        start: {
          line: 375,
          column: 26
        },
        end: {
          line: 375,
          column: 63
        }
      },
      "124": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "125": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 28
        }
      },
      "126": {
        start: {
          line: 383,
          column: 22
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "127": {
        start: {
          line: 386,
          column: 33
        },
        end: {
          line: 386,
          column: 71
        }
      },
      "128": {
        start: {
          line: 387,
          column: 26
        },
        end: {
          line: 387,
          column: 59
        }
      },
      "129": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 391,
          column: 13
        }
      },
      "130": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 35
        }
      },
      "131": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 400,
          column: 14
        }
      },
      "132": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 415,
          column: 10
        }
      },
      "133": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 424,
          column: 11
        }
      },
      "134": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 433,
          column: 9
        }
      },
      "135": {
        start: {
          line: 427,
          column: 24
        },
        end: {
          line: 427,
          column: 34
        }
      },
      "136": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "137": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 431,
          column: 17
        }
      },
      "138": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 43
        }
      },
      "139": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "140": {
        start: {
          line: 441,
          column: 16
        },
        end: {
          line: 441,
          column: 25
        }
      },
      "141": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 25
        }
      },
      "142": {
        start: {
          line: 447,
          column: 16
        },
        end: {
          line: 447,
          column: 25
        }
      },
      "143": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 26
        }
      },
      "144": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 452,
          column: 26
        }
      },
      "145": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 25
        }
      },
      "146": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "147": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 30
        }
      },
      "148": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 29
        }
      },
      "149": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 38
        }
      },
      "150": {
        start: {
          line: 469,
          column: 16
        },
        end: {
          line: 469,
          column: 36
        }
      },
      "151": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 36
        }
      },
      "152": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 35
        }
      },
      "153": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 32
        }
      },
      "154": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "155": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 89
        }
      },
      "156": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 488,
          column: 107
        }
      },
      "157": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 490,
          column: 49
        }
      },
      "158": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 492,
          column: 45
        }
      },
      "159": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 494,
          column: 109
        }
      },
      "160": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 50
        }
      },
      "161": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 90
        }
      },
      "162": {
        start: {
          line: 500,
          column: 16
        },
        end: {
          line: 500,
          column: 46
        }
      },
      "163": {
        start: {
          line: 502,
          column: 16
        },
        end: {
          line: 502,
          column: 51
        }
      },
      "164": {
        start: {
          line: 509,
          column: 27
        },
        end: {
          line: 509,
          column: 44
        }
      },
      "165": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 510,
          column: 59
        }
      },
      "166": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 27
        }
      },
      "167": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 37
        }
      },
      "168": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 522,
          column: 41
        }
      },
      "169": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 525,
          column: 51
        }
      },
      "170": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 526,
          column: 47
        }
      },
      "171": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 527,
          column: 51
        }
      },
      "172": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 61
        }
      },
      "173": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 560,
          column: 11
        }
      },
      "174": {
        start: {
          line: 537,
          column: 16
        },
        end: {
          line: 537,
          column: 33
        }
      },
      "175": {
        start: {
          line: 540,
          column: 16
        },
        end: {
          line: 540,
          column: 35
        }
      },
      "176": {
        start: {
          line: 543,
          column: 16
        },
        end: {
          line: 543,
          column: 32
        }
      },
      "177": {
        start: {
          line: 546,
          column: 16
        },
        end: {
          line: 546,
          column: 82
        }
      },
      "178": {
        start: {
          line: 549,
          column: 16
        },
        end: {
          line: 549,
          column: 44
        }
      },
      "179": {
        start: {
          line: 552,
          column: 30
        },
        end: {
          line: 552,
          column: 63
        }
      },
      "180": {
        start: {
          line: 553,
          column: 16
        },
        end: {
          line: 558,
          column: 18
        }
      },
      "181": {
        start: {
          line: 563,
          column: 25
        },
        end: {
          line: 563,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 10
          }
        },
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "1": {
        name: "_define_property",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 25
          }
        },
        loc: {
          start: {
            line: 34,
            column: 43
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        },
        loc: {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        },
        loc: {
          start: {
            line: 103,
            column: 40
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 103
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 117,
            column: 20
          }
        },
        loc: {
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 142,
            column: 13
          }
        },
        line: 117
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 146,
            column: 49
          },
          end: {
            line: 146,
            column: 50
          }
        },
        loc: {
          start: {
            line: 146,
            column: 57
          },
          end: {
            line: 146,
            column: 77
          }
        },
        line: 146
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 150,
            column: 50
          },
          end: {
            line: 150,
            column: 51
          }
        },
        loc: {
          start: {
            line: 150,
            column: 59
          },
          end: {
            line: 157,
            column: 17
          }
        },
        line: 150
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 166,
            column: 50
          },
          end: {
            line: 166,
            column: 51
          }
        },
        loc: {
          start: {
            line: 166,
            column: 56
          },
          end: {
            line: 171,
            column: 21
          }
        },
        line: 166
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 202,
            column: 6
          },
          end: {
            line: 202,
            column: 7
          }
        },
        loc: {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 202
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 218,
            column: 7
          }
        },
        loc: {
          start: {
            line: 218,
            column: 43
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 218
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 257,
            column: 51
          },
          end: {
            line: 257,
            column: 52
          }
        },
        loc: {
          start: {
            line: 257,
            column: 55
          },
          end: {
            line: 260,
            column: 9
          }
        },
        line: 257
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 269,
            column: 6
          },
          end: {
            line: 269,
            column: 7
          }
        },
        loc: {
          start: {
            line: 269,
            column: 51
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 269
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 275,
            column: 45
          },
          end: {
            line: 275,
            column: 46
          }
        },
        loc: {
          start: {
            line: 275,
            column: 49
          },
          end: {
            line: 275,
            column: 67
          }
        },
        line: 275
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 298,
            column: 42
          },
          end: {
            line: 298,
            column: 43
          }
        },
        loc: {
          start: {
            line: 298,
            column: 53
          },
          end: {
            line: 298,
            column: 79
          }
        },
        line: 298
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 355,
            column: 34
          },
          end: {
            line: 355,
            column: 35
          }
        },
        loc: {
          start: {
            line: 355,
            column: 45
          },
          end: {
            line: 355,
            column: 79
          }
        },
        line: 355
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 371,
            column: 6
          },
          end: {
            line: 371,
            column: 7
          }
        },
        loc: {
          start: {
            line: 371,
            column: 38
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 371
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 383,
            column: 44
          },
          end: {
            line: 383,
            column: 45
          }
        },
        loc: {
          start: {
            line: 383,
            column: 55
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 383
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 420,
            column: 6
          },
          end: {
            line: 420,
            column: 7
          }
        },
        loc: {
          start: {
            line: 420,
            column: 30
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 420
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 438,
            column: 6
          },
          end: {
            line: 438,
            column: 7
          }
        },
        loc: {
          start: {
            line: 438,
            column: 31
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 438
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 460,
            column: 6
          },
          end: {
            line: 460,
            column: 7
          }
        },
        loc: {
          start: {
            line: 460,
            column: 32
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 460
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 483,
            column: 6
          },
          end: {
            line: 483,
            column: 7
          }
        },
        loc: {
          start: {
            line: 483,
            column: 40
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 483
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 508,
            column: 6
          },
          end: {
            line: 508,
            column: 7
          }
        },
        loc: {
          start: {
            line: 508,
            column: 24
          },
          end: {
            line: 511,
            column: 5
          }
        },
        line: 508
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 514,
            column: 6
          },
          end: {
            line: 514,
            column: 7
          }
        },
        loc: {
          start: {
            line: 514,
            column: 19
          },
          end: {
            line: 517,
            column: 5
          }
        },
        line: 514
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 521,
            column: 6
          },
          end: {
            line: 521,
            column: 7
          }
        },
        loc: {
          start: {
            line: 521,
            column: 19
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 521
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 524,
            column: 5
          }
        },
        loc: {
          start: {
            line: 524,
            column: 17
          },
          end: {
            line: 561,
            column: 5
          }
        },
        line: 524
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 536,
            column: 13
          }
        },
        loc: {
          start: {
            line: 536,
            column: 30
          },
          end: {
            line: 538,
            column: 13
          }
        },
        line: 536
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 539,
            column: 12
          },
          end: {
            line: 539,
            column: 13
          }
        },
        loc: {
          start: {
            line: 539,
            column: 31
          },
          end: {
            line: 541,
            column: 13
          }
        },
        line: 539
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 542,
            column: 13
          }
        },
        loc: {
          start: {
            line: 542,
            column: 29
          },
          end: {
            line: 544,
            column: 13
          }
        },
        line: 542
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 545,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        },
        loc: {
          start: {
            line: 545,
            column: 36
          },
          end: {
            line: 547,
            column: 13
          }
        },
        line: 545
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 548,
            column: 12
          },
          end: {
            line: 548,
            column: 13
          }
        },
        loc: {
          start: {
            line: 548,
            column: 35
          },
          end: {
            line: 550,
            column: 13
          }
        },
        line: 548
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 551,
            column: 12
          },
          end: {
            line: 551,
            column: 13
          }
        },
        loc: {
          start: {
            line: 551,
            column: 26
          },
          end: {
            line: 559,
            column: 13
          }
        },
        line: 551
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 84,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 48
          },
          end: {
            line: 84,
            column: 61
          }
        }, {
          start: {
            line: 84,
            column: 64
          },
          end: {
            line: 84,
            column: 79
          }
        }],
        line: 84
      },
      "3": {
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 103,
            column: 38
          }
        }],
        line: 103
      },
      "4": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "5": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 107,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 107,
            column: 22
          }
        }, {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 45
          }
        }],
        line: 107
      },
      "6": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 139,
            column: 17
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 128,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 136
          },
          end: {
            line: 128,
            column: 140
          }
        }, {
          start: {
            line: 128,
            column: 143
          },
          end: {
            line: 128,
            column: 144
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 128,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 128,
            column: 114
          }
        }, {
          start: {
            line: 128,
            column: 118
          },
          end: {
            line: 128,
            column: 133
          }
        }],
        line: 128
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 90
          },
          end: {
            line: 128,
            column: 96
          }
        }, {
          start: {
            line: 128,
            column: 99
          },
          end: {
            line: 128,
            column: 104
          }
        }],
        line: 128
      },
      "11": {
        loc: {
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 66
          }
        }, {
          start: {
            line: 128,
            column: 70
          },
          end: {
            line: 128,
            column: 87
          }
        }],
        line: 128
      },
      "12": {
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 138
          },
          end: {
            line: 130,
            column: 143
          }
        }, {
          start: {
            line: 130,
            column: 146
          },
          end: {
            line: 130,
            column: 147
          }
        }],
        line: 130
      },
      "13": {
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 115
          }
        }, {
          start: {
            line: 130,
            column: 119
          },
          end: {
            line: 130,
            column: 135
          }
        }],
        line: 130
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 91
          },
          end: {
            line: 130,
            column: 97
          }
        }, {
          start: {
            line: 130,
            column: 100
          },
          end: {
            line: 130,
            column: 105
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 67
          }
        }, {
          start: {
            line: 130,
            column: 71
          },
          end: {
            line: 130,
            column: 88
          }
        }],
        line: 130
      },
      "16": {
        loc: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 139,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 135,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 141
          },
          end: {
            line: 135,
            column: 146
          }
        }, {
          start: {
            line: 135,
            column: 149
          },
          end: {
            line: 135,
            column: 150
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 135,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 135,
            column: 118
          }
        }, {
          start: {
            line: 135,
            column: 122
          },
          end: {
            line: 135,
            column: 138
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 135,
            column: 42
          },
          end: {
            line: 135,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 93
          },
          end: {
            line: 135,
            column: 100
          }
        }, {
          start: {
            line: 135,
            column: 103
          },
          end: {
            line: 135,
            column: 108
          }
        }],
        line: 135
      },
      "20": {
        loc: {
          start: {
            line: 135,
            column: 42
          },
          end: {
            line: 135,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 42
          },
          end: {
            line: 135,
            column: 68
          }
        }, {
          start: {
            line: 135,
            column: 72
          },
          end: {
            line: 135,
            column: 90
          }
        }],
        line: 135
      },
      "21": {
        loc: {
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 141
          },
          end: {
            line: 137,
            column: 146
          }
        }, {
          start: {
            line: 137,
            column: 149
          },
          end: {
            line: 137,
            column: 150
          }
        }],
        line: 137
      },
      "22": {
        loc: {
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 118
          }
        }, {
          start: {
            line: 137,
            column: 122
          },
          end: {
            line: 137,
            column: 138
          }
        }],
        line: 137
      },
      "23": {
        loc: {
          start: {
            line: 137,
            column: 42
          },
          end: {
            line: 137,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 93
          },
          end: {
            line: 137,
            column: 100
          }
        }, {
          start: {
            line: 137,
            column: 103
          },
          end: {
            line: 137,
            column: 108
          }
        }],
        line: 137
      },
      "24": {
        loc: {
          start: {
            line: 137,
            column: 42
          },
          end: {
            line: 137,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 42
          },
          end: {
            line: 137,
            column: 68
          }
        }, {
          start: {
            line: 137,
            column: 72
          },
          end: {
            line: 137,
            column: 90
          }
        }],
        line: 137
      },
      "25": {
        loc: {
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 145,
            column: 213
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 192
          },
          end: {
            line: 145,
            column: 209
          }
        }, {
          start: {
            line: 145,
            column: 212
          },
          end: {
            line: 145,
            column: 213
          }
        }],
        line: 145
      },
      "26": {
        loc: {
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 145,
            column: 189
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 145,
            column: 157
          }
        }, {
          start: {
            line: 145,
            column: 161
          },
          end: {
            line: 145,
            column: 189
          }
        }],
        line: 145
      },
      "27": {
        loc: {
          start: {
            line: 145,
            column: 49
          },
          end: {
            line: 145,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 121
          },
          end: {
            line: 145,
            column: 127
          }
        }, {
          start: {
            line: 145,
            column: 130
          },
          end: {
            line: 145,
            column: 147
          }
        }],
        line: 145
      },
      "28": {
        loc: {
          start: {
            line: 145,
            column: 49
          },
          end: {
            line: 145,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 49
          },
          end: {
            line: 145,
            column: 90
          }
        }, {
          start: {
            line: 145,
            column: 94
          },
          end: {
            line: 145,
            column: 118
          }
        }],
        line: 145
      },
      "29": {
        loc: {
          start: {
            line: 172,
            column: 32
          },
          end: {
            line: 172,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 46
          },
          end: {
            line: 172,
            column: 77
          }
        }, {
          start: {
            line: 172,
            column: 80
          },
          end: {
            line: 172,
            column: 133
          }
        }],
        line: 172
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 80
          },
          end: {
            line: 172,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 94
          },
          end: {
            line: 172,
            column: 124
          }
        }, {
          start: {
            line: 172,
            column: 127
          },
          end: {
            line: 172,
            column: 133
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 184,
            column: 23
          },
          end: {
            line: 184,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 48
          },
          end: {
            line: 184,
            column: 61
          }
        }, {
          start: {
            line: 184,
            column: 64
          },
          end: {
            line: 184,
            column: 79
          }
        }],
        line: 184
      },
      "32": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "33": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "34": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "35": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 18
          }
        }, {
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 237,
            column: 48
          }
        }],
        line: 237
      },
      "36": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "37": {
        loc: {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 306,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 306,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "38": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "39": {
        loc: {
          start: {
            line: 292,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "40": {
        loc: {
          start: {
            line: 302,
            column: 20
          },
          end: {
            line: 304,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 20
          },
          end: {
            line: 304,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "41": {
        loc: {
          start: {
            line: 302,
            column: 24
          },
          end: {
            line: 302,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 24
          },
          end: {
            line: 302,
            column: 46
          }
        }, {
          start: {
            line: 302,
            column: 50
          },
          end: {
            line: 302,
            column: 71
          }
        }],
        line: 302
      },
      "42": {
        loc: {
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 320,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 320,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "43": {
        loc: {
          start: {
            line: 334,
            column: 37
          },
          end: {
            line: 334,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 62
          },
          end: {
            line: 334,
            column: 75
          }
        }, {
          start: {
            line: 334,
            column: 78
          },
          end: {
            line: 334,
            column: 93
          }
        }],
        line: 334
      },
      "44": {
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 342,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 342,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "45": {
        loc: {
          start: {
            line: 340,
            column: 20
          },
          end: {
            line: 340,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 20
          },
          end: {
            line: 340,
            column: 42
          }
        }, {
          start: {
            line: 340,
            column: 46
          },
          end: {
            line: 340,
            column: 86
          }
        }],
        line: 340
      },
      "46": {
        loc: {
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 353,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 353,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "47": {
        loc: {
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 351,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 351,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "48": {
        loc: {
          start: {
            line: 349,
            column: 24
          },
          end: {
            line: 349,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 24
          },
          end: {
            line: 349,
            column: 46
          }
        }, {
          start: {
            line: 349,
            column: 50
          },
          end: {
            line: 349,
            column: 77
          }
        }],
        line: 349
      },
      "49": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "50": {
        loc: {
          start: {
            line: 383,
            column: 23
          },
          end: {
            line: 383,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 23
          },
          end: {
            line: 383,
            column: 32
          }
        }, {
          start: {
            line: 383,
            column: 36
          },
          end: {
            line: 383,
            column: 38
          }
        }],
        line: 383
      },
      "51": {
        loc: {
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "52": {
        loc: {
          start: {
            line: 399,
            column: 25
          },
          end: {
            line: 399,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 399,
            column: 25
          },
          end: {
            line: 399,
            column: 40
          }
        }, {
          start: {
            line: 399,
            column: 44
          },
          end: {
            line: 399,
            column: 49
          }
        }],
        line: 399
      },
      "53": {
        loc: {
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 408,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 408,
            column: 76
          },
          end: {
            line: 408,
            column: 84
          }
        }, {
          start: {
            line: 408,
            column: 87
          },
          end: {
            line: 408,
            column: 91
          }
        }],
        line: 408
      },
      "54": {
        loc: {
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 408,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 408,
            column: 50
          }
        }, {
          start: {
            line: 408,
            column: 54
          },
          end: {
            line: 408,
            column: 73
          }
        }],
        line: 408
      },
      "55": {
        loc: {
          start: {
            line: 409,
            column: 25
          },
          end: {
            line: 409,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 25
          },
          end: {
            line: 409,
            column: 54
          }
        }, {
          start: {
            line: 409,
            column: 58
          },
          end: {
            line: 409,
            column: 82
          }
        }],
        line: 409
      },
      "56": {
        loc: {
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 433,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 433,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "57": {
        loc: {
          start: {
            line: 429,
            column: 16
          },
          end: {
            line: 431,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 16
          },
          end: {
            line: 431,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 429
      },
      "58": {
        loc: {
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 441,
            column: 25
          }
        }, {
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 442,
            column: 30
          }
        }, {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 444,
            column: 25
          }
        }, {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 24
          }
        }, {
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 447,
            column: 25
          }
        }, {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 448,
            column: 32
          }
        }, {
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 450,
            column: 26
          }
        }, {
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 452,
            column: 26
          }
        }, {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 454,
            column: 25
          }
        }],
        line: 439
      },
      "59": {
        loc: {
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 463,
            column: 30
          }
        }, {
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 465,
            column: 29
          }
        }, {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 467,
            column: 38
          }
        }, {
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 469,
            column: 36
          }
        }, {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 471,
            column: 36
          }
        }, {
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 473,
            column: 35
          }
        }, {
          start: {
            line: 474,
            column: 12
          },
          end: {
            line: 474,
            column: 24
          }
        }, {
          start: {
            line: 475,
            column: 12
          },
          end: {
            line: 475,
            column: 27
          }
        }, {
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 477,
            column: 32
          }
        }],
        line: 461
      },
      "60": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 485,
            column: 12
          },
          end: {
            line: 486,
            column: 89
          }
        }, {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 488,
            column: 107
          }
        }, {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 490,
            column: 49
          }
        }, {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 492,
            column: 45
          }
        }, {
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 494,
            column: 109
          }
        }, {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 496,
            column: 50
          }
        }, {
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 498,
            column: 90
          }
        }, {
          start: {
            line: 499,
            column: 12
          },
          end: {
            line: 500,
            column: 46
          }
        }, {
          start: {
            line: 501,
            column: 12
          },
          end: {
            line: 502,
            column: 51
          }
        }],
        line: 484
      },
      "61": {
        loc: {
          start: {
            line: 486,
            column: 23
          },
          end: {
            line: 486,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 486,
            column: 29
          },
          end: {
            line: 486,
            column: 63
          }
        }, {
          start: {
            line: 486,
            column: 66
          },
          end: {
            line: 486,
            column: 88
          }
        }],
        line: 486
      },
      "62": {
        loc: {
          start: {
            line: 488,
            column: 23
          },
          end: {
            line: 488,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 488,
            column: 29
          },
          end: {
            line: 488,
            column: 78
          }
        }, {
          start: {
            line: 488,
            column: 81
          },
          end: {
            line: 488,
            column: 106
          }
        }],
        line: 488
      },
      "63": {
        loc: {
          start: {
            line: 494,
            column: 23
          },
          end: {
            line: 494,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 494,
            column: 29
          },
          end: {
            line: 494,
            column: 79
          }
        }, {
          start: {
            line: 494,
            column: 82
          },
          end: {
            line: 494,
            column: 108
          }
        }],
        line: 494
      },
      "64": {
        loc: {
          start: {
            line: 498,
            column: 23
          },
          end: {
            line: 498,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 498,
            column: 29
          },
          end: {
            line: 498,
            column: 64
          }
        }, {
          start: {
            line: 498,
            column: 67
          },
          end: {
            line: 498,
            column: 89
          }
        }],
        line: 498
      },
      "65": {
        loc: {
          start: {
            line: 546,
            column: 44
          },
          end: {
            line: 546,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 546,
            column: 44
          },
          end: {
            line: 546,
            column: 70
          }
        }, {
          start: {
            line: 546,
            column: 74
          },
          end: {
            line: 546,
            column: 75
          }
        }],
        line: 546
      },
      "66": {
        loc: {
          start: {
            line: 554,
            column: 34
          },
          end: {
            line: 554,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 554,
            column: 46
          },
          end: {
            line: 554,
            column: 68
          }
        }, {
          start: {
            line: 554,
            column: 71
          },
          end: {
            line: 554,
            column: 72
          }
        }],
        line: 554
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "59": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "60": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/TablebaseService.ts"],
      sourcesContent: ["/**\n * Optimized Tablebase Service - Single API Call Architecture\n *\n * @remarks\n * This service uses the Lichess Tablebase API's \"moves\" field to get all move\n * evaluations in a single API call, instead of making N+1 calls.\n *\n * Key improvements:\n * - 1 API call instead of 20-40 for getTopMoves\n * - Caches complete tablebase entries including moves\n * - Correct WDL perspective handling\n * - No chess.js dependency for move generation\n * - FEN normalization for improved cache hit rate\n *\n * Important limitations:\n * - DTM (Distance to Mate) values are only available for positions with \u22645 pieces\n * - Positions with 6-7 pieces only have DTZ (Distance to Zeroing) values\n * - Rate limiting applies (~130 rapid requests trigger limits)\n */\n\nimport { validateAndSanitizeFen } from \"../utils/fenValidator\";\nimport { getLogger } from \"../services/logging\";\nimport { APP_CONFIG } from \"@/config/constants\";\nimport { z } from \"zod\";\nimport { LichessTablebaseResponseSchema } from \"../types/tablebaseSchemas\";\nimport type {\n  LichessTablebaseResponse,\n  TablebaseEntry,\n  TablebaseCategory,\n  TablebaseCacheEntry,\n  TablebaseMoveInternal,\n  TablebaseMove,\n  TablebaseResult,\n  TablebaseEvaluation,\n  TablebaseMovesResult,\n} from \"../types/tablebase\";\n\n// Re-export types for backward compatibility\nexport type {\n  TablebaseMove,\n  TablebaseResult,\n  TablebaseEvaluation,\n  TablebaseMovesResult,\n};\n\nconst logger = getLogger().setContext(\"TablebaseService\");\n\nclass TablebaseService {\n  private cache = new Map<string, TablebaseCacheEntry>();\n  private readonly maxPieces = 7; // Lichess uses 7-piece Syzygy tablebases\n  private readonly cacheTtl = 300000; // 5 minutes\n  private pendingRequests = new Map<string, Promise<TablebaseEntry | null>>();\n\n  // Metrics for monitoring\n  private metrics = {\n    cacheHits: 0,\n    cacheMisses: 0,\n    apiCalls: 0,\n    apiErrors: new Map<number, number>(),\n    requestsDeduplicated: 0,\n\n    recordCacheHit() {\n      this.cacheHits++;\n    },\n    recordCacheMiss() {\n      this.cacheMisses++;\n    },\n    recordApiCall() {\n      this.apiCalls++;\n    },\n    recordApiError(status: number) {\n      this.apiErrors.set(status, (this.apiErrors.get(status) || 0) + 1);\n    },\n    recordDeduplication() {\n      this.requestsDeduplicated++;\n    },\n\n    getMetrics() {\n      const total = this.cacheHits + this.cacheMisses;\n      return {\n        cacheHitRate: total > 0 ? this.cacheHits / total : 0,\n        totalApiCalls: this.apiCalls,\n        errorBreakdown: Object.fromEntries(this.apiErrors),\n        dedupedRequests: this.requestsDeduplicated,\n      };\n    },\n  };\n\n  /**\n   * Get tablebase evaluation for a position\n   * @param {string} fen - Position in FEN notation\n   * @returns {Promise<TablebaseEvaluation>} Evaluation result\n   *\n   * @example\n   * const eval = await tablebaseService.getEvaluation(fen);\n   * if (eval.isAvailable) {\n   *   logger.info(`Position is ${eval.result.category}`);\n   * }\n   */\n  async getEvaluation(fen: string): Promise<TablebaseEvaluation> {\n    try {\n      const entry = await this._getOrFetchTablebaseEntry(fen);\n\n      if (!entry) {\n        return { isAvailable: false };\n      }\n\n      return {\n        isAvailable: true,\n        result: {\n          wdl: entry.position.wdl,\n          dtz: entry.position.dtz,\n          dtm: entry.position.dtm,\n          category: entry.position.category,\n          precise: entry.position.precise,\n          evaluation: entry.position.evaluation,\n        },\n      };\n    } catch (error) {\n      logger.error(\"Failed to get evaluation\", error as Error, { fen });\n      return {\n        isAvailable: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  /**\n   * Get top moves from tablebase\n   * @param {string} fen - Position in FEN notation\n   * @param {number} limit - Maximum number of moves to return\n   * @returns {Promise<TablebaseMovesResult>} Top moves with evaluations\n   *\n   * @remarks\n   * This now makes only ONE API call and returns moves from the cached entry.\n   * The Lichess API already provides all moves sorted by quality.\n   *\n   * @example\n   * const moves = await tablebaseService.getTopMoves(fen, 5);\n   * if (moves.isAvailable) {\n   *   logger.info(`Best move: ${moves.moves[0].san}`);\n   * }\n   */\n  async getTopMoves(\n    fen: string,\n    limit: number = 3,\n  ): Promise<TablebaseMovesResult> {\n    try {\n      const entry = await this._getOrFetchTablebaseEntry(fen);\n\n      if (!entry || !entry.moves.length) {\n        return {\n          isAvailable: false,\n          error: \"No moves available for this position\",\n        };\n      }\n\n      // Sort moves by quality (WDL value, then DTZ)\n      // Higher WDL = better for the player, then lower DTZ = faster to goal\n      const sortedMoves = [...entry.moves].sort((a, b) => {\n        // Primary sort: by WDL (higher is better)\n        if (a.wdl !== b.wdl) {\n          return b.wdl - a.wdl;\n        }\n\n        // Secondary sort: for moves that are \"wins\" from opponent's perspective after our move,\n        // we want to choose the move that gives the opponent the LONGEST path to win (best defense)\n        if (a.wdl > 0) {\n          // These are \"winning\" positions for the opponent after our move\n          // For optimal defense: prefer moves that give opponent HIGHER DTM (slower win for them)\n          const aDtx = a.dtm ?? a.dtz ?? 0;\n          const bDtx = b.dtm ?? b.dtz ?? 0;\n          return Math.abs(aDtx) - Math.abs(bDtx); // FIXED: Lower DTM first for faster wins\n        } else if (a.wdl < 0) {\n          // Losing - prefer slower loss (larger absolute DTM value)\n          const aDtx = a.dtm ?? a.dtz ?? 0;\n          const bDtx = b.dtm ?? b.dtz ?? 0;\n          return Math.abs(bDtx) - Math.abs(aDtx);\n        }\n\n        // Draw - prefer maintaining draw (DTZ doesn't matter much)\n        return 0;\n      });\n\n      // Take only the best moves (same WDL as the absolute best)\n      const bestWdl = sortedMoves[0]?.wdl ?? 0;\n      const bestMoves = sortedMoves.filter((move) => move.wdl === bestWdl);\n\n      // Return up to 'limit' of the best moves\n      const topInternalMoves = bestMoves.slice(0, limit);\n\n      // Convert internal moves to external format (without zeroing field)\n      const topMoves: TablebaseMove[] = topInternalMoves.map((move) => ({\n        uci: move.uci,\n        san: move.san,\n        wdl: move.wdl,\n        dtz: move.dtz,\n        dtm: move.dtm,\n        category: move.category,\n      }));\n\n      // ENHANCED DEBUG LOGGING\n      logger.info(\"TablebaseService.getTopMoves DETAILED OUTPUT\", {\n        fen,\n        requestedLimit: limit,\n        totalMovesFromAPI: entry.moves.length,\n        bestWdl,\n        movesWithBestWdl: bestMoves.length,\n        returnedMoves: topMoves.length,\n        returnedMoveDetails: topMoves.map((m) => ({\n          san: m.san,\n          wdl: m.wdl,\n          dtm: m.dtm,\n          category: m.category,\n        })),\n        sortingApplied:\n          bestWdl < 0\n            ? \"Defensive (highest DTM first)\"\n            : bestWdl > 0\n              ? \"Offensive (lowest DTM first)\"\n              : \"Draw\",\n      });\n\n      return {\n        isAvailable: true,\n        moves: topMoves,\n      };\n    } catch (error) {\n      logger.error(\"Failed to get top moves\", error as Error, { fen });\n      return {\n        isAvailable: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  /**\n   * Normalize FEN for tablebase lookup\n   * @private\n   * @param {string} fen - Full FEN string\n   * @returns {string} Normalized FEN (first 4 fields only)\n   *\n   * @remarks\n   * Tablebase only cares about:\n   * 1. Piece placement\n   * 2. Side to move\n   * 3. Castling rights\n   * 4. En passant square\n   *\n   * Halfmove clock and fullmove number are irrelevant for tablebase lookup\n   */\n  private _normalizeFen(fen: string): string {\n    return fen.split(\" \").slice(0, 4).join(\" \");\n  }\n\n  /**\n   * Core method to fetch or retrieve cached tablebase data\n   * @private\n   * @param {string} fen - Position to look up\n   * @returns {Promise<TablebaseEntry | null>} Complete tablebase data or null\n   *\n   * @remarks\n   * This method:\n   * 1. Validates and normalizes the FEN\n   * 2. Checks the cache\n   * 3. Makes ONE API call if needed\n   * 4. Transforms the response to our internal format\n   * 5. Caches the complete entry including all moves\n   */\n  private async _getOrFetchTablebaseEntry(\n    fen: string,\n  ): Promise<TablebaseEntry | null> {\n    // Validate FEN\n    const validation = validateAndSanitizeFen(fen);\n    if (!validation.isValid) {\n      throw new Error(`Invalid FEN: ${validation.errors.join(\", \")}`);\n    }\n    const sanitizedFen = validation.sanitized;\n    const normalizedFen = this._normalizeFen(sanitizedFen);\n\n    // Check piece count\n    const pieceCount = this._countPieces(sanitizedFen);\n    if (pieceCount > this.maxPieces) {\n      logger.debug(\"Too many pieces for tablebase\", {\n        fen: sanitizedFen,\n        pieceCount,\n      });\n      return null;\n    }\n\n    // Check cache with normalized FEN\n    const cached = this.cache.get(normalizedFen);\n    if (cached && cached.expiry > Date.now()) {\n      logger.debug(\"Cache hit for tablebase entry\", { fen: normalizedFen });\n      this.metrics.recordCacheHit();\n      return cached.entry;\n    }\n    this.metrics.recordCacheMiss();\n\n    // Check if request already in flight (request deduplication)\n    const pending = this.pendingRequests.get(normalizedFen);\n    if (pending) {\n      logger.debug(\"Request already in flight, waiting\", {\n        fen: normalizedFen,\n      });\n      this.metrics.recordDeduplication();\n      return pending;\n    }\n\n    // Create new request with proper cleanup on both success and failure\n    const request = this._fetchAndTransform(sanitizedFen, normalizedFen);\n\n    // Store the promise with cleanup handler\n    const promiseWithCleanup = request.finally(() => {\n      // Remove from pending requests on both success and failure\n      this.pendingRequests.delete(normalizedFen);\n    });\n\n    this.pendingRequests.set(normalizedFen, promiseWithCleanup);\n    return promiseWithCleanup;\n  }\n\n  /**\n   * Fetch from API and transform response\n   * @private\n   * @param {string} fen - Original sanitized FEN for API call\n   * @param {string} normalizedFen - Normalized FEN for caching\n   */\n  private async _fetchAndTransform(\n    fen: string,\n    normalizedFen: string,\n  ): Promise<TablebaseEntry | null> {\n    const MAX_RETRIES = 3;\n    this.metrics.recordApiCall();\n\n    for (let attempt = 1; attempt <= MAX_RETRIES; attempt++) {\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 5000);\n\n        // Always request moves to get complete tablebase entry\n        const response = await fetch(\n          `${APP_CONFIG.TABLEBASE_API_URL}/standard?fen=${encodeURIComponent(fen)}&moves=20`,\n          { signal: controller.signal },\n        );\n\n        clearTimeout(timeoutId);\n\n        if (!response.ok) {\n          this.metrics.recordApiError(response.status);\n\n          if (response.status === 404) {\n            // Position not in tablebase - cache this to avoid repeated queries\n            logger.info(\"Position not in tablebase, caching null\", {\n              fen: normalizedFen,\n            });\n            this._cacheEntry(normalizedFen, null);\n            return null;\n          }\n\n          // Rate limiting - retry with exponential backoff\n          if (response.status === 429) {\n            const delay = Math.min(\n              1000 * Math.pow(2, attempt) + Math.random() * 1000,\n              10000,\n            );\n            logger.warn(`Rate limited, retrying in ${delay}ms`, {\n              attempt,\n              delay,\n            });\n            await new Promise((resolve) => setTimeout(resolve, delay));\n            continue;\n          }\n\n          // Don't retry other client errors\n          if (response.status >= 400 && response.status < 500) {\n            throw new Error(`Client error: ${response.status}`);\n          }\n\n          throw new Error(`API error: ${response.status}`);\n        }\n\n        const responseData = await response.json();\n\n        // Validate the API response structure\n        let validatedData: LichessTablebaseResponse;\n        try {\n          validatedData = LichessTablebaseResponseSchema.parse(responseData);\n        } catch (error) {\n          if (error instanceof z.ZodError) {\n            logger.error(\"Malformed Lichess API response\", {\n              fen,\n              errors: error.issues,\n              received: responseData,\n            });\n            throw new Error(\"Malformed API response\");\n          }\n          throw error;\n        }\n\n        // Transform to our internal format\n        const entry = this._transformApiResponse(validatedData, fen);\n\n        // Cache the transformed entry with normalized FEN\n        this._cacheEntry(normalizedFen, entry);\n\n        logger.info(\"Successfully fetched and cached tablebase entry\", {\n          fen,\n          positionCategory: entry.position.category,\n          moveCount: entry.moves.length,\n        });\n\n        return entry;\n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : \"Unknown error\";\n        logger.warn(`Tablebase API attempt ${attempt}/${MAX_RETRIES} failed`, {\n          fen,\n          error: errorMessage,\n        });\n\n        // Don't retry client errors\n        if (\n          error instanceof Error &&\n          error.message.startsWith(\"Client error\")\n        ) {\n          throw error;\n        }\n\n        // Last attempt failed\n        if (attempt === MAX_RETRIES) {\n          logger.error(\"API call failed after max retries\", { error, fen });\n          if (error instanceof Error && error.name === \"AbortError\") {\n            throw new Error(`Request timeout after ${MAX_RETRIES} retries`);\n          }\n          throw new Error(\n            `Max retries (${MAX_RETRIES}) exceeded. Last error: ${errorMessage}`,\n          );\n        }\n\n        // Wait before retry with exponential backoff\n        await new Promise((resolve) => setTimeout(resolve, 250 * attempt));\n      }\n    }\n\n    // Should never reach here\n    throw new Error(\"Unexpected error in fetch loop\");\n  }\n\n  /**\n   * Transform Lichess API response to internal format\n   * @private\n   *\n   * @remarks\n   * Critical transformations:\n   * 1. Convert category strings to typed categories\n   * 2. Calculate WDL values from categories\n   * 3. Invert move evaluations to player-to-move perspective\n   * 4. Handle Black's perspective correctly\n   */\n  private _transformApiResponse(\n    api: LichessTablebaseResponse,\n    fen: string,\n  ): TablebaseEntry {\n    const isBlackToMove = fen.split(\" \")[1] === \"b\";\n\n    // Transform position evaluation\n    const positionCategory = api.category as TablebaseCategory;\n    let positionWdl = this._categoryToWdl(positionCategory);\n\n    // WDL is already from the perspective of the side to move\n    // No need to negate for Black positions - the API gives the result from the mover's perspective\n    // Handle -0 case to ensure it's just 0\n    if (positionWdl === -0) {\n      positionWdl = 0;\n    }\n\n    // Transform moves with correct perspective (moves array guaranteed by schema)\n    const moves: TablebaseMoveInternal[] = (api.moves || []).map((apiMove) => {\n      // API gives evaluation AFTER the move (from opponent's perspective)\n      // We need to invert it to get the evaluation FROM the mover's perspective\n      const moveCategory = this._invertCategory(\n        apiMove.category,\n      ) as TablebaseCategory;\n      let moveWdl = this._categoryToWdl(moveCategory);\n\n      // For Black, we need to negate WDL since it's from White's perspective\n      if (isBlackToMove) {\n        moveWdl = -moveWdl;\n      }\n\n      return {\n        uci: apiMove.uci,\n        san: apiMove.san,\n        category: moveCategory,\n        wdl: moveWdl,\n        dtz: apiMove.dtz,\n        dtm: apiMove.dtm,\n        zeroing: apiMove.zeroing || false,\n      };\n    });\n\n    return {\n      position: {\n        category: positionCategory,\n        wdl: positionWdl,\n        dtz: api.dtz,\n        dtm: api.dtm ?? null,\n        precise: api.precise_dtz !== undefined && api.precise_dtz !== null,\n        evaluation: this._getEvaluationText(positionCategory, api.dtz),\n      },\n      moves,\n      fen,\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Cache an entry with TTL\n   * @private\n   */\n  private _cacheEntry(fen: string, entry: TablebaseEntry | null): void {\n    this.cache.set(fen, {\n      entry,\n      expiry: Date.now() + this.cacheTtl,\n    });\n\n    // Clean up old entries if cache is getting large\n    if (this.cache.size > 200) {\n      const now = Date.now();\n      for (const [key, value] of this.cache.entries()) {\n        if (value.expiry < now) {\n          this.cache.delete(key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Convert category to WDL value\n   * @private\n   */\n  private _categoryToWdl(category: string): number {\n    switch (category) {\n      case \"win\":\n        return 2;\n      case \"cursed-win\":\n      case \"maybe-win\":\n        return 1;\n      case \"draw\":\n      case \"unknown\":\n        return 0;\n      case \"blessed-loss\":\n      case \"maybe-loss\":\n        return -1;\n      case \"loss\":\n        return -2;\n      default:\n        return 0;\n    }\n  }\n\n  /**\n   * Invert category for perspective change\n   * @private\n   */\n  private _invertCategory(category: string): string {\n    switch (category) {\n      case \"win\":\n        return \"loss\";\n      case \"loss\":\n        return \"win\";\n      case \"cursed-win\":\n        return \"blessed-loss\";\n      case \"blessed-loss\":\n        return \"cursed-win\";\n      case \"maybe-win\":\n        return \"maybe-loss\";\n      case \"maybe-loss\":\n        return \"maybe-win\";\n      case \"draw\":\n      case \"unknown\":\n      default:\n        return category;\n    }\n  }\n\n  /**\n   * Generate evaluation text in German\n   * @private\n   */\n  private _getEvaluationText(category: string, dtz?: number | null): string {\n    switch (category) {\n      case \"win\":\n        return dtz\n          ? `Gewinn in ${Math.abs(dtz)} Z\xFCgen`\n          : \"Theoretisch gewonnen\";\n      case \"cursed-win\":\n        return dtz\n          ? `Gewinn in ${Math.abs(dtz)} Z\xFCgen (50-Zug-Regel)`\n          : \"Gewinn mit 50-Zug-Regel\";\n      case \"maybe-win\":\n        return \"Wahrscheinlicher Gewinn\";\n      case \"draw\":\n        return \"Theoretisches Remis\";\n      case \"blessed-loss\":\n        return dtz\n          ? `Verlust in ${Math.abs(dtz)} Z\xFCgen (50-Zug-Regel)`\n          : \"Verlust mit 50-Zug-Regel\";\n      case \"maybe-loss\":\n        return \"Wahrscheinlicher Verlust\";\n      case \"loss\":\n        return dtz\n          ? `Verlust in ${Math.abs(dtz)} Z\xFCgen`\n          : \"Theoretisch verloren\";\n      case \"unknown\":\n        return \"Unbekannte Bewertung\";\n      default:\n        return \"Bewertung nicht verf\xFCgbar\";\n    }\n  }\n\n  /**\n   * Count pieces in FEN\n   * @private\n   */\n  private _countPieces(fen: string): number {\n    const piecesPart = fen.split(\" \")[0];\n    return piecesPart.replace(/[^a-zA-Z]/g, \"\").length;\n  }\n\n  /**\n   * Clear cache (for testing)\n   */\n  clearCache(): void {\n    this.cache.clear();\n    this.pendingRequests.clear();\n  }\n\n  /**\n   * Get service metrics for monitoring\n   * @returns {object} Current metrics\n   */\n  getMetrics() {\n    return this.metrics.getMetrics();\n  }\n}\n\n/**\n * Singleton instance of optimized TablebaseService\n *\n * @example\n * import { tablebaseService } from '@shared/services/TablebaseService';\n *\n * // Get position evaluation (1 API call)\n * const eval = await tablebaseService.getEvaluation(fen);\n *\n * // Get top moves (uses same API call, no additional requests!)\n * const moves = await tablebaseService.getTopMoves(fen, 5);\n */\nexport const tablebaseService = new TablebaseService();\n"],
      names: ["tablebaseService", "logger", "getLogger", "setContext", "TablebaseService", "getEvaluation", "fen", "entry", "_getOrFetchTablebaseEntry", "isAvailable", "result", "wdl", "position", "dtz", "dtm", "category", "precise", "evaluation", "error", "Error", "message", "getTopMoves", "limit", "sortedMoves", "moves", "length", "sort", "a", "b", "aDtx", "bDtx", "Math", "abs", "bestWdl", "bestMoves", "filter", "move", "topInternalMoves", "slice", "topMoves", "map", "uci", "san", "info", "requestedLimit", "totalMovesFromAPI", "movesWithBestWdl", "returnedMoves", "returnedMoveDetails", "m", "sortingApplied", "_normalizeFen", "split", "join", "validation", "validateAndSanitizeFen", "isValid", "errors", "sanitizedFen", "sanitized", "normalizedFen", "pieceCount", "_countPieces", "maxPieces", "debug", "cached", "cache", "get", "expiry", "Date", "now", "metrics", "recordCacheHit", "recordCacheMiss", "pending", "pendingRequests", "recordDeduplication", "request", "_fetchAndTransform", "promiseWithCleanup", "finally", "delete", "set", "MAX_RETRIES", "recordApiCall", "attempt", "controller", "AbortController", "timeoutId", "setTimeout", "abort", "response", "fetch", "APP_CONFIG", "TABLEBASE_API_URL", "encodeURIComponent", "signal", "clearTimeout", "ok", "recordApiError", "status", "_cacheEntry", "delay", "min", "pow", "random", "warn", "Promise", "resolve", "responseData", "json", "validatedData", "LichessTablebaseResponseSchema", "parse", "z", "ZodError", "issues", "received", "_transformApiResponse", "positionCategory", "moveCount", "errorMessage", "startsWith", "name", "api", "isBlackToMove", "positionWdl", "_categoryToWdl", "apiMove", "moveCategory", "_invertCategory", "moveWdl", "zeroing", "precise_dtz", "undefined", "_getEvaluationText", "timestamp", "cacheTtl", "size", "key", "value", "entries", "piecesPart", "replace", "clearCache", "clear", "getMetrics", "Map", "cacheHits", "cacheMisses", "apiCalls", "apiErrors", "requestsDeduplicated", "total", "cacheHitRate", "totalApiCalls", "errorBreakdown", "Object", "fromEntries", "dedupedRequests"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "049452d00726a46705557541982066d195ba7bc8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17mw7yy3a9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17mw7yy3a9();
cov_17mw7yy3a9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17mw7yy3a9().s[1]++;
Object.defineProperty(exports, "tablebaseService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[0]++;
    cov_17mw7yy3a9().s[2]++;
    return tablebaseService;
  }
});
const _fenValidator =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[3]++, require("../utils/fenValidator"));
const _logging =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[4]++, require("./logging"));
const _constants =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[5]++, require("../../config/constants"));
const _zod =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[6]++, require("zod"));
const _tablebaseSchemas =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[7]++, require("../types/tablebaseSchemas"));
function _define_property(obj, key, value) {
  /* istanbul ignore next */
  cov_17mw7yy3a9().f[1]++;
  cov_17mw7yy3a9().s[8]++;
  if (key in obj) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().b[0][0]++;
    cov_17mw7yy3a9().s[9]++;
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    /* istanbul ignore next */
    cov_17mw7yy3a9().b[0][1]++;
    cov_17mw7yy3a9().s[10]++;
    obj[key] = value;
  }
  /* istanbul ignore next */
  cov_17mw7yy3a9().s[11]++;
  return obj;
}
const logger =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[12]++, (0, _logging.getLogger)().setContext("TablebaseService"));
class TablebaseService {
  /**
  * Get tablebase evaluation for a position
  * @param {string} fen - Position in FEN notation
  * @returns {Promise<TablebaseEvaluation>} Evaluation result
  *
  * @example
  * const eval = await tablebaseService.getEvaluation(fen);
  * if (eval.isAvailable) {
  *   logger.info(`Position is ${eval.result.category}`);
  * }
  */
  async getEvaluation(fen) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[2]++;
    cov_17mw7yy3a9().s[13]++;
    try {
      const entry =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[14]++, await this._getOrFetchTablebaseEntry(fen));
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[15]++;
      if (!entry) {
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[1][0]++;
        cov_17mw7yy3a9().s[16]++;
        return {
          isAvailable: false
        };
      } else
      /* istanbul ignore next */
      {
        cov_17mw7yy3a9().b[1][1]++;
      }
      cov_17mw7yy3a9().s[17]++;
      return {
        isAvailable: true,
        result: {
          wdl: entry.position.wdl,
          dtz: entry.position.dtz,
          dtm: entry.position.dtm,
          category: entry.position.category,
          precise: entry.position.precise,
          evaluation: entry.position.evaluation
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[18]++;
      logger.error("Failed to get evaluation", error, {
        fen
      });
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[19]++;
      return {
        isAvailable: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[2][0]++, error.message) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[2][1]++, "Unknown error")
      };
    }
  }
  /**
  * Get top moves from tablebase
  * @param {string} fen - Position in FEN notation
  * @param {number} limit - Maximum number of moves to return
  * @returns {Promise<TablebaseMovesResult>} Top moves with evaluations
  *
  * @remarks
  * This now makes only ONE API call and returns moves from the cached entry.
  * The Lichess API already provides all moves sorted by quality.
  *
  * @example
  * const moves = await tablebaseService.getTopMoves(fen, 5);
  * if (moves.isAvailable) {
  *   logger.info(`Best move: ${moves.moves[0].san}`);
  * }
  */
  async getTopMoves(fen, limit =
  /* istanbul ignore next */
  (cov_17mw7yy3a9().b[3][0]++, 3)) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[3]++;
    cov_17mw7yy3a9().s[20]++;
    try {
      var _sortedMoves_;
      const entry =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[21]++, await this._getOrFetchTablebaseEntry(fen));
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[5][0]++, !entry) ||
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[5][1]++, !entry.moves.length)) {
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[4][0]++;
        cov_17mw7yy3a9().s[23]++;
        return {
          isAvailable: false,
          error: "No moves available for this position"
        };
      } else
      /* istanbul ignore next */
      {
        cov_17mw7yy3a9().b[4][1]++;
      }
      // Sort moves by quality (WDL value, then DTZ)
      // Higher WDL = better for the player, then lower DTZ = faster to goal
      const sortedMoves =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[24]++, [...entry.moves].sort((a, b) => {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[4]++;
        cov_17mw7yy3a9().s[25]++;
        // Primary sort: by WDL (higher is better)
        if (a.wdl !== b.wdl) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[6][0]++;
          cov_17mw7yy3a9().s[26]++;
          return b.wdl - a.wdl;
        } else
        /* istanbul ignore next */
        {
          cov_17mw7yy3a9().b[6][1]++;
        }
        // Secondary sort: for moves that are "wins" from opponent's perspective after our move,
        // we want to choose the move that gives the opponent the LONGEST path to win (best defense)
        cov_17mw7yy3a9().s[27]++;
        if (a.wdl > 0) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[7][0]++;
          var _a_dtm, _ref;
          // These are "winning" positions for the opponent after our move
          // For optimal defense: prefer moves that give opponent HIGHER DTM (slower win for them)
          const aDtx =
          /* istanbul ignore next */
          (cov_17mw7yy3a9().s[28]++,
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[9][0]++, (_ref =
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[11][0]++, (_a_dtm = a.dtm) !== null) &&
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[11][1]++, _a_dtm !== void 0) ?
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[10][0]++, _a_dtm) :
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[10][1]++, a.dtz)) !== null) &&
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[9][1]++, _ref !== void 0) ?
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[8][0]++, _ref) :
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[8][1]++, 0));
          var _b_dtm, _ref1;
          const bDtx =
          /* istanbul ignore next */
          (cov_17mw7yy3a9().s[29]++,
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[13][0]++, (_ref1 =
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[15][0]++, (_b_dtm = b.dtm) !== null) &&
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[15][1]++, _b_dtm !== void 0) ?
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[14][0]++, _b_dtm) :
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[14][1]++, b.dtz)) !== null) &&
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[13][1]++, _ref1 !== void 0) ?
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[12][0]++, _ref1) :
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[12][1]++, 0));
          /* istanbul ignore next */
          cov_17mw7yy3a9().s[30]++;
          return Math.abs(aDtx) - Math.abs(bDtx); // FIXED: Lower DTM first for faster wins
        } else {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[7][1]++;
          cov_17mw7yy3a9().s[31]++;
          if (a.wdl < 0) {
            /* istanbul ignore next */
            cov_17mw7yy3a9().b[16][0]++;
            var _a_dtm1, _ref2;
            // Losing - prefer slower loss (larger absolute DTM value)
            const aDtx =
            /* istanbul ignore next */
            (cov_17mw7yy3a9().s[32]++,
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[18][0]++, (_ref2 =
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[20][0]++, (_a_dtm1 = a.dtm) !== null) &&
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[20][1]++, _a_dtm1 !== void 0) ?
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[19][0]++, _a_dtm1) :
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[19][1]++, a.dtz)) !== null) &&
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[18][1]++, _ref2 !== void 0) ?
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[17][0]++, _ref2) :
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[17][1]++, 0));
            var _b_dtm1, _ref3;
            const bDtx =
            /* istanbul ignore next */
            (cov_17mw7yy3a9().s[33]++,
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[22][0]++, (_ref3 =
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[24][0]++, (_b_dtm1 = b.dtm) !== null) &&
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[24][1]++, _b_dtm1 !== void 0) ?
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[23][0]++, _b_dtm1) :
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[23][1]++, b.dtz)) !== null) &&
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[22][1]++, _ref3 !== void 0) ?
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[21][0]++, _ref3) :
            /* istanbul ignore next */
            (cov_17mw7yy3a9().b[21][1]++, 0));
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[34]++;
            return Math.abs(bDtx) - Math.abs(aDtx);
          } else
          /* istanbul ignore next */
          {
            cov_17mw7yy3a9().b[16][1]++;
          }
        }
        // Draw - prefer maintaining draw (DTZ doesn't matter much)
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[35]++;
        return 0;
      }));
      var _sortedMoves__wdl;
      // Take only the best moves (same WDL as the absolute best)
      const bestWdl =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[36]++,
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[26][0]++, (_sortedMoves__wdl =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[28][0]++, (_sortedMoves_ = sortedMoves[0]) === null) ||
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[28][1]++, _sortedMoves_ === void 0) ?
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[27][0]++, void 0) :
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[27][1]++, _sortedMoves_.wdl)) !== null) &&
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[26][1]++, _sortedMoves__wdl !== void 0) ?
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[25][0]++, _sortedMoves__wdl) :
      /* istanbul ignore next */
      (cov_17mw7yy3a9().b[25][1]++, 0));
      const bestMoves =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[37]++, sortedMoves.filter(move => {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[5]++;
        cov_17mw7yy3a9().s[38]++;
        return move.wdl === bestWdl;
      }));
      // Return up to 'limit' of the best moves
      const topInternalMoves =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[39]++, bestMoves.slice(0, limit));
      // Convert internal moves to external format (without zeroing field)
      const topMoves =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[40]++, topInternalMoves.map(move => {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[6]++;
        cov_17mw7yy3a9().s[41]++;
        return {
          uci: move.uci,
          san: move.san,
          wdl: move.wdl,
          dtz: move.dtz,
          dtm: move.dtm,
          category: move.category
        };
      }));
      // ENHANCED DEBUG LOGGING
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[42]++;
      logger.info("TablebaseService.getTopMoves DETAILED OUTPUT", {
        fen,
        requestedLimit: limit,
        totalMovesFromAPI: entry.moves.length,
        bestWdl,
        movesWithBestWdl: bestMoves.length,
        returnedMoves: topMoves.length,
        returnedMoveDetails: topMoves.map(m => {
          /* istanbul ignore next */
          cov_17mw7yy3a9().f[7]++;
          cov_17mw7yy3a9().s[43]++;
          return {
            san: m.san,
            wdl: m.wdl,
            dtm: m.dtm,
            category: m.category
          };
        }),
        sortingApplied: bestWdl < 0 ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[29][0]++, "Defensive (highest DTM first)") :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[29][1]++, bestWdl > 0 ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[30][0]++, "Offensive (lowest DTM first)") :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[30][1]++, "Draw"))
      });
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[44]++;
      return {
        isAvailable: true,
        moves: topMoves
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[45]++;
      logger.error("Failed to get top moves", error, {
        fen
      });
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[46]++;
      return {
        isAvailable: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[31][0]++, error.message) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[31][1]++, "Unknown error")
      };
    }
  }
  /**
  * Normalize FEN for tablebase lookup
  * @private
  * @param {string} fen - Full FEN string
  * @returns {string} Normalized FEN (first 4 fields only)
  *
  * @remarks
  * Tablebase only cares about:
  * 1. Piece placement
  * 2. Side to move
  * 3. Castling rights
  * 4. En passant square
  *
  * Halfmove clock and fullmove number are irrelevant for tablebase lookup
  */
  _normalizeFen(fen) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[8]++;
    cov_17mw7yy3a9().s[47]++;
    return fen.split(" ").slice(0, 4).join(" ");
  }
  /**
  * Core method to fetch or retrieve cached tablebase data
  * @private
  * @param {string} fen - Position to look up
  * @returns {Promise<TablebaseEntry | null>} Complete tablebase data or null
  *
  * @remarks
  * This method:
  * 1. Validates and normalizes the FEN
  * 2. Checks the cache
  * 3. Makes ONE API call if needed
  * 4. Transforms the response to our internal format
  * 5. Caches the complete entry including all moves
  */
  async _getOrFetchTablebaseEntry(fen) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[9]++;
    // Validate FEN
    const validation =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[48]++, (0, _fenValidator.validateAndSanitizeFen)(fen));
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[49]++;
    if (!validation.isValid) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().b[32][0]++;
      cov_17mw7yy3a9().s[50]++;
      throw new Error(`Invalid FEN: ${validation.errors.join(", ")}`);
    } else
    /* istanbul ignore next */
    {
      cov_17mw7yy3a9().b[32][1]++;
    }
    const sanitizedFen =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[51]++, validation.sanitized);
    const normalizedFen =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[52]++, this._normalizeFen(sanitizedFen));
    // Check piece count
    const pieceCount =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[53]++, this._countPieces(sanitizedFen));
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[54]++;
    if (pieceCount > this.maxPieces) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().b[33][0]++;
      cov_17mw7yy3a9().s[55]++;
      logger.debug("Too many pieces for tablebase", {
        fen: sanitizedFen,
        pieceCount
      });
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[56]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_17mw7yy3a9().b[33][1]++;
    }
    // Check cache with normalized FEN
    const cached =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[57]++, this.cache.get(normalizedFen));
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_17mw7yy3a9().b[35][0]++, cached) &&
    /* istanbul ignore next */
    (cov_17mw7yy3a9().b[35][1]++, cached.expiry > Date.now())) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().b[34][0]++;
      cov_17mw7yy3a9().s[59]++;
      logger.debug("Cache hit for tablebase entry", {
        fen: normalizedFen
      });
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[60]++;
      this.metrics.recordCacheHit();
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[61]++;
      return cached.entry;
    } else
    /* istanbul ignore next */
    {
      cov_17mw7yy3a9().b[34][1]++;
    }
    cov_17mw7yy3a9().s[62]++;
    this.metrics.recordCacheMiss();
    // Check if request already in flight (request deduplication)
    const pending =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[63]++, this.pendingRequests.get(normalizedFen));
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[64]++;
    if (pending) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().b[36][0]++;
      cov_17mw7yy3a9().s[65]++;
      logger.debug("Request already in flight, waiting", {
        fen: normalizedFen
      });
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[66]++;
      this.metrics.recordDeduplication();
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[67]++;
      return pending;
    } else
    /* istanbul ignore next */
    {
      cov_17mw7yy3a9().b[36][1]++;
    }
    // Create new request with proper cleanup on both success and failure
    const request =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[68]++, this._fetchAndTransform(sanitizedFen, normalizedFen));
    // Store the promise with cleanup handler
    const promiseWithCleanup =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[69]++, request.finally(() => {
      /* istanbul ignore next */
      cov_17mw7yy3a9().f[10]++;
      cov_17mw7yy3a9().s[70]++;
      // Remove from pending requests on both success and failure
      this.pendingRequests.delete(normalizedFen);
    }));
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[71]++;
    this.pendingRequests.set(normalizedFen, promiseWithCleanup);
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[72]++;
    return promiseWithCleanup;
  }
  /**
  * Fetch from API and transform response
  * @private
  * @param {string} fen - Original sanitized FEN for API call
  * @param {string} normalizedFen - Normalized FEN for caching
  */
  async _fetchAndTransform(fen, normalizedFen) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[11]++;
    const MAX_RETRIES =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[73]++, 3);
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[74]++;
    this.metrics.recordApiCall();
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[75]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[76]++, 1); attempt <= MAX_RETRIES; attempt++) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[77]++;
      try {
        const controller =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[78]++, new AbortController());
        const timeoutId =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[79]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_17mw7yy3a9().f[12]++;
          cov_17mw7yy3a9().s[80]++;
          return controller.abort();
        }, 5000));
        // Always request moves to get complete tablebase entry
        const response =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[81]++, await fetch(`${_constants.APP_CONFIG.TABLEBASE_API_URL}/standard?fen=${encodeURIComponent(fen)}&moves=20`, {
          signal: controller.signal
        }));
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[82]++;
        clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[83]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[37][0]++;
          cov_17mw7yy3a9().s[84]++;
          this.metrics.recordApiError(response.status);
          /* istanbul ignore next */
          cov_17mw7yy3a9().s[85]++;
          if (response.status === 404) {
            /* istanbul ignore next */
            cov_17mw7yy3a9().b[38][0]++;
            cov_17mw7yy3a9().s[86]++;
            // Position not in tablebase - cache this to avoid repeated queries
            logger.info("Position not in tablebase, caching null", {
              fen: normalizedFen
            });
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[87]++;
            this._cacheEntry(normalizedFen, null);
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[88]++;
            return null;
          } else
          /* istanbul ignore next */
          {
            cov_17mw7yy3a9().b[38][1]++;
          }
          // Rate limiting - retry with exponential backoff
          cov_17mw7yy3a9().s[89]++;
          if (response.status === 429) {
            /* istanbul ignore next */
            cov_17mw7yy3a9().b[39][0]++;
            const delay =
            /* istanbul ignore next */
            (cov_17mw7yy3a9().s[90]++, Math.min(1000 * Math.pow(2, attempt) + Math.random() * 1000, 10000));
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[91]++;
            logger.warn(`Rate limited, retrying in ${delay}ms`, {
              attempt,
              delay
            });
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[92]++;
            await new Promise(resolve => {
              /* istanbul ignore next */
              cov_17mw7yy3a9().f[13]++;
              cov_17mw7yy3a9().s[93]++;
              return setTimeout(resolve, delay);
            });
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[94]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_17mw7yy3a9().b[39][1]++;
          }
          // Don't retry other client errors
          cov_17mw7yy3a9().s[95]++;
          if (
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[41][0]++, response.status >= 400) &&
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[41][1]++, response.status < 500)) {
            /* istanbul ignore next */
            cov_17mw7yy3a9().b[40][0]++;
            cov_17mw7yy3a9().s[96]++;
            throw new Error(`Client error: ${response.status}`);
          } else
          /* istanbul ignore next */
          {
            cov_17mw7yy3a9().b[40][1]++;
          }
          cov_17mw7yy3a9().s[97]++;
          throw new Error(`API error: ${response.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_17mw7yy3a9().b[37][1]++;
        }
        const responseData =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[98]++, await response.json());
        // Validate the API response structure
        let validatedData;
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[99]++;
        try {
          /* istanbul ignore next */
          cov_17mw7yy3a9().s[100]++;
          validatedData = _tablebaseSchemas.LichessTablebaseResponseSchema.parse(responseData);
        } catch (error) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().s[101]++;
          if (error instanceof _zod.z.ZodError) {
            /* istanbul ignore next */
            cov_17mw7yy3a9().b[42][0]++;
            cov_17mw7yy3a9().s[102]++;
            logger.error("Malformed Lichess API response", {
              fen,
              errors: error.issues,
              received: responseData
            });
            /* istanbul ignore next */
            cov_17mw7yy3a9().s[103]++;
            throw new Error("Malformed API response");
          } else
          /* istanbul ignore next */
          {
            cov_17mw7yy3a9().b[42][1]++;
          }
          cov_17mw7yy3a9().s[104]++;
          throw error;
        }
        // Transform to our internal format
        const entry =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[105]++, this._transformApiResponse(validatedData, fen));
        // Cache the transformed entry with normalized FEN
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[106]++;
        this._cacheEntry(normalizedFen, entry);
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[107]++;
        logger.info("Successfully fetched and cached tablebase entry", {
          fen,
          positionCategory: entry.position.category,
          moveCount: entry.moves.length
        });
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[108]++;
        return entry;
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[109]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[43][0]++, error.message) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[43][1]++, "Unknown error"));
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[110]++;
        logger.warn(`Tablebase API attempt ${attempt}/${MAX_RETRIES} failed`, {
          fen,
          error: errorMessage
        });
        // Don't retry client errors
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[111]++;
        if (
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[45][0]++, error instanceof Error) &&
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[45][1]++, error.message.startsWith("Client error"))) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[44][0]++;
          cov_17mw7yy3a9().s[112]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_17mw7yy3a9().b[44][1]++;
        }
        // Last attempt failed
        cov_17mw7yy3a9().s[113]++;
        if (attempt === MAX_RETRIES) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[46][0]++;
          cov_17mw7yy3a9().s[114]++;
          logger.error("API call failed after max retries", {
            error,
            fen
          });
          /* istanbul ignore next */
          cov_17mw7yy3a9().s[115]++;
          if (
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[48][0]++, error instanceof Error) &&
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[48][1]++, error.name === "AbortError")) {
            /* istanbul ignore next */
            cov_17mw7yy3a9().b[47][0]++;
            cov_17mw7yy3a9().s[116]++;
            throw new Error(`Request timeout after ${MAX_RETRIES} retries`);
          } else
          /* istanbul ignore next */
          {
            cov_17mw7yy3a9().b[47][1]++;
          }
          cov_17mw7yy3a9().s[117]++;
          throw new Error(`Max retries (${MAX_RETRIES}) exceeded. Last error: ${errorMessage}`);
        } else
        /* istanbul ignore next */
        {
          cov_17mw7yy3a9().b[46][1]++;
        }
        // Wait before retry with exponential backoff
        cov_17mw7yy3a9().s[118]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_17mw7yy3a9().f[14]++;
          cov_17mw7yy3a9().s[119]++;
          return setTimeout(resolve, 250 * attempt);
        });
      }
    }
    // Should never reach here
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[120]++;
    throw new Error("Unexpected error in fetch loop");
  }
  /**
  * Transform Lichess API response to internal format
  * @private
  *
  * @remarks
  * Critical transformations:
  * 1. Convert category strings to typed categories
  * 2. Calculate WDL values from categories
  * 3. Invert move evaluations to player-to-move perspective
  * 4. Handle Black's perspective correctly
  */
  _transformApiResponse(api, fen) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[15]++;
    const isBlackToMove =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[121]++, fen.split(" ")[1] === "b");
    // Transform position evaluation
    const positionCategory =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[122]++, api.category);
    let positionWdl =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[123]++, this._categoryToWdl(positionCategory));
    // WDL is already from the perspective of the side to move
    // No need to negate for Black positions - the API gives the result from the mover's perspective
    // Handle -0 case to ensure it's just 0
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[124]++;
    if (positionWdl === -0) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().b[49][0]++;
      cov_17mw7yy3a9().s[125]++;
      positionWdl = 0;
    } else
    /* istanbul ignore next */
    {
      cov_17mw7yy3a9().b[49][1]++;
    }
    // Transform moves with correct perspective (moves array guaranteed by schema)
    const moves =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[126]++, (
    /* istanbul ignore next */
    (cov_17mw7yy3a9().b[50][0]++, api.moves) ||
    /* istanbul ignore next */
    (cov_17mw7yy3a9().b[50][1]++, [])).map(apiMove => {
      /* istanbul ignore next */
      cov_17mw7yy3a9().f[16]++;
      // API gives evaluation AFTER the move (from opponent's perspective)
      // We need to invert it to get the evaluation FROM the mover's perspective
      const moveCategory =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[127]++, this._invertCategory(apiMove.category));
      let moveWdl =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[128]++, this._categoryToWdl(moveCategory));
      // For Black, we need to negate WDL since it's from White's perspective
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[129]++;
      if (isBlackToMove) {
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[51][0]++;
        cov_17mw7yy3a9().s[130]++;
        moveWdl = -moveWdl;
      } else
      /* istanbul ignore next */
      {
        cov_17mw7yy3a9().b[51][1]++;
      }
      cov_17mw7yy3a9().s[131]++;
      return {
        uci: apiMove.uci,
        san: apiMove.san,
        category: moveCategory,
        wdl: moveWdl,
        dtz: apiMove.dtz,
        dtm: apiMove.dtm,
        zeroing:
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[52][0]++, apiMove.zeroing) ||
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[52][1]++, false)
      };
    }));
    var _api_dtm;
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[132]++;
    return {
      position: {
        category: positionCategory,
        wdl: positionWdl,
        dtz: api.dtz,
        dtm:
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[54][0]++, (_api_dtm = api.dtm) !== null) &&
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[54][1]++, _api_dtm !== void 0) ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[53][0]++, _api_dtm) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[53][1]++, null),
        precise:
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[55][0]++, api.precise_dtz !== undefined) &&
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[55][1]++, api.precise_dtz !== null),
        evaluation: this._getEvaluationText(positionCategory, api.dtz)
      },
      moves,
      fen,
      timestamp: Date.now()
    };
  }
  /**
  * Cache an entry with TTL
  * @private
  */
  _cacheEntry(fen, entry) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[17]++;
    cov_17mw7yy3a9().s[133]++;
    this.cache.set(fen, {
      entry,
      expiry: Date.now() + this.cacheTtl
    });
    // Clean up old entries if cache is getting large
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[134]++;
    if (this.cache.size > 200) {
      /* istanbul ignore next */
      cov_17mw7yy3a9().b[56][0]++;
      const now =
      /* istanbul ignore next */
      (cov_17mw7yy3a9().s[135]++, Date.now());
      /* istanbul ignore next */
      cov_17mw7yy3a9().s[136]++;
      for (const [key, value] of this.cache.entries()) {
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[137]++;
        if (value.expiry < now) {
          /* istanbul ignore next */
          cov_17mw7yy3a9().b[57][0]++;
          cov_17mw7yy3a9().s[138]++;
          this.cache.delete(key);
        } else
        /* istanbul ignore next */
        {
          cov_17mw7yy3a9().b[57][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_17mw7yy3a9().b[56][1]++;
    }
  }
  /**
  * Convert category to WDL value
  * @private
  */
  _categoryToWdl(category) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[18]++;
    cov_17mw7yy3a9().s[139]++;
    switch (category) {
      case "win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][0]++;
        cov_17mw7yy3a9().s[140]++;
        return 2;
      case "cursed-win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][1]++;
      case "maybe-win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][2]++;
        cov_17mw7yy3a9().s[141]++;
        return 1;
      case "draw":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][3]++;
      case "unknown":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][4]++;
        cov_17mw7yy3a9().s[142]++;
        return 0;
      case "blessed-loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][5]++;
      case "maybe-loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][6]++;
        cov_17mw7yy3a9().s[143]++;
        return -1;
      case "loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][7]++;
        cov_17mw7yy3a9().s[144]++;
        return -2;
      default:
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[58][8]++;
        cov_17mw7yy3a9().s[145]++;
        return 0;
    }
  }
  /**
  * Invert category for perspective change
  * @private
  */
  _invertCategory(category) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[19]++;
    cov_17mw7yy3a9().s[146]++;
    switch (category) {
      case "win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][0]++;
        cov_17mw7yy3a9().s[147]++;
        return "loss";
      case "loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][1]++;
        cov_17mw7yy3a9().s[148]++;
        return "win";
      case "cursed-win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][2]++;
        cov_17mw7yy3a9().s[149]++;
        return "blessed-loss";
      case "blessed-loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][3]++;
        cov_17mw7yy3a9().s[150]++;
        return "cursed-win";
      case "maybe-win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][4]++;
        cov_17mw7yy3a9().s[151]++;
        return "maybe-loss";
      case "maybe-loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][5]++;
        cov_17mw7yy3a9().s[152]++;
        return "maybe-win";
      case "draw":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][6]++;
      case "unknown":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][7]++;
      default:
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[59][8]++;
        cov_17mw7yy3a9().s[153]++;
        return category;
    }
  }
  /**
  * Generate evaluation text in German
  * @private
  */
  _getEvaluationText(category, dtz) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[20]++;
    cov_17mw7yy3a9().s[154]++;
    switch (category) {
      case "win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][0]++;
        cov_17mw7yy3a9().s[155]++;
        return dtz ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[61][0]++, `Gewinn in ${Math.abs(dtz)} ZÃ¼gen`) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[61][1]++, "Theoretisch gewonnen");
      case "cursed-win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][1]++;
        cov_17mw7yy3a9().s[156]++;
        return dtz ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[62][0]++, `Gewinn in ${Math.abs(dtz)} ZÃ¼gen (50-Zug-Regel)`) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[62][1]++, "Gewinn mit 50-Zug-Regel");
      case "maybe-win":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][2]++;
        cov_17mw7yy3a9().s[157]++;
        return "Wahrscheinlicher Gewinn";
      case "draw":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][3]++;
        cov_17mw7yy3a9().s[158]++;
        return "Theoretisches Remis";
      case "blessed-loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][4]++;
        cov_17mw7yy3a9().s[159]++;
        return dtz ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[63][0]++, `Verlust in ${Math.abs(dtz)} ZÃ¼gen (50-Zug-Regel)`) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[63][1]++, "Verlust mit 50-Zug-Regel");
      case "maybe-loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][5]++;
        cov_17mw7yy3a9().s[160]++;
        return "Wahrscheinlicher Verlust";
      case "loss":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][6]++;
        cov_17mw7yy3a9().s[161]++;
        return dtz ?
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[64][0]++, `Verlust in ${Math.abs(dtz)} ZÃ¼gen`) :
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[64][1]++, "Theoretisch verloren");
      case "unknown":
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][7]++;
        cov_17mw7yy3a9().s[162]++;
        return "Unbekannte Bewertung";
      default:
        /* istanbul ignore next */
        cov_17mw7yy3a9().b[60][8]++;
        cov_17mw7yy3a9().s[163]++;
        return "Bewertung nicht verfÃ¼gbar";
    }
  }
  /**
  * Count pieces in FEN
  * @private
  */
  _countPieces(fen) {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[21]++;
    const piecesPart =
    /* istanbul ignore next */
    (cov_17mw7yy3a9().s[164]++, fen.split(" ")[0]);
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[165]++;
    return piecesPart.replace(/[^a-zA-Z]/g, "").length;
  }
  /**
  * Clear cache (for testing)
  */
  clearCache() {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[22]++;
    cov_17mw7yy3a9().s[166]++;
    this.cache.clear();
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[167]++;
    this.pendingRequests.clear();
  }
  /**
  * Get service metrics for monitoring
  * @returns {object} Current metrics
  */
  getMetrics() {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[23]++;
    cov_17mw7yy3a9().s[168]++;
    return this.metrics.getMetrics();
  }
  constructor() {
    /* istanbul ignore next */
    cov_17mw7yy3a9().f[24]++;
    cov_17mw7yy3a9().s[169]++;
    _define_property(this, "cache", new Map());
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[170]++;
    _define_property(this, "maxPieces", 7); // Lichess uses 7-piece Syzygy tablebases
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[171]++;
    _define_property(this, "cacheTtl", 300000); // 5 minutes
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[172]++;
    _define_property(this, "pendingRequests", new Map());
    // Metrics for monitoring
    /* istanbul ignore next */
    cov_17mw7yy3a9().s[173]++;
    _define_property(this, "metrics", {
      cacheHits: 0,
      cacheMisses: 0,
      apiCalls: 0,
      apiErrors: new Map(),
      requestsDeduplicated: 0,
      recordCacheHit() {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[25]++;
        cov_17mw7yy3a9().s[174]++;
        this.cacheHits++;
      },
      recordCacheMiss() {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[26]++;
        cov_17mw7yy3a9().s[175]++;
        this.cacheMisses++;
      },
      recordApiCall() {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[27]++;
        cov_17mw7yy3a9().s[176]++;
        this.apiCalls++;
      },
      recordApiError(status) {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[28]++;
        cov_17mw7yy3a9().s[177]++;
        this.apiErrors.set(status, (
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[65][0]++, this.apiErrors.get(status)) ||
        /* istanbul ignore next */
        (cov_17mw7yy3a9().b[65][1]++, 0)) + 1);
      },
      recordDeduplication() {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[29]++;
        cov_17mw7yy3a9().s[178]++;
        this.requestsDeduplicated++;
      },
      getMetrics() {
        /* istanbul ignore next */
        cov_17mw7yy3a9().f[30]++;
        const total =
        /* istanbul ignore next */
        (cov_17mw7yy3a9().s[179]++, this.cacheHits + this.cacheMisses);
        /* istanbul ignore next */
        cov_17mw7yy3a9().s[180]++;
        return {
          cacheHitRate: total > 0 ?
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[66][0]++, this.cacheHits / total) :
          /* istanbul ignore next */
          (cov_17mw7yy3a9().b[66][1]++, 0),
          totalApiCalls: this.apiCalls,
          errorBreakdown: Object.fromEntries(this.apiErrors),
          dedupedRequests: this.requestsDeduplicated
        };
      }
    });
  }
}
const tablebaseService =
/* istanbul ignore next */
(cov_17mw7yy3a9().s[181]++, new TablebaseService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,