{"version":3,"names":["cov_2j3tx09u9j","actualCoverage","s","ServiceProvider","f","getPlatformService","resetPlatformService","useLocalStorage","usePlatformDevice","usePlatformNotifications","usePlatformStorage","useService","useServiceContainer","ServiceContainerContext","_react","createContext","undefined","children","container","serviceContainer","useMemo","b","_index","ServiceContainer","createProductionContainer","_jsxruntime","jsx","Provider","value","useContext","Error","key","resolve","resolveCustom","globalContainer"],"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/container/adapter.tsx"],"sourcesContent":["/**\n * Unified Service Container Adapter\n * Single, focused adapter for React integration\n */\n\n\"use client\";\n\nimport React, { createContext, useContext, useMemo, ReactNode } from \"react\";\nimport { ServiceContainer, IServiceContainer, ServiceRegistry } from \"./index\";\n\n/**\n * Context for ServiceContainer\n */\nconst ServiceContainerContext = createContext<IServiceContainer | undefined>(\n  undefined,\n);\n\n/**\n * Provider props\n */\ninterface ServiceProviderProps {\n  children: ReactNode;\n  /**\n   * Container instance (if not provided, creates production container)\n   */\n  container?: IServiceContainer;\n}\n\n/**\n * Service Provider - Single point of integration\n */\nexport const ServiceProvider: React.FC<ServiceProviderProps> = ({\n  children,\n  container,\n}) => {\n  const serviceContainer = useMemo(() => {\n    return container || ServiceContainer.createProductionContainer();\n  }, [container]);\n\n  return (\n    <ServiceContainerContext.Provider value={serviceContainer}>\n      {children}\n    </ServiceContainerContext.Provider>\n  );\n};\n\n/**\n * Hook to get the container\n */\nexport const useServiceContainer = (): IServiceContainer => {\n  const container = useContext(ServiceContainerContext);\n  if (!container) {\n    throw new Error(\"useServiceContainer must be used within ServiceProvider\");\n  }\n  return container;\n};\n\n/**\n * Hook to get a specific service\n */\nexport const useService = <K extends keyof ServiceRegistry>(\n  key: K,\n): ServiceRegistry[K] => {\n  const container = useServiceContainer();\n  return container.resolve(key);\n};\n\n/**\n * Hook shortcuts for common services\n */\nexport const usePlatformStorage = () => useService(\"platform.storage\");\nexport const usePlatformDevice = () => useService(\"platform.device\");\nexport const usePlatformNotifications = () =>\n  useService(\"platform.notifications\");\n\n/**\n * Hook for localStorage (the main Jest 30 fix)\n */\nexport const useLocalStorage = () => {\n  const container = useServiceContainer();\n  return container.resolveCustom<Storage>(\"browser.localStorage\");\n};\n\n/**\n * Factory function for backward compatibility\n * Replaces the original getPlatformService()\n */\nlet globalContainer: IServiceContainer | null = null;\n\nexport function getPlatformService() {\n  if (!globalContainer) {\n    globalContainer = ServiceContainer.createProductionContainer();\n  }\n\n  // Return platform service object - will be properly typed when services are registered\n  return globalContainer.resolveCustom(\"platform.service\");\n}\n\n/**\n * Reset global container (for testing)\n */\nexport function resetPlatformService(): void {\n  globalContainer = null;\n}\n"],"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","ignoreList":[]}