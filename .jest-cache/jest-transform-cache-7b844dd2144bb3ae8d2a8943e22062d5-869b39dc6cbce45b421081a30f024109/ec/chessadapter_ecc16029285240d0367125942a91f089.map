{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/infrastructure/chess-adapter.ts"],"sourcesContent":["/**\n * Chess Adapter - Clean Architecture Implementation\n *\n * Anti-Corruption Layer zwischen chess.js Library und unserer Domain.\n * Implementiert das Adapter Pattern für saubere Trennung von Domain und Infrastructure.\n *\n * Architektur-Prinzipien:\n * 1. Domain Types bleiben unberührt von Library-Details\n * 2. Error-First Validation für ungültige Library-Daten\n * 3. Klare Trennung: Domain ↔ Adapter ↔ Library\n * 4. Library-Austausch ohne Domain-Änderungen möglich\n */\n\nimport { Move as ChessJsMove } from \"chess.js\";\nimport {\n  Move as DomainMove,\n  Color,\n  Square,\n  PieceSymbol,\n  ValidatedMove,\n} from \"../types/chess\";\nimport { getLogger } from \"../services/logging\";\n\nconst logger = getLogger();\n\n/**\n * Valid promotion pieces according to chess rules\n */\nconst VALID_PROMOTION_PIECES = [\"q\", \"r\", \"b\", \"n\"] as const;\ntype ValidPromotionPiece = (typeof VALID_PROMOTION_PIECES)[number];\n\n/**\n * Validates if a piece symbol represents a valid promotion piece\n */\nfunction isValidPromotionPiece(piece: string): piece is ValidPromotionPiece {\n  return VALID_PROMOTION_PIECES.includes(piece as ValidPromotionPiece);\n}\n\n/**\n * Validates if a piece symbol is valid according to our domain rules\n */\nfunction isValidPieceSymbol(piece: string): piece is PieceSymbol {\n  return [\"p\", \"n\", \"b\", \"r\", \"q\", \"k\"].includes(piece);\n}\n\n/**\n * Validates if a color is valid according to our domain rules\n */\nfunction isValidColor(color: string): color is Color {\n  return color === \"w\" || color === \"b\";\n}\n\n/**\n * Converts Domain Move to chess.js Move format\n *\n * This is generally safe since DomainMove is a subset of ChessJsMove\n * with stricter constraints.\n */\nexport function toLibraryMove(move: DomainMove): ChessJsMove {\n  logger.debug(\"Converting domain move to library format\", {\n    from: move.from,\n    to: move.to,\n    san: move.san,\n  });\n\n  // Convert domain move to library format\n  // Map fenBefore/fenAfter to before/after for chess.js compatibility\n  const libraryMove = {\n    ...move,\n    before: move.fenBefore,\n    after: move.fenAfter,\n  } as ChessJsMove;\n\n  return libraryMove;\n}\n\n/**\n * Converts chess.js Move to Domain Move format\n *\n * This is the critical validation layer. Any invalid data from the library\n * will be caught here before it enters our domain.\n *\n * Error-First Strategy: Fail fast on invalid data to prevent silent bugs.\n */\nexport function fromLibraryMove(libraryMove: ChessJsMove): ValidatedMove {\n  logger.debug(\"Converting library move to domain format\", {\n    from: libraryMove.from,\n    to: libraryMove.to,\n    san: libraryMove.san,\n    promotion: libraryMove.promotion,\n  });\n\n  // Validate required fields exist\n  if (!libraryMove.from || !libraryMove.to || !libraryMove.san) {\n    throw new ChessAdapterError(\"Missing required move fields\", {\n      move: libraryMove,\n      missingFields: [\"from\", \"to\", \"san\"],\n    });\n  }\n\n  // Validate color\n  if (!isValidColor(libraryMove.color)) {\n    throw new ChessAdapterError(`Invalid move color: ${libraryMove.color}`, {\n      move: libraryMove,\n      invalidField: \"color\",\n    });\n  }\n\n  // Validate piece\n  if (!isValidPieceSymbol(libraryMove.piece)) {\n    throw new ChessAdapterError(`Invalid piece symbol: ${libraryMove.piece}`, {\n      move: libraryMove,\n      invalidField: \"piece\",\n    });\n  }\n\n  // Validate captured piece (if present)\n  if (libraryMove.captured && !isValidPieceSymbol(libraryMove.captured)) {\n    throw new ChessAdapterError(\n      `Invalid captured piece: ${libraryMove.captured}`,\n      { move: libraryMove, invalidField: \"captured\" },\n    );\n  }\n\n  // CRITICAL VALIDATION: Promotion piece must be valid according to chess rules\n  if (libraryMove.promotion && !isValidPromotionPiece(libraryMove.promotion)) {\n    // This should theoretically never happen with a correct chess library,\n    // but we fail fast to catch any library bugs or unexpected behavior\n    throw new ChessAdapterError(\n      `Invalid promotion piece: ${libraryMove.promotion}. Only q, r, b, n are allowed.`,\n      {\n        move: libraryMove,\n        invalidField: \"promotion\",\n        validPromotions: VALID_PROMOTION_PIECES,\n      },\n    );\n  }\n\n  // Safe to cast after validation - all constraints are met\n  const domainMove: ValidatedMove = {\n    color: libraryMove.color,\n    from: libraryMove.from as Square,\n    to: libraryMove.to as Square,\n    piece: libraryMove.piece as PieceSymbol,\n    captured: libraryMove.captured as PieceSymbol | undefined,\n    promotion: libraryMove.promotion as ValidPromotionPiece | undefined,\n    flags: libraryMove.flags || \"\",\n    san: libraryMove.san,\n    lan: libraryMove.lan || \"\",\n    fenBefore: libraryMove.before || \"\",\n    fenAfter: libraryMove.after || \"\",\n    // Helper methods - these will be added by the chess.js library when needed\n    isCapture: () => !!(libraryMove as any).captured,\n    isPromotion: () => !!(libraryMove as any).promotion,\n    isEnPassant: () => (libraryMove as any).flags?.includes(\"e\") || false,\n    isKingsideCastle: () => (libraryMove as any).flags?.includes(\"k\") || false,\n    isQueensideCastle: () => (libraryMove as any).flags?.includes(\"q\") || false,\n    isBigPawn: () => (libraryMove as any).flags?.includes(\"b\") || false,\n  } as ValidatedMove;\n\n  logger.debug(\"Successfully converted library move to domain move\", {\n    domainMove: {\n      from: domainMove.from,\n      to: domainMove.to,\n      san: domainMove.san,\n      promotion: domainMove.promotion,\n    },\n  });\n\n  return domainMove;\n}\n\n/**\n * Converts an array of library moves to domain moves\n * Provides better error context when processing multiple moves\n */\nexport function fromLibraryMoves(libraryMoves: ChessJsMove[]): ValidatedMove[] {\n  return libraryMoves.map((move, index) => {\n    try {\n      return fromLibraryMove(move);\n    } catch (error) {\n      if (error instanceof ChessAdapterError) {\n        // Create a new error with enhanced context since context is readonly\n        throw new ChessAdapterError(error.message, {\n          ...error.context,\n          moveIndex: index,\n          totalMoves: libraryMoves.length,\n        });\n      }\n      throw error;\n    }\n  });\n}\n\n/**\n * Custom error class for chess adapter validation failures\n * Provides rich context for debugging\n */\nexport class ChessAdapterError extends Error {\n  public readonly context?: Record<string, any>;\n\n  constructor(message: string, context?: Record<string, any>) {\n    super(message);\n    this.name = \"ChessAdapterError\";\n    this.context = context;\n\n    // Log error for monitoring/debugging\n    logger.error(\"Chess adapter validation failed\", {\n      error: message,\n      context: context,\n    });\n  }\n}\n\n/**\n * Type guards for external validation\n */\nexport const ChessAdapter = {\n  isValidPromotionPiece,\n  isValidPieceSymbol,\n  isValidColor,\n  VALID_PROMOTION_PIECES,\n} as const;\n"],"names":["ChessAdapter","ChessAdapterError","fromLibraryMove","fromLibraryMoves","toLibraryMove","logger","getLogger","VALID_PROMOTION_PIECES","isValidPromotionPiece","piece","includes","isValidPieceSymbol","isValidColor","color","move","debug","from","to","san","libraryMove","before","fenBefore","after","fenAfter","promotion","missingFields","invalidField","captured","validPromotions","domainMove","flags","lan","isCapture","isPromotion","isEnPassant","isKingsideCastle","isQueensideCastle","isBigPawn","libraryMoves","map","index","error","message","context","moveIndex","totalMoves","length","Error","name"],"mappings":"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"}