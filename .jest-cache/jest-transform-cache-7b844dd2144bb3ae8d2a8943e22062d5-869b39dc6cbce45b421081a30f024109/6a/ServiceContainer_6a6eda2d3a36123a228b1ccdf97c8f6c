a2e142b6ec5c8c604c852e02192243d6
/**
 * @file Service Container Implementation
 * @module services/container/ServiceContainer
 *
 * @description
 * Lightweight dependency injection container for platform services.
 * Provides a centralized way to manage service instances and their dependencies,
 * supporting both singleton and factory patterns with circular dependency detection.
 *
 * @remarks
 * Key features:
 * - Lazy service instantiation
 * - Singleton and factory patterns
 * - Circular dependency detection
 * - Mock services for testing
 * - Browser API abstraction
 * - Type-safe service registry
 */"use strict";

/* istanbul ignore next */
function cov_r1zyd7um5() {
  var path = "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/container/ServiceContainer.ts";
  var hash = "ea9ab4727a4d6888c1932e70d55b67e60965204d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/container/ServiceContainer.ts",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "2": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "3": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "4": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "5": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "6": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "7": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "8": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 15
        }
      },
      "9": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "10": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "11": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "12": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "13": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "14": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "15": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "16": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 44
        }
      },
      "17": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 45
        }
      },
      "18": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 25
        }
      },
      "19": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 44
        }
      },
      "20": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 44
        }
      },
      "21": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "22": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 64
        }
      },
      "23": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 58
        }
      },
      "24": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "25": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "26": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "27": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 41
        }
      },
      "28": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 41
        }
      },
      "29": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "30": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 160,
          column: 52
        }
      },
      "31": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 28
        }
      },
      "32": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 60
        }
      },
      "33": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "34": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 68
        }
      },
      "35": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 43
        }
      },
      "36": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 170,
          column: 47
        }
      },
      "37": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "38": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 55
        }
      },
      "39": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 32
        }
      },
      "40": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "41": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 60
        }
      },
      "42": {
        start: {
          line: 178,
          column: 29
        },
        end: {
          line: 178,
          column: 42
        }
      },
      "43": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "44": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 50
        }
      },
      "45": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 28
        }
      },
      "46": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 39
        }
      },
      "47": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 39
        }
      },
      "48": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 39
        }
      },
      "49": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 61
        }
      },
      "50": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 31
        }
      },
      "51": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 31
        }
      },
      "52": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 49
        }
      },
      "53": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "54": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "55": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 232,
          column: 20
        }
      },
      "56": {
        start: {
          line: 225,
          column: 53
        },
        end: {
          line: 232,
          column: 17
        }
      },
      "57": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "58": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 79
        }
      },
      "59": {
        start: {
          line: 236,
          column: 60
        },
        end: {
          line: 236,
          column: 77
        }
      },
      "60": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "61": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 73
        }
      },
      "62": {
        start: {
          line: 239,
          column: 57
        },
        end: {
          line: 239,
          column: 71
        }
      },
      "63": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "64": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 67
        }
      },
      "65": {
        start: {
          line: 242,
          column: 54
        },
        end: {
          line: 242,
          column: 65
        }
      },
      "66": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "67": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 71
        }
      },
      "68": {
        start: {
          line: 245,
          column: 56
        },
        end: {
          line: 245,
          column: 69
        }
      },
      "69": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "70": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 77
        }
      },
      "71": {
        start: {
          line: 248,
          column: 59
        },
        end: {
          line: 248,
          column: 75
        }
      },
      "72": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "73": {
        start: {
          line: 257,
          column: 43
        },
        end: {
          line: 257,
          column: 88
        }
      },
      "74": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 44
        }
      },
      "75": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "76": {
        start: {
          line: 262,
          column: 36
        },
        end: {
          line: 262,
          column: 79
        }
      },
      "77": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 43
        }
      },
      "78": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "79": {
        start: {
          line: 266,
          column: 36
        },
        end: {
          line: 266,
          column: 79
        }
      },
      "80": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 49
        }
      },
      "81": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "82": {
        start: {
          line: 270,
          column: 36
        },
        end: {
          line: 270,
          column: 79
        }
      },
      "83": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 42
        }
      },
      "84": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "85": {
        start: {
          line: 274,
          column: 36
        },
        end: {
          line: 274,
          column: 79
        }
      },
      "86": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 47
        }
      },
      "87": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 280,
          column: 11
        }
      },
      "88": {
        start: {
          line: 278,
          column: 36
        },
        end: {
          line: 278,
          column: 79
        }
      },
      "89": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 45
        }
      },
      "90": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      },
      "91": {
        start: {
          line: 282,
          column: 36
        },
        end: {
          line: 282,
          column: 79
        }
      },
      "92": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 41
        }
      },
      "93": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 288,
          column: 11
        }
      },
      "94": {
        start: {
          line: 286,
          column: 36
        },
        end: {
          line: 286,
          column: 79
        }
      },
      "95": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 45
        }
      },
      "96": {
        start: {
          line: 293,
          column: 22
        },
        end: {
          line: 296,
          column: 10
        }
      },
      "97": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 11
        }
      },
      "98": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 46
        }
      },
      "99": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 21
        }
      },
      "100": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 55
        }
      },
      "101": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 55
        }
      },
      "102": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 55
        }
      },
      "103": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 49
        }
      },
      "104": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 320,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 10
          }
        },
        loc: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "_define_property",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 25
          }
        },
        loc: {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 55,
            column: 7
          }
        },
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 55
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        },
        loc: {
          start: {
            line: 92,
            column: 43
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 92
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        },
        loc: {
          start: {
            line: 124,
            column: 29
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 124
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 129,
            column: 6
          },
          end: {
            line: 129,
            column: 7
          }
        },
        loc: {
          start: {
            line: 129,
            column: 35
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 134,
            column: 7
          }
        },
        loc: {
          start: {
            line: 134,
            column: 37
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 134
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        loc: {
          start: {
            line: 147,
            column: 19
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 147
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 152,
            column: 7
          }
        },
        loc: {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 6
          },
          end: {
            line: 157,
            column: 7
          }
        },
        loc: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 157
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 191,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        },
        loc: {
          start: {
            line: 191,
            column: 15
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 191
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 196,
            column: 6
          },
          end: {
            line: 196,
            column: 7
          }
        },
        loc: {
          start: {
            line: 196,
            column: 21
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 196
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        },
        loc: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 201
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 208,
            column: 6
          },
          end: {
            line: 208,
            column: 7
          }
        },
        loc: {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 213,
            column: 7
          }
        },
        loc: {
          start: {
            line: 213,
            column: 17
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 213
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 222,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        },
        loc: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 222
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 225,
            column: 48
          },
          end: {
            line: 225,
            column: 49
          }
        },
        loc: {
          start: {
            line: 225,
            column: 53
          },
          end: {
            line: 232,
            column: 17
          }
        },
        line: 225
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 236,
            column: 56
          },
          end: {
            line: 236,
            column: 57
          }
        },
        loc: {
          start: {
            line: 236,
            column: 60
          },
          end: {
            line: 236,
            column: 77
          }
        },
        line: 236
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 239,
            column: 53
          },
          end: {
            line: 239,
            column: 54
          }
        },
        loc: {
          start: {
            line: 239,
            column: 57
          },
          end: {
            line: 239,
            column: 71
          }
        },
        line: 239
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 242,
            column: 50
          },
          end: {
            line: 242,
            column: 51
          }
        },
        loc: {
          start: {
            line: 242,
            column: 54
          },
          end: {
            line: 242,
            column: 65
          }
        },
        line: 242
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 245,
            column: 52
          },
          end: {
            line: 245,
            column: 53
          }
        },
        loc: {
          start: {
            line: 245,
            column: 56
          },
          end: {
            line: 245,
            column: 69
          }
        },
        line: 245
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 248,
            column: 55
          },
          end: {
            line: 248,
            column: 56
          }
        },
        loc: {
          start: {
            line: 248,
            column: 59
          },
          end: {
            line: 248,
            column: 75
          }
        },
        line: 248
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 253,
            column: 6
          },
          end: {
            line: 253,
            column: 7
          }
        },
        loc: {
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 253
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 256,
            column: 49
          }
        },
        loc: {
          start: {
            line: 256,
            column: 52
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 256
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 261,
            column: 42
          },
          end: {
            line: 261,
            column: 43
          }
        },
        loc: {
          start: {
            line: 261,
            column: 55
          },
          end: {
            line: 264,
            column: 9
          }
        },
        line: 261
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 265,
            column: 48
          },
          end: {
            line: 265,
            column: 49
          }
        },
        loc: {
          start: {
            line: 265,
            column: 61
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 265
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 269,
            column: 41
          },
          end: {
            line: 269,
            column: 42
          }
        },
        loc: {
          start: {
            line: 269,
            column: 54
          },
          end: {
            line: 272,
            column: 9
          }
        },
        line: 269
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 273,
            column: 46
          },
          end: {
            line: 273,
            column: 47
          }
        },
        loc: {
          start: {
            line: 273,
            column: 59
          },
          end: {
            line: 276,
            column: 9
          }
        },
        line: 273
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 277,
            column: 44
          },
          end: {
            line: 277,
            column: 45
          }
        },
        loc: {
          start: {
            line: 277,
            column: 57
          },
          end: {
            line: 280,
            column: 9
          }
        },
        line: 277
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 281,
            column: 40
          },
          end: {
            line: 281,
            column: 41
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 284,
            column: 9
          }
        },
        line: 281
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 285,
            column: 44
          },
          end: {
            line: 285,
            column: 45
          }
        },
        loc: {
          start: {
            line: 285,
            column: 57
          },
          end: {
            line: 288,
            column: 9
          }
        },
        line: 285
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 292,
            column: 6
          },
          end: {
            line: 292,
            column: 7
          }
        },
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 292
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 298,
            column: 31
          },
          end: {
            line: 298,
            column: 32
          }
        },
        loc: {
          start: {
            line: 298,
            column: 47
          },
          end: {
            line: 300,
            column: 9
          }
        },
        line: 298
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 310,
            column: 6
          },
          end: {
            line: 310,
            column: 7
          }
        },
        loc: {
          start: {
            line: 310,
            column: 30
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 310
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 318,
            column: 39
          }
        },
        loc: {
          start: {
            line: 318,
            column: 42
          },
          end: {
            line: 318,
            column: 44
          }
        },
        line: 318
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 40,
            column: 5
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "3": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 36
          }
        }, {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 63
          }
        }],
        line: 135
      },
      "4": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "5": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "6": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "7": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 37
          }
        }, {
          start: {
            line: 165,
            column: 41
          },
          end: {
            line: 165,
            column: 64
          }
        }],
        line: 165
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "10": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "11": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 29
          }
        }, {
          start: {
            line: 224,
            column: 33
          },
          end: {
            line: 224,
            column: 47
          }
        }, {
          start: {
            line: 224,
            column: 51
          },
          end: {
            line: 224,
            column: 62
          }
        }, {
          start: {
            line: 224,
            column: 66
          },
          end: {
            line: 224,
            column: 79
          }
        }, {
          start: {
            line: 224,
            column: 83
          },
          end: {
            line: 224,
            column: 99
          }
        }],
        line: 224
      },
      "12": {
        loc: {
          start: {
            line: 227,
            column: 36
          },
          end: {
            line: 227,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 36
          },
          end: {
            line: 227,
            column: 55
          }
        }, {
          start: {
            line: 227,
            column: 59
          },
          end: {
            line: 227,
            column: 85
          }
        }],
        line: 227
      },
      "13": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "14": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "15": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "16": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "17": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "18": {
        loc: {
          start: {
            line: 310,
            column: 18
          },
          end: {
            line: 310,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 310,
            column: 27
          },
          end: {
            line: 310,
            column: 29
          }
        }],
        line: 310
      },
      "19": {
        loc: {
          start: {
            line: 318,
            column: 20
          },
          end: {
            line: 318,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 20
          },
          end: {
            line: 318,
            column: 33
          }
        }, {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 318,
            column: 44
          }
        }],
        line: 318
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/services/container/ServiceContainer.ts"],
      sourcesContent: ["/**\n * @file Service Container Implementation\n * @module services/container/ServiceContainer\n *\n * @description\n * Lightweight dependency injection container for platform services.\n * Provides a centralized way to manage service instances and their dependencies,\n * supporting both singleton and factory patterns with circular dependency detection.\n *\n * @remarks\n * Key features:\n * - Lazy service instantiation\n * - Singleton and factory patterns\n * - Circular dependency detection\n * - Mock services for testing\n * - Browser API abstraction\n * - Type-safe service registry\n */\n\nimport {\n  IServiceContainer,\n  ServiceRegistry,\n  ServiceFactory,\n  ServiceContainerConfig,\n  ServiceNotFoundError,\n  ServiceAlreadyRegisteredError,\n  CircularDependencyError,\n  IBrowserAPIs,\n} from \"./types\";\nimport {\n  createMockStorage,\n  createMockNavigator,\n  createMockWindow,\n  createMockDocument,\n  createMockPerformance,\n} from \"./mocks\";\n\n/**\n * Service Container implementation for dependency injection\n *\n * @class ServiceContainer\n * @implements {IServiceContainer}\n *\n * @description\n * Manages service registration, instantiation, and dependency resolution.\n * Supports both singleton and factory patterns with automatic circular\n * dependency detection.\n *\n * @example\n * ```typescript\n * // Create a container\n * const container = new ServiceContainer({ useSingletons: true });\n *\n * // Register a service factory\n * container.register('storage', (container) => {\n *   return new StorageService(container.get('platform'));\n * });\n *\n * // Get service instance\n * const storage = container.get<IStorageService>('storage');\n * ```\n */\nexport class ServiceContainer implements IServiceContainer {\n  private factories = new Map<string, ServiceFactory<any>>();\n  private instances = new Map<string, any>();\n  private resolving = new Set<string>(); // For circular dependency detection\n  private config: ServiceContainerConfig;\n\n  /**\n   * Creates a new service container\n   *\n   * @param {ServiceContainerConfig} config - Configuration options\n   * @param {boolean} [config.useSingletons=true] - Whether to cache service instances\n   * @param {boolean} [config.validateKeys=true] - Whether to validate service keys\n   * @param {Function} [config.logger] - Optional logger function\n   */\n  constructor(config: ServiceContainerConfig = {}) {\n    this.config = {\n      useSingletons: true,\n      validateKeys: true,\n      logger: config.logger || (() => {}), // No-op logger by default\n      ...config,\n    };\n  }\n\n  /**\n   * Create a production container with real browser APIs\n   *\n   * @static\n   * @returns {ServiceContainer} Container configured for production use\n   *\n   * @example\n   * ```typescript\n   * const container = ServiceContainer.createProductionContainer();\n   * const platform = container.get('platform');\n   * ```\n   */\n  static createProductionContainer(): ServiceContainer {\n    const container = new ServiceContainer();\n\n    if (typeof window !== \"undefined\") {\n      container.registerBrowserAPIs({\n        localStorage: window.localStorage,\n        sessionStorage: window.sessionStorage,\n        navigator: window.navigator,\n        window: window,\n        document: window.document,\n        performance: window.performance,\n      });\n\n      // Register platform services\n      container.registerPlatformServices();\n    }\n\n    return container;\n  }\n\n  /**\n   * Create a test container with browser API mocks\n   *\n   * @description\n   * This is the main entry point for Jest tests. Creates a container with\n   * mocked browser APIs and platform services suitable for testing.\n   *\n   * @static\n   * @param {Partial<IBrowserAPIs>} [mockAPIs] - Optional custom mock implementations\n   * @returns {ServiceContainer} Container configured for testing\n   *\n   * @example\n   * ```typescript\n   * // In a test file\n   * const container = ServiceContainer.createTestContainer({\n   *   localStorage: customMockStorage\n   * });\n   *\n   * const storage = container.get('storage');\n   * await storage.save('key', 'value');\n   * ```\n   */\n  static createTestContainer(\n    mockAPIs?: Partial<IBrowserAPIs>,\n  ): ServiceContainer {\n    const container = new ServiceContainer();\n\n    // Register mock browser APIs\n    const apis = {\n      localStorage: createMockStorage(),\n      sessionStorage: createMockStorage(),\n      navigator: createMockNavigator(),\n      window: createMockWindow(),\n      document: createMockDocument(),\n      performance: createMockPerformance(),\n      ...mockAPIs,\n    };\n\n    container.registerBrowserAPIs(apis);\n\n    // Register platform services with mocked dependencies\n    container.registerPlatformServices();\n\n    return container;\n  }\n\n  /**\n   * Register a service with type-safe key\n   *\n   * @template K - Key from the ServiceRegistry type\n   * @param {K} key - Service identifier from ServiceRegistry\n   * @param {ServiceFactory<ServiceRegistry[K]>} factory - Factory function to create service\n   * @throws {ServiceAlreadyRegisteredError} If service is already registered\n   *\n   * @example\n   * ```typescript\n   * container.register('storage', (container) => {\n   *   const platform = container.get('platform');\n   *   return new StorageService(platform);\n   * });\n   * ```\n   */\n  register<K extends keyof ServiceRegistry>(\n    key: K,\n    factory: ServiceFactory<ServiceRegistry[K]>,\n  ): void {\n    this.registerInternal(key as string, factory);\n  }\n\n  /**\n   * Register a service with custom key\n   */\n  registerCustom<T>(key: string, factory: ServiceFactory<T>): void {\n    this.registerInternal(key, factory);\n  }\n\n  /**\n   * Internal registration method\n   */\n  private registerInternal(key: string, factory: ServiceFactory<any>): void {\n    if (this.config.validateKeys && this.factories.has(key)) {\n      throw new ServiceAlreadyRegisteredError(key);\n    }\n\n    this.config.logger!(`Registering service: ${key}`);\n    this.factories.set(key, factory);\n\n    // Clear existing instance if re-registering\n    if (this.instances.has(key)) {\n      this.instances.delete(key);\n    }\n  }\n\n  /**\n   * Resolve a service with type-safe key\n   */\n  resolve<K extends keyof ServiceRegistry>(key: K): ServiceRegistry[K] {\n    return this.resolveInternal(key as string);\n  }\n\n  /**\n   * Resolve a custom service\n   */\n  resolveCustom<T>(key: string): T {\n    return this.resolveInternal(key);\n  }\n\n  /**\n   * Internal resolution method\n   */\n  private resolveInternal<T>(key: string): T {\n    // Check for circular dependencies\n    if (this.resolving.has(key)) {\n      const chain = Array.from(this.resolving);\n      chain.push(key);\n      throw new CircularDependencyError(chain);\n    }\n\n    // Return existing instance if using singletons\n    if (this.config.useSingletons && this.instances.has(key)) {\n      this.config.logger!(`Returning cached instance: ${key}`);\n      return this.instances.get(key);\n    }\n\n    // Check if factory is registered\n    const factory = this.factories.get(key);\n    if (!factory) {\n      throw new ServiceNotFoundError(key);\n    }\n\n    // Mark as resolving for circular dependency detection\n    this.resolving.add(key);\n\n    try {\n      this.config.logger!(`Creating instance: ${key}`);\n      const instance = factory(this);\n\n      // Cache instance if using singletons\n      if (this.config.useSingletons) {\n        this.instances.set(key, instance);\n      }\n\n      return instance;\n    } finally {\n      // Always remove from resolving set\n      this.resolving.delete(key);\n    }\n  }\n\n  /**\n   * Check if service is registered (type-safe)\n   */\n  has<K extends keyof ServiceRegistry>(key: K): boolean {\n    return this.factories.has(key as string);\n  }\n\n  /**\n   * Check if custom service is registered\n   */\n  hasCustom(key: string): boolean {\n    return this.factories.has(key);\n  }\n\n  /**\n   * Clear all resolved instances\n   */\n  clearInstances(): void {\n    this.config.logger!(\"Clearing all service instances\");\n    this.instances.clear();\n    this.resolving.clear();\n  }\n\n  /**\n   * Get all registered service keys\n   */\n  getRegisteredKeys(): string[] {\n    return Array.from(this.factories.keys());\n  }\n\n  /**\n   * Get container statistics (useful for debugging)\n   */\n  getStats(): {\n    registeredServices: number;\n    resolvedInstances: number;\n    currentlyResolving: number;\n  } {\n    return {\n      registeredServices: this.factories.size,\n      resolvedInstances: this.instances.size,\n      currentlyResolving: this.resolving.size,\n    };\n  }\n\n  /**\n   * Register browser APIs abstraction\n   */\n  registerBrowserAPIs(\n    apis: Partial<{\n      localStorage: Storage;\n      sessionStorage: Storage;\n      navigator: Navigator;\n      window: Window;\n      document: Document;\n      performance: Performance;\n    }>,\n  ): void {\n    // Register complete browser APIs object\n    if (\n      apis.localStorage &&\n      apis.navigator &&\n      apis.window &&\n      apis.document &&\n      apis.performance\n    ) {\n      this.registerCustom(\"browser.apis\", () => ({\n        localStorage: apis.localStorage!,\n        sessionStorage: apis.sessionStorage || apis.window!.sessionStorage,\n        navigator: apis.navigator!,\n        window: apis.window!,\n        document: apis.document!,\n        performance: apis.performance!,\n      }));\n    }\n\n    // Register individual APIs\n    if (apis.localStorage) {\n      this.registerCustom(\"browser.localStorage\", () => apis.localStorage!);\n    }\n    if (apis.navigator) {\n      this.registerCustom(\"browser.navigator\", () => apis.navigator!);\n    }\n    if (apis.window) {\n      this.registerCustom(\"browser.window\", () => apis.window!);\n    }\n    if (apis.document) {\n      this.registerCustom(\"browser.document\", () => apis.document!);\n    }\n    if (apis.performance) {\n      this.registerCustom(\"browser.performance\", () => apis.performance!);\n    }\n  }\n\n  /**\n   * Register platform services using the existing WebPlatformService\n   */\n  private registerPlatformServices(): void {\n    // For Phase 1, we keep it simple and register a factory that will\n    // import WebPlatformService when first accessed\n    this.registerCustom(\"platform.service\", () => {\n      const {\n        WebPlatformService,\n      } = require(\"../platform/web/WebPlatformService\");\n      return new WebPlatformService();\n    });\n\n    // Register individual services that delegate to the main service\n    this.register(\"platform.storage\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.storage;\n    });\n\n    this.register(\"platform.notifications\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.notifications;\n    });\n\n    this.register(\"platform.device\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.device;\n    });\n\n    this.register(\"platform.performance\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.performance;\n    });\n\n    this.register(\"platform.clipboard\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.clipboard;\n    });\n\n    this.register(\"platform.share\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.share;\n    });\n\n    this.register(\"platform.analytics\", (container) => {\n      const platformService = container.resolveCustom(\n        \"platform.service\",\n      ) as any;\n      return platformService.analytics;\n    });\n  }\n\n  /**\n   * Create a child container with same factories but separate instances\n   */\n  createChild(config?: Partial<ServiceContainerConfig>): ServiceContainer {\n    const child = new ServiceContainer({\n      ...this.config,\n      ...config,\n    });\n\n    // Copy all factories to child\n    this.factories.forEach((factory, key) => {\n      child.factories.set(key, factory);\n    });\n\n    return child;\n  }\n}\n"],
      names: ["ServiceContainer", "createProductionContainer", "container", "window", "registerBrowserAPIs", "localStorage", "sessionStorage", "navigator", "document", "performance", "registerPlatformServices", "createTestContainer", "mockAPIs", "apis", "createMockStorage", "createMockNavigator", "createMockWindow", "createMockDocument", "createMockPerformance", "register", "key", "factory", "registerInternal", "registerCustom", "config", "validateKeys", "factories", "has", "ServiceAlreadyRegisteredError", "logger", "set", "instances", "delete", "resolve", "resolveInternal", "resolveCustom", "resolving", "chain", "Array", "from", "push", "CircularDependencyError", "useSingletons", "get", "ServiceNotFoundError", "add", "instance", "hasCustom", "clearInstances", "clear", "getRegisteredKeys", "keys", "getStats", "registeredServices", "size", "resolvedInstances", "currentlyResolving", "WebPlatformService", "require", "platformService", "storage", "notifications", "device", "clipboard", "share", "analytics", "createChild", "child", "forEach", "Map", "Set"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea9ab4727a4d6888c1932e70d55b67e60965204d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r1zyd7um5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r1zyd7um5();
cov_r1zyd7um5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_r1zyd7um5().s[1]++;
Object.defineProperty(exports, "ServiceContainer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[0]++;
    cov_r1zyd7um5().s[2]++;
    return ServiceContainer;
  }
});
const _types =
/* istanbul ignore next */
(cov_r1zyd7um5().s[3]++, require("./types"));
const _mocks =
/* istanbul ignore next */
(cov_r1zyd7um5().s[4]++, require("./mocks"));
function _define_property(obj, key, value) {
  /* istanbul ignore next */
  cov_r1zyd7um5().f[1]++;
  cov_r1zyd7um5().s[5]++;
  if (key in obj) {
    /* istanbul ignore next */
    cov_r1zyd7um5().b[0][0]++;
    cov_r1zyd7um5().s[6]++;
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    /* istanbul ignore next */
    cov_r1zyd7um5().b[0][1]++;
    cov_r1zyd7um5().s[7]++;
    obj[key] = value;
  }
  /* istanbul ignore next */
  cov_r1zyd7um5().s[8]++;
  return obj;
}
class ServiceContainer {
  /**
  * Create a production container with real browser APIs
  *
  * @static
  * @returns {ServiceContainer} Container configured for production use
  *
  * @example
  * ```typescript
  * const container = ServiceContainer.createProductionContainer();
  * const platform = container.get('platform');
  * ```
  */
  static createProductionContainer() {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[2]++;
    const container =
    /* istanbul ignore next */
    (cov_r1zyd7um5().s[9]++, new ServiceContainer());
    /* istanbul ignore next */
    cov_r1zyd7um5().s[10]++;
    if (typeof window !== "undefined") {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[1][0]++;
      cov_r1zyd7um5().s[11]++;
      container.registerBrowserAPIs({
        localStorage: window.localStorage,
        sessionStorage: window.sessionStorage,
        navigator: window.navigator,
        window: window,
        document: window.document,
        performance: window.performance
      });
      // Register platform services
      /* istanbul ignore next */
      cov_r1zyd7um5().s[12]++;
      container.registerPlatformServices();
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[1][1]++;
    }
    cov_r1zyd7um5().s[13]++;
    return container;
  }
  /**
  * Create a test container with browser API mocks
  *
  * @description
  * This is the main entry point for Jest tests. Creates a container with
  * mocked browser APIs and platform services suitable for testing.
  *
  * @static
  * @param {Partial<IBrowserAPIs>} [mockAPIs] - Optional custom mock implementations
  * @returns {ServiceContainer} Container configured for testing
  *
  * @example
  * ```typescript
  * // In a test file
  * const container = ServiceContainer.createTestContainer({
  *   localStorage: customMockStorage
  * });
  *
  * const storage = container.get('storage');
  * await storage.save('key', 'value');
  * ```
  */
  static createTestContainer(mockAPIs) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[3]++;
    const container =
    /* istanbul ignore next */
    (cov_r1zyd7um5().s[14]++, new ServiceContainer());
    // Register mock browser APIs
    const apis =
    /* istanbul ignore next */
    (cov_r1zyd7um5().s[15]++, {
      localStorage: (0, _mocks.createMockStorage)(),
      sessionStorage: (0, _mocks.createMockStorage)(),
      navigator: (0, _mocks.createMockNavigator)(),
      window: (0, _mocks.createMockWindow)(),
      document: (0, _mocks.createMockDocument)(),
      performance: (0, _mocks.createMockPerformance)(),
      ...mockAPIs
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[16]++;
    container.registerBrowserAPIs(apis);
    // Register platform services with mocked dependencies
    /* istanbul ignore next */
    cov_r1zyd7um5().s[17]++;
    container.registerPlatformServices();
    /* istanbul ignore next */
    cov_r1zyd7um5().s[18]++;
    return container;
  }
  /**
  * Register a service with type-safe key
  *
  * @template K - Key from the ServiceRegistry type
  * @param {K} key - Service identifier from ServiceRegistry
  * @param {ServiceFactory<ServiceRegistry[K]>} factory - Factory function to create service
  * @throws {ServiceAlreadyRegisteredError} If service is already registered
  *
  * @example
  * ```typescript
  * container.register('storage', (container) => {
  *   const platform = container.get('platform');
  *   return new StorageService(platform);
  * });
  * ```
  */
  register(key, factory) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[4]++;
    cov_r1zyd7um5().s[19]++;
    this.registerInternal(key, factory);
  }
  /**
  * Register a service with custom key
  */
  registerCustom(key, factory) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[5]++;
    cov_r1zyd7um5().s[20]++;
    this.registerInternal(key, factory);
  }
  /**
  * Internal registration method
  */
  registerInternal(key, factory) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[6]++;
    cov_r1zyd7um5().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[3][0]++, this.config.validateKeys) &&
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[3][1]++, this.factories.has(key))) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[2][0]++;
      cov_r1zyd7um5().s[22]++;
      throw new _types.ServiceAlreadyRegisteredError(key);
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[2][1]++;
    }
    cov_r1zyd7um5().s[23]++;
    this.config.logger(`Registering service: ${key}`);
    /* istanbul ignore next */
    cov_r1zyd7um5().s[24]++;
    this.factories.set(key, factory);
    // Clear existing instance if re-registering
    /* istanbul ignore next */
    cov_r1zyd7um5().s[25]++;
    if (this.instances.has(key)) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[4][0]++;
      cov_r1zyd7um5().s[26]++;
      this.instances.delete(key);
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[4][1]++;
    }
  }
  /**
  * Resolve a service with type-safe key
  */
  resolve(key) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[7]++;
    cov_r1zyd7um5().s[27]++;
    return this.resolveInternal(key);
  }
  /**
  * Resolve a custom service
  */
  resolveCustom(key) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[8]++;
    cov_r1zyd7um5().s[28]++;
    return this.resolveInternal(key);
  }
  /**
  * Internal resolution method
  */
  resolveInternal(key) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[9]++;
    cov_r1zyd7um5().s[29]++;
    // Check for circular dependencies
    if (this.resolving.has(key)) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[5][0]++;
      const chain =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[30]++, Array.from(this.resolving));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[31]++;
      chain.push(key);
      /* istanbul ignore next */
      cov_r1zyd7um5().s[32]++;
      throw new _types.CircularDependencyError(chain);
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[5][1]++;
    }
    // Return existing instance if using singletons
    cov_r1zyd7um5().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[7][0]++, this.config.useSingletons) &&
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[7][1]++, this.instances.has(key))) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[6][0]++;
      cov_r1zyd7um5().s[34]++;
      this.config.logger(`Returning cached instance: ${key}`);
      /* istanbul ignore next */
      cov_r1zyd7um5().s[35]++;
      return this.instances.get(key);
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[6][1]++;
    }
    // Check if factory is registered
    const factory =
    /* istanbul ignore next */
    (cov_r1zyd7um5().s[36]++, this.factories.get(key));
    /* istanbul ignore next */
    cov_r1zyd7um5().s[37]++;
    if (!factory) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[8][0]++;
      cov_r1zyd7um5().s[38]++;
      throw new _types.ServiceNotFoundError(key);
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[8][1]++;
    }
    // Mark as resolving for circular dependency detection
    cov_r1zyd7um5().s[39]++;
    this.resolving.add(key);
    /* istanbul ignore next */
    cov_r1zyd7um5().s[40]++;
    try {
      /* istanbul ignore next */
      cov_r1zyd7um5().s[41]++;
      this.config.logger(`Creating instance: ${key}`);
      const instance =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[42]++, factory(this));
      // Cache instance if using singletons
      /* istanbul ignore next */
      cov_r1zyd7um5().s[43]++;
      if (this.config.useSingletons) {
        /* istanbul ignore next */
        cov_r1zyd7um5().b[9][0]++;
        cov_r1zyd7um5().s[44]++;
        this.instances.set(key, instance);
      } else
      /* istanbul ignore next */
      {
        cov_r1zyd7um5().b[9][1]++;
      }
      cov_r1zyd7um5().s[45]++;
      return instance;
    } finally {
      /* istanbul ignore next */
      cov_r1zyd7um5().s[46]++;
      // Always remove from resolving set
      this.resolving.delete(key);
    }
  }
  /**
  * Check if service is registered (type-safe)
  */
  has(key) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[10]++;
    cov_r1zyd7um5().s[47]++;
    return this.factories.has(key);
  }
  /**
  * Check if custom service is registered
  */
  hasCustom(key) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[11]++;
    cov_r1zyd7um5().s[48]++;
    return this.factories.has(key);
  }
  /**
  * Clear all resolved instances
  */
  clearInstances() {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[12]++;
    cov_r1zyd7um5().s[49]++;
    this.config.logger("Clearing all service instances");
    /* istanbul ignore next */
    cov_r1zyd7um5().s[50]++;
    this.instances.clear();
    /* istanbul ignore next */
    cov_r1zyd7um5().s[51]++;
    this.resolving.clear();
  }
  /**
  * Get all registered service keys
  */
  getRegisteredKeys() {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[13]++;
    cov_r1zyd7um5().s[52]++;
    return Array.from(this.factories.keys());
  }
  /**
  * Get container statistics (useful for debugging)
  */
  getStats() {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[14]++;
    cov_r1zyd7um5().s[53]++;
    return {
      registeredServices: this.factories.size,
      resolvedInstances: this.instances.size,
      currentlyResolving: this.resolving.size
    };
  }
  /**
  * Register browser APIs abstraction
  */
  registerBrowserAPIs(apis) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[15]++;
    cov_r1zyd7um5().s[54]++;
    // Register complete browser APIs object
    if (
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[11][0]++, apis.localStorage) &&
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[11][1]++, apis.navigator) &&
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[11][2]++, apis.window) &&
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[11][3]++, apis.document) &&
    /* istanbul ignore next */
    (cov_r1zyd7um5().b[11][4]++, apis.performance)) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[10][0]++;
      cov_r1zyd7um5().s[55]++;
      this.registerCustom("browser.apis", () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[16]++;
        cov_r1zyd7um5().s[56]++;
        return {
          localStorage: apis.localStorage,
          sessionStorage:
          /* istanbul ignore next */
          (cov_r1zyd7um5().b[12][0]++, apis.sessionStorage) ||
          /* istanbul ignore next */
          (cov_r1zyd7um5().b[12][1]++, apis.window.sessionStorage),
          navigator: apis.navigator,
          window: apis.window,
          document: apis.document,
          performance: apis.performance
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[10][1]++;
    }
    // Register individual APIs
    cov_r1zyd7um5().s[57]++;
    if (apis.localStorage) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[13][0]++;
      cov_r1zyd7um5().s[58]++;
      this.registerCustom("browser.localStorage", () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[17]++;
        cov_r1zyd7um5().s[59]++;
        return apis.localStorage;
      });
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[13][1]++;
    }
    cov_r1zyd7um5().s[60]++;
    if (apis.navigator) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[14][0]++;
      cov_r1zyd7um5().s[61]++;
      this.registerCustom("browser.navigator", () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[18]++;
        cov_r1zyd7um5().s[62]++;
        return apis.navigator;
      });
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[14][1]++;
    }
    cov_r1zyd7um5().s[63]++;
    if (apis.window) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[15][0]++;
      cov_r1zyd7um5().s[64]++;
      this.registerCustom("browser.window", () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[19]++;
        cov_r1zyd7um5().s[65]++;
        return apis.window;
      });
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[15][1]++;
    }
    cov_r1zyd7um5().s[66]++;
    if (apis.document) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[16][0]++;
      cov_r1zyd7um5().s[67]++;
      this.registerCustom("browser.document", () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[20]++;
        cov_r1zyd7um5().s[68]++;
        return apis.document;
      });
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[16][1]++;
    }
    cov_r1zyd7um5().s[69]++;
    if (apis.performance) {
      /* istanbul ignore next */
      cov_r1zyd7um5().b[17][0]++;
      cov_r1zyd7um5().s[70]++;
      this.registerCustom("browser.performance", () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[21]++;
        cov_r1zyd7um5().s[71]++;
        return apis.performance;
      });
    } else
    /* istanbul ignore next */
    {
      cov_r1zyd7um5().b[17][1]++;
    }
  }
  /**
  * Register platform services using the existing WebPlatformService
  */
  registerPlatformServices() {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[22]++;
    cov_r1zyd7um5().s[72]++;
    // For Phase 1, we keep it simple and register a factory that will
    // import WebPlatformService when first accessed
    this.registerCustom("platform.service", () => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[23]++;
      const {
        WebPlatformService
      } =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[73]++, require("../platform/web/WebPlatformService"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[74]++;
      return new WebPlatformService();
    });
    // Register individual services that delegate to the main service
    /* istanbul ignore next */
    cov_r1zyd7um5().s[75]++;
    this.register("platform.storage", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[24]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[76]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[77]++;
      return platformService.storage;
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[78]++;
    this.register("platform.notifications", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[25]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[79]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[80]++;
      return platformService.notifications;
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[81]++;
    this.register("platform.device", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[26]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[82]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[83]++;
      return platformService.device;
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[84]++;
    this.register("platform.performance", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[27]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[85]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[86]++;
      return platformService.performance;
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[87]++;
    this.register("platform.clipboard", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[28]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[88]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[89]++;
      return platformService.clipboard;
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[90]++;
    this.register("platform.share", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[29]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[91]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[92]++;
      return platformService.share;
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[93]++;
    this.register("platform.analytics", container => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[30]++;
      const platformService =
      /* istanbul ignore next */
      (cov_r1zyd7um5().s[94]++, container.resolveCustom("platform.service"));
      /* istanbul ignore next */
      cov_r1zyd7um5().s[95]++;
      return platformService.analytics;
    });
  }
  /**
  * Create a child container with same factories but separate instances
  */
  createChild(config) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[31]++;
    const child =
    /* istanbul ignore next */
    (cov_r1zyd7um5().s[96]++, new ServiceContainer({
      ...this.config,
      ...config
    }));
    // Copy all factories to child
    /* istanbul ignore next */
    cov_r1zyd7um5().s[97]++;
    this.factories.forEach((factory, key) => {
      /* istanbul ignore next */
      cov_r1zyd7um5().f[32]++;
      cov_r1zyd7um5().s[98]++;
      child.factories.set(key, factory);
    });
    /* istanbul ignore next */
    cov_r1zyd7um5().s[99]++;
    return child;
  }
  /**
  * Creates a new service container
  *
  * @param {ServiceContainerConfig} config - Configuration options
  * @param {boolean} [config.useSingletons=true] - Whether to cache service instances
  * @param {boolean} [config.validateKeys=true] - Whether to validate service keys
  * @param {Function} [config.logger] - Optional logger function
  */
  constructor(config =
  /* istanbul ignore next */
  (cov_r1zyd7um5().b[18][0]++, {})) {
    /* istanbul ignore next */
    cov_r1zyd7um5().f[33]++;
    cov_r1zyd7um5().s[100]++;
    _define_property(this, "factories", new Map());
    /* istanbul ignore next */
    cov_r1zyd7um5().s[101]++;
    _define_property(this, "instances", new Map());
    /* istanbul ignore next */
    cov_r1zyd7um5().s[102]++;
    _define_property(this, "resolving", new Set()); // For circular dependency detection
    /* istanbul ignore next */
    cov_r1zyd7um5().s[103]++;
    _define_property(this, "config", void 0);
    /* istanbul ignore next */
    cov_r1zyd7um5().s[104]++;
    this.config = {
      useSingletons: true,
      validateKeys: true,
      logger:
      /* istanbul ignore next */
      (cov_r1zyd7um5().b[19][0]++, config.logger) ||
      /* istanbul ignore next */
      (cov_r1zyd7um5().b[19][1]++, () => {
        /* istanbul ignore next */
        cov_r1zyd7um5().f[34]++;
      }),
      ...config
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcjF6eWQ3dW01IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJ2ZXJzaW9uIiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwibmFtZXMiLCJtYXBwaW5ncyIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJTZXJ2aWNlQ29udGFpbmVyIiwiY3JlYXRlUHJvZHVjdGlvbkNvbnRhaW5lciIsImNvbnRhaW5lciIsIndpbmRvdyIsInJlZ2lzdGVyQnJvd3NlckFQSXMiLCJsb2NhbFN0b3JhZ2UiLCJzZXNzaW9uU3RvcmFnZSIsIm5hdmlnYXRvciIsImRvY3VtZW50IiwicGVyZm9ybWFuY2UiLCJyZWdpc3RlclBsYXRmb3JtU2VydmljZXMiLCJjcmVhdGVUZXN0Q29udGFpbmVyIiwibW9ja0FQSXMiLCJhcGlzIiwiX21vY2tzIiwiY3JlYXRlTW9ja1N0b3JhZ2UiLCJjcmVhdGVNb2NrTmF2aWdhdG9yIiwiY3JlYXRlTW9ja1dpbmRvdyIsImNyZWF0ZU1vY2tEb2N1bWVudCIsImNyZWF0ZU1vY2tQZXJmb3JtYW5jZSIsInJlZ2lzdGVyIiwia2V5IiwiZmFjdG9yeSIsInJlZ2lzdGVySW50ZXJuYWwiLCJyZWdpc3RlckN1c3RvbSIsImNvbmZpZyIsInZhbGlkYXRlS2V5cyIsImZhY3RvcmllcyIsImhhcyIsIl90eXBlcyIsIlNlcnZpY2VBbHJlYWR5UmVnaXN0ZXJlZEVycm9yIiwibG9nZ2VyIiwic2V0IiwiaW5zdGFuY2VzIiwiZGVsZXRlIiwicmVzb2x2ZSIsInJlc29sdmVJbnRlcm5hbCIsInJlc29sdmVDdXN0b20iLCJyZXNvbHZpbmciLCJjaGFpbiIsIkFycmF5IiwiZnJvbSIsInB1c2giLCJDaXJjdWxhckRlcGVuZGVuY3lFcnJvciIsInVzZVNpbmdsZXRvbnMiLCJnZXQiLCJTZXJ2aWNlTm90Rm91bmRFcnJvciIsImFkZCIsImluc3RhbmNlIiwiaGFzQ3VzdG9tIiwiY2xlYXJJbnN0YW5jZXMiLCJjbGVhciIsImdldFJlZ2lzdGVyZWRLZXlzIiwia2V5cyIsImdldFN0YXRzIiwicmVnaXN0ZXJlZFNlcnZpY2VzIiwic2l6ZSIsInJlc29sdmVkSW5zdGFuY2VzIiwiY3VycmVudGx5UmVzb2x2aW5nIiwiV2ViUGxhdGZvcm1TZXJ2aWNlIiwicmVxdWlyZSIsInBsYXRmb3JtU2VydmljZSIsInN0b3JhZ2UiLCJub3RpZmljYXRpb25zIiwiZGV2aWNlIiwiY2xpcGJvYXJkIiwic2hhcmUiLCJhbmFseXRpY3MiLCJjcmVhdGVDaGlsZCIsImNoaWxkIiwiZm9yRWFjaCIsImNvbnN0cnVjdG9yIiwiX2RlZmluZV9wcm9wZXJ0eSIsIk1hcCIsIlNldCJdLCJzb3VyY2VzIjpbIi9ob21lL3RoZWh1L2Nvb2xQcm9qZWN0cy9FbmRnYW1lVHJhaW5lci10cmFpbmluZy1ib2FyZC1jb21wbGV0ZS9zcmMvc2hhcmVkL3NlcnZpY2VzL2NvbnRhaW5lci9TZXJ2aWNlQ29udGFpbmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgU2VydmljZSBDb250YWluZXIgSW1wbGVtZW50YXRpb25cbiAqIEBtb2R1bGUgc2VydmljZXMvY29udGFpbmVyL1NlcnZpY2VDb250YWluZXJcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIExpZ2h0d2VpZ2h0IGRlcGVuZGVuY3kgaW5qZWN0aW9uIGNvbnRhaW5lciBmb3IgcGxhdGZvcm0gc2VydmljZXMuXG4gKiBQcm92aWRlcyBhIGNlbnRyYWxpemVkIHdheSB0byBtYW5hZ2Ugc2VydmljZSBpbnN0YW5jZXMgYW5kIHRoZWlyIGRlcGVuZGVuY2llcyxcbiAqIHN1cHBvcnRpbmcgYm90aCBzaW5nbGV0b24gYW5kIGZhY3RvcnkgcGF0dGVybnMgd2l0aCBjaXJjdWxhciBkZXBlbmRlbmN5IGRldGVjdGlvbi5cbiAqXG4gKiBAcmVtYXJrc1xuICogS2V5IGZlYXR1cmVzOlxuICogLSBMYXp5IHNlcnZpY2UgaW5zdGFudGlhdGlvblxuICogLSBTaW5nbGV0b24gYW5kIGZhY3RvcnkgcGF0dGVybnNcbiAqIC0gQ2lyY3VsYXIgZGVwZW5kZW5jeSBkZXRlY3Rpb25cbiAqIC0gTW9jayBzZXJ2aWNlcyBmb3IgdGVzdGluZ1xuICogLSBCcm93c2VyIEFQSSBhYnN0cmFjdGlvblxuICogLSBUeXBlLXNhZmUgc2VydmljZSByZWdpc3RyeVxuICovXG5cbmltcG9ydCB7XG4gIElTZXJ2aWNlQ29udGFpbmVyLFxuICBTZXJ2aWNlUmVnaXN0cnksXG4gIFNlcnZpY2VGYWN0b3J5LFxuICBTZXJ2aWNlQ29udGFpbmVyQ29uZmlnLFxuICBTZXJ2aWNlTm90Rm91bmRFcnJvcixcbiAgU2VydmljZUFscmVhZHlSZWdpc3RlcmVkRXJyb3IsXG4gIENpcmN1bGFyRGVwZW5kZW5jeUVycm9yLFxuICBJQnJvd3NlckFQSXMsXG59IGZyb20gXCIuL3R5cGVzXCI7XG5pbXBvcnQge1xuICBjcmVhdGVNb2NrU3RvcmFnZSxcbiAgY3JlYXRlTW9ja05hdmlnYXRvcixcbiAgY3JlYXRlTW9ja1dpbmRvdyxcbiAgY3JlYXRlTW9ja0RvY3VtZW50LFxuICBjcmVhdGVNb2NrUGVyZm9ybWFuY2UsXG59IGZyb20gXCIuL21vY2tzXCI7XG5cbi8qKlxuICogU2VydmljZSBDb250YWluZXIgaW1wbGVtZW50YXRpb24gZm9yIGRlcGVuZGVuY3kgaW5qZWN0aW9uXG4gKlxuICogQGNsYXNzIFNlcnZpY2VDb250YWluZXJcbiAqIEBpbXBsZW1lbnRzIHtJU2VydmljZUNvbnRhaW5lcn1cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIE1hbmFnZXMgc2VydmljZSByZWdpc3RyYXRpb24sIGluc3RhbnRpYXRpb24sIGFuZCBkZXBlbmRlbmN5IHJlc29sdXRpb24uXG4gKiBTdXBwb3J0cyBib3RoIHNpbmdsZXRvbiBhbmQgZmFjdG9yeSBwYXR0ZXJucyB3aXRoIGF1dG9tYXRpYyBjaXJjdWxhclxuICogZGVwZW5kZW5jeSBkZXRlY3Rpb24uXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIC8vIENyZWF0ZSBhIGNvbnRhaW5lclxuICogY29uc3QgY29udGFpbmVyID0gbmV3IFNlcnZpY2VDb250YWluZXIoeyB1c2VTaW5nbGV0b25zOiB0cnVlIH0pO1xuICpcbiAqIC8vIFJlZ2lzdGVyIGEgc2VydmljZSBmYWN0b3J5XG4gKiBjb250YWluZXIucmVnaXN0ZXIoJ3N0b3JhZ2UnLCAoY29udGFpbmVyKSA9PiB7XG4gKiAgIHJldHVybiBuZXcgU3RvcmFnZVNlcnZpY2UoY29udGFpbmVyLmdldCgncGxhdGZvcm0nKSk7XG4gKiB9KTtcbiAqXG4gKiAvLyBHZXQgc2VydmljZSBpbnN0YW5jZVxuICogY29uc3Qgc3RvcmFnZSA9IGNvbnRhaW5lci5nZXQ8SVN0b3JhZ2VTZXJ2aWNlPignc3RvcmFnZScpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBTZXJ2aWNlQ29udGFpbmVyIGltcGxlbWVudHMgSVNlcnZpY2VDb250YWluZXIge1xuICBwcml2YXRlIGZhY3RvcmllcyA9IG5ldyBNYXA8c3RyaW5nLCBTZXJ2aWNlRmFjdG9yeTxhbnk+PigpO1xuICBwcml2YXRlIGluc3RhbmNlcyA9IG5ldyBNYXA8c3RyaW5nLCBhbnk+KCk7XG4gIHByaXZhdGUgcmVzb2x2aW5nID0gbmV3IFNldDxzdHJpbmc+KCk7IC8vIEZvciBjaXJjdWxhciBkZXBlbmRlbmN5IGRldGVjdGlvblxuICBwcml2YXRlIGNvbmZpZzogU2VydmljZUNvbnRhaW5lckNvbmZpZztcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBzZXJ2aWNlIGNvbnRhaW5lclxuICAgKlxuICAgKiBAcGFyYW0ge1NlcnZpY2VDb250YWluZXJDb25maWd9IGNvbmZpZyAtIENvbmZpZ3VyYXRpb24gb3B0aW9uc1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtjb25maWcudXNlU2luZ2xldG9ucz10cnVlXSAtIFdoZXRoZXIgdG8gY2FjaGUgc2VydmljZSBpbnN0YW5jZXNcbiAgICogQHBhcmFtIHtib29sZWFufSBbY29uZmlnLnZhbGlkYXRlS2V5cz10cnVlXSAtIFdoZXRoZXIgdG8gdmFsaWRhdGUgc2VydmljZSBrZXlzXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjb25maWcubG9nZ2VyXSAtIE9wdGlvbmFsIGxvZ2dlciBmdW5jdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoY29uZmlnOiBTZXJ2aWNlQ29udGFpbmVyQ29uZmlnID0ge30pIHtcbiAgICB0aGlzLmNvbmZpZyA9IHtcbiAgICAgIHVzZVNpbmdsZXRvbnM6IHRydWUsXG4gICAgICB2YWxpZGF0ZUtleXM6IHRydWUsXG4gICAgICBsb2dnZXI6IGNvbmZpZy5sb2dnZXIgfHwgKCgpID0+IHt9KSwgLy8gTm8tb3AgbG9nZ2VyIGJ5IGRlZmF1bHRcbiAgICAgIC4uLmNvbmZpZyxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIHByb2R1Y3Rpb24gY29udGFpbmVyIHdpdGggcmVhbCBicm93c2VyIEFQSXNcbiAgICpcbiAgICogQHN0YXRpY1xuICAgKiBAcmV0dXJucyB7U2VydmljZUNvbnRhaW5lcn0gQ29udGFpbmVyIGNvbmZpZ3VyZWQgZm9yIHByb2R1Y3Rpb24gdXNlXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29uc3QgY29udGFpbmVyID0gU2VydmljZUNvbnRhaW5lci5jcmVhdGVQcm9kdWN0aW9uQ29udGFpbmVyKCk7XG4gICAqIGNvbnN0IHBsYXRmb3JtID0gY29udGFpbmVyLmdldCgncGxhdGZvcm0nKTtcbiAgICogYGBgXG4gICAqL1xuICBzdGF0aWMgY3JlYXRlUHJvZHVjdGlvbkNvbnRhaW5lcigpOiBTZXJ2aWNlQ29udGFpbmVyIHtcbiAgICBjb25zdCBjb250YWluZXIgPSBuZXcgU2VydmljZUNvbnRhaW5lcigpO1xuXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGNvbnRhaW5lci5yZWdpc3RlckJyb3dzZXJBUElzKHtcbiAgICAgICAgbG9jYWxTdG9yYWdlOiB3aW5kb3cubG9jYWxTdG9yYWdlLFxuICAgICAgICBzZXNzaW9uU3RvcmFnZTogd2luZG93LnNlc3Npb25TdG9yYWdlLFxuICAgICAgICBuYXZpZ2F0b3I6IHdpbmRvdy5uYXZpZ2F0b3IsXG4gICAgICAgIHdpbmRvdzogd2luZG93LFxuICAgICAgICBkb2N1bWVudDogd2luZG93LmRvY3VtZW50LFxuICAgICAgICBwZXJmb3JtYW5jZTogd2luZG93LnBlcmZvcm1hbmNlLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIFJlZ2lzdGVyIHBsYXRmb3JtIHNlcnZpY2VzXG4gICAgICBjb250YWluZXIucmVnaXN0ZXJQbGF0Zm9ybVNlcnZpY2VzKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYSB0ZXN0IGNvbnRhaW5lciB3aXRoIGJyb3dzZXIgQVBJIG1vY2tzXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBUaGlzIGlzIHRoZSBtYWluIGVudHJ5IHBvaW50IGZvciBKZXN0IHRlc3RzLiBDcmVhdGVzIGEgY29udGFpbmVyIHdpdGhcbiAgICogbW9ja2VkIGJyb3dzZXIgQVBJcyBhbmQgcGxhdGZvcm0gc2VydmljZXMgc3VpdGFibGUgZm9yIHRlc3RpbmcuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHBhcmFtIHtQYXJ0aWFsPElCcm93c2VyQVBJcz59IFttb2NrQVBJc10gLSBPcHRpb25hbCBjdXN0b20gbW9jayBpbXBsZW1lbnRhdGlvbnNcbiAgICogQHJldHVybnMge1NlcnZpY2VDb250YWluZXJ9IENvbnRhaW5lciBjb25maWd1cmVkIGZvciB0ZXN0aW5nXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogLy8gSW4gYSB0ZXN0IGZpbGVcbiAgICogY29uc3QgY29udGFpbmVyID0gU2VydmljZUNvbnRhaW5lci5jcmVhdGVUZXN0Q29udGFpbmVyKHtcbiAgICogICBsb2NhbFN0b3JhZ2U6IGN1c3RvbU1vY2tTdG9yYWdlXG4gICAqIH0pO1xuICAgKlxuICAgKiBjb25zdCBzdG9yYWdlID0gY29udGFpbmVyLmdldCgnc3RvcmFnZScpO1xuICAgKiBhd2FpdCBzdG9yYWdlLnNhdmUoJ2tleScsICd2YWx1ZScpO1xuICAgKiBgYGBcbiAgICovXG4gIHN0YXRpYyBjcmVhdGVUZXN0Q29udGFpbmVyKFxuICAgIG1vY2tBUElzPzogUGFydGlhbDxJQnJvd3NlckFQSXM+LFxuICApOiBTZXJ2aWNlQ29udGFpbmVyIHtcbiAgICBjb25zdCBjb250YWluZXIgPSBuZXcgU2VydmljZUNvbnRhaW5lcigpO1xuXG4gICAgLy8gUmVnaXN0ZXIgbW9jayBicm93c2VyIEFQSXNcbiAgICBjb25zdCBhcGlzID0ge1xuICAgICAgbG9jYWxTdG9yYWdlOiBjcmVhdGVNb2NrU3RvcmFnZSgpLFxuICAgICAgc2Vzc2lvblN0b3JhZ2U6IGNyZWF0ZU1vY2tTdG9yYWdlKCksXG4gICAgICBuYXZpZ2F0b3I6IGNyZWF0ZU1vY2tOYXZpZ2F0b3IoKSxcbiAgICAgIHdpbmRvdzogY3JlYXRlTW9ja1dpbmRvdygpLFxuICAgICAgZG9jdW1lbnQ6IGNyZWF0ZU1vY2tEb2N1bWVudCgpLFxuICAgICAgcGVyZm9ybWFuY2U6IGNyZWF0ZU1vY2tQZXJmb3JtYW5jZSgpLFxuICAgICAgLi4ubW9ja0FQSXMsXG4gICAgfTtcblxuICAgIGNvbnRhaW5lci5yZWdpc3RlckJyb3dzZXJBUElzKGFwaXMpO1xuXG4gICAgLy8gUmVnaXN0ZXIgcGxhdGZvcm0gc2VydmljZXMgd2l0aCBtb2NrZWQgZGVwZW5kZW5jaWVzXG4gICAgY29udGFpbmVyLnJlZ2lzdGVyUGxhdGZvcm1TZXJ2aWNlcygpO1xuXG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIHNlcnZpY2Ugd2l0aCB0eXBlLXNhZmUga2V5XG4gICAqXG4gICAqIEB0ZW1wbGF0ZSBLIC0gS2V5IGZyb20gdGhlIFNlcnZpY2VSZWdpc3RyeSB0eXBlXG4gICAqIEBwYXJhbSB7S30ga2V5IC0gU2VydmljZSBpZGVudGlmaWVyIGZyb20gU2VydmljZVJlZ2lzdHJ5XG4gICAqIEBwYXJhbSB7U2VydmljZUZhY3Rvcnk8U2VydmljZVJlZ2lzdHJ5W0tdPn0gZmFjdG9yeSAtIEZhY3RvcnkgZnVuY3Rpb24gdG8gY3JlYXRlIHNlcnZpY2VcbiAgICogQHRocm93cyB7U2VydmljZUFscmVhZHlSZWdpc3RlcmVkRXJyb3J9IElmIHNlcnZpY2UgaXMgYWxyZWFkeSByZWdpc3RlcmVkXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHR5cGVzY3JpcHRcbiAgICogY29udGFpbmVyLnJlZ2lzdGVyKCdzdG9yYWdlJywgKGNvbnRhaW5lcikgPT4ge1xuICAgKiAgIGNvbnN0IHBsYXRmb3JtID0gY29udGFpbmVyLmdldCgncGxhdGZvcm0nKTtcbiAgICogICByZXR1cm4gbmV3IFN0b3JhZ2VTZXJ2aWNlKHBsYXRmb3JtKTtcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgcmVnaXN0ZXI8SyBleHRlbmRzIGtleW9mIFNlcnZpY2VSZWdpc3RyeT4oXG4gICAga2V5OiBLLFxuICAgIGZhY3Rvcnk6IFNlcnZpY2VGYWN0b3J5PFNlcnZpY2VSZWdpc3RyeVtLXT4sXG4gICk6IHZvaWQge1xuICAgIHRoaXMucmVnaXN0ZXJJbnRlcm5hbChrZXkgYXMgc3RyaW5nLCBmYWN0b3J5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIHNlcnZpY2Ugd2l0aCBjdXN0b20ga2V5XG4gICAqL1xuICByZWdpc3RlckN1c3RvbTxUPihrZXk6IHN0cmluZywgZmFjdG9yeTogU2VydmljZUZhY3Rvcnk8VD4pOiB2b2lkIHtcbiAgICB0aGlzLnJlZ2lzdGVySW50ZXJuYWwoa2V5LCBmYWN0b3J5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbnRlcm5hbCByZWdpc3RyYXRpb24gbWV0aG9kXG4gICAqL1xuICBwcml2YXRlIHJlZ2lzdGVySW50ZXJuYWwoa2V5OiBzdHJpbmcsIGZhY3Rvcnk6IFNlcnZpY2VGYWN0b3J5PGFueT4pOiB2b2lkIHtcbiAgICBpZiAodGhpcy5jb25maWcudmFsaWRhdGVLZXlzICYmIHRoaXMuZmFjdG9yaWVzLmhhcyhrZXkpKSB7XG4gICAgICB0aHJvdyBuZXcgU2VydmljZUFscmVhZHlSZWdpc3RlcmVkRXJyb3Ioa2V5KTtcbiAgICB9XG5cbiAgICB0aGlzLmNvbmZpZy5sb2dnZXIhKGBSZWdpc3RlcmluZyBzZXJ2aWNlOiAke2tleX1gKTtcbiAgICB0aGlzLmZhY3Rvcmllcy5zZXQoa2V5LCBmYWN0b3J5KTtcblxuICAgIC8vIENsZWFyIGV4aXN0aW5nIGluc3RhbmNlIGlmIHJlLXJlZ2lzdGVyaW5nXG4gICAgaWYgKHRoaXMuaW5zdGFuY2VzLmhhcyhrZXkpKSB7XG4gICAgICB0aGlzLmluc3RhbmNlcy5kZWxldGUoa2V5KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVzb2x2ZSBhIHNlcnZpY2Ugd2l0aCB0eXBlLXNhZmUga2V5XG4gICAqL1xuICByZXNvbHZlPEsgZXh0ZW5kcyBrZXlvZiBTZXJ2aWNlUmVnaXN0cnk+KGtleTogSyk6IFNlcnZpY2VSZWdpc3RyeVtLXSB7XG4gICAgcmV0dXJuIHRoaXMucmVzb2x2ZUludGVybmFsKGtleSBhcyBzdHJpbmcpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlc29sdmUgYSBjdXN0b20gc2VydmljZVxuICAgKi9cbiAgcmVzb2x2ZUN1c3RvbTxUPihrZXk6IHN0cmluZyk6IFQge1xuICAgIHJldHVybiB0aGlzLnJlc29sdmVJbnRlcm5hbChrZXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEludGVybmFsIHJlc29sdXRpb24gbWV0aG9kXG4gICAqL1xuICBwcml2YXRlIHJlc29sdmVJbnRlcm5hbDxUPihrZXk6IHN0cmluZyk6IFQge1xuICAgIC8vIENoZWNrIGZvciBjaXJjdWxhciBkZXBlbmRlbmNpZXNcbiAgICBpZiAodGhpcy5yZXNvbHZpbmcuaGFzKGtleSkpIHtcbiAgICAgIGNvbnN0IGNoYWluID0gQXJyYXkuZnJvbSh0aGlzLnJlc29sdmluZyk7XG4gICAgICBjaGFpbi5wdXNoKGtleSk7XG4gICAgICB0aHJvdyBuZXcgQ2lyY3VsYXJEZXBlbmRlbmN5RXJyb3IoY2hhaW4pO1xuICAgIH1cblxuICAgIC8vIFJldHVybiBleGlzdGluZyBpbnN0YW5jZSBpZiB1c2luZyBzaW5nbGV0b25zXG4gICAgaWYgKHRoaXMuY29uZmlnLnVzZVNpbmdsZXRvbnMgJiYgdGhpcy5pbnN0YW5jZXMuaGFzKGtleSkpIHtcbiAgICAgIHRoaXMuY29uZmlnLmxvZ2dlciEoYFJldHVybmluZyBjYWNoZWQgaW5zdGFuY2U6ICR7a2V5fWApO1xuICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2VzLmdldChrZXkpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIGZhY3RvcnkgaXMgcmVnaXN0ZXJlZFxuICAgIGNvbnN0IGZhY3RvcnkgPSB0aGlzLmZhY3Rvcmllcy5nZXQoa2V5KTtcbiAgICBpZiAoIWZhY3RvcnkpIHtcbiAgICAgIHRocm93IG5ldyBTZXJ2aWNlTm90Rm91bmRFcnJvcihrZXkpO1xuICAgIH1cblxuICAgIC8vIE1hcmsgYXMgcmVzb2x2aW5nIGZvciBjaXJjdWxhciBkZXBlbmRlbmN5IGRldGVjdGlvblxuICAgIHRoaXMucmVzb2x2aW5nLmFkZChrZXkpO1xuXG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuY29uZmlnLmxvZ2dlciEoYENyZWF0aW5nIGluc3RhbmNlOiAke2tleX1gKTtcbiAgICAgIGNvbnN0IGluc3RhbmNlID0gZmFjdG9yeSh0aGlzKTtcblxuICAgICAgLy8gQ2FjaGUgaW5zdGFuY2UgaWYgdXNpbmcgc2luZ2xldG9uc1xuICAgICAgaWYgKHRoaXMuY29uZmlnLnVzZVNpbmdsZXRvbnMpIHtcbiAgICAgICAgdGhpcy5pbnN0YW5jZXMuc2V0KGtleSwgaW5zdGFuY2UpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIC8vIEFsd2F5cyByZW1vdmUgZnJvbSByZXNvbHZpbmcgc2V0XG4gICAgICB0aGlzLnJlc29sdmluZy5kZWxldGUoa2V5KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgc2VydmljZSBpcyByZWdpc3RlcmVkICh0eXBlLXNhZmUpXG4gICAqL1xuICBoYXM8SyBleHRlbmRzIGtleW9mIFNlcnZpY2VSZWdpc3RyeT4oa2V5OiBLKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmFjdG9yaWVzLmhhcyhrZXkgYXMgc3RyaW5nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBjdXN0b20gc2VydmljZSBpcyByZWdpc3RlcmVkXG4gICAqL1xuICBoYXNDdXN0b20oa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5mYWN0b3JpZXMuaGFzKGtleSk7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgYWxsIHJlc29sdmVkIGluc3RhbmNlc1xuICAgKi9cbiAgY2xlYXJJbnN0YW5jZXMoKTogdm9pZCB7XG4gICAgdGhpcy5jb25maWcubG9nZ2VyIShcIkNsZWFyaW5nIGFsbCBzZXJ2aWNlIGluc3RhbmNlc1wiKTtcbiAgICB0aGlzLmluc3RhbmNlcy5jbGVhcigpO1xuICAgIHRoaXMucmVzb2x2aW5nLmNsZWFyKCk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCByZWdpc3RlcmVkIHNlcnZpY2Uga2V5c1xuICAgKi9cbiAgZ2V0UmVnaXN0ZXJlZEtleXMoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuZmFjdG9yaWVzLmtleXMoKSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGNvbnRhaW5lciBzdGF0aXN0aWNzICh1c2VmdWwgZm9yIGRlYnVnZ2luZylcbiAgICovXG4gIGdldFN0YXRzKCk6IHtcbiAgICByZWdpc3RlcmVkU2VydmljZXM6IG51bWJlcjtcbiAgICByZXNvbHZlZEluc3RhbmNlczogbnVtYmVyO1xuICAgIGN1cnJlbnRseVJlc29sdmluZzogbnVtYmVyO1xuICB9IHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVnaXN0ZXJlZFNlcnZpY2VzOiB0aGlzLmZhY3Rvcmllcy5zaXplLFxuICAgICAgcmVzb2x2ZWRJbnN0YW5jZXM6IHRoaXMuaW5zdGFuY2VzLnNpemUsXG4gICAgICBjdXJyZW50bHlSZXNvbHZpbmc6IHRoaXMucmVzb2x2aW5nLnNpemUsXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBicm93c2VyIEFQSXMgYWJzdHJhY3Rpb25cbiAgICovXG4gIHJlZ2lzdGVyQnJvd3NlckFQSXMoXG4gICAgYXBpczogUGFydGlhbDx7XG4gICAgICBsb2NhbFN0b3JhZ2U6IFN0b3JhZ2U7XG4gICAgICBzZXNzaW9uU3RvcmFnZTogU3RvcmFnZTtcbiAgICAgIG5hdmlnYXRvcjogTmF2aWdhdG9yO1xuICAgICAgd2luZG93OiBXaW5kb3c7XG4gICAgICBkb2N1bWVudDogRG9jdW1lbnQ7XG4gICAgICBwZXJmb3JtYW5jZTogUGVyZm9ybWFuY2U7XG4gICAgfT4sXG4gICk6IHZvaWQge1xuICAgIC8vIFJlZ2lzdGVyIGNvbXBsZXRlIGJyb3dzZXIgQVBJcyBvYmplY3RcbiAgICBpZiAoXG4gICAgICBhcGlzLmxvY2FsU3RvcmFnZSAmJlxuICAgICAgYXBpcy5uYXZpZ2F0b3IgJiZcbiAgICAgIGFwaXMud2luZG93ICYmXG4gICAgICBhcGlzLmRvY3VtZW50ICYmXG4gICAgICBhcGlzLnBlcmZvcm1hbmNlXG4gICAgKSB7XG4gICAgICB0aGlzLnJlZ2lzdGVyQ3VzdG9tKFwiYnJvd3Nlci5hcGlzXCIsICgpID0+ICh7XG4gICAgICAgIGxvY2FsU3RvcmFnZTogYXBpcy5sb2NhbFN0b3JhZ2UhLFxuICAgICAgICBzZXNzaW9uU3RvcmFnZTogYXBpcy5zZXNzaW9uU3RvcmFnZSB8fCBhcGlzLndpbmRvdyEuc2Vzc2lvblN0b3JhZ2UsXG4gICAgICAgIG5hdmlnYXRvcjogYXBpcy5uYXZpZ2F0b3IhLFxuICAgICAgICB3aW5kb3c6IGFwaXMud2luZG93ISxcbiAgICAgICAgZG9jdW1lbnQ6IGFwaXMuZG9jdW1lbnQhLFxuICAgICAgICBwZXJmb3JtYW5jZTogYXBpcy5wZXJmb3JtYW5jZSEsXG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgLy8gUmVnaXN0ZXIgaW5kaXZpZHVhbCBBUElzXG4gICAgaWYgKGFwaXMubG9jYWxTdG9yYWdlKSB7XG4gICAgICB0aGlzLnJlZ2lzdGVyQ3VzdG9tKFwiYnJvd3Nlci5sb2NhbFN0b3JhZ2VcIiwgKCkgPT4gYXBpcy5sb2NhbFN0b3JhZ2UhKTtcbiAgICB9XG4gICAgaWYgKGFwaXMubmF2aWdhdG9yKSB7XG4gICAgICB0aGlzLnJlZ2lzdGVyQ3VzdG9tKFwiYnJvd3Nlci5uYXZpZ2F0b3JcIiwgKCkgPT4gYXBpcy5uYXZpZ2F0b3IhKTtcbiAgICB9XG4gICAgaWYgKGFwaXMud2luZG93KSB7XG4gICAgICB0aGlzLnJlZ2lzdGVyQ3VzdG9tKFwiYnJvd3Nlci53aW5kb3dcIiwgKCkgPT4gYXBpcy53aW5kb3chKTtcbiAgICB9XG4gICAgaWYgKGFwaXMuZG9jdW1lbnQpIHtcbiAgICAgIHRoaXMucmVnaXN0ZXJDdXN0b20oXCJicm93c2VyLmRvY3VtZW50XCIsICgpID0+IGFwaXMuZG9jdW1lbnQhKTtcbiAgICB9XG4gICAgaWYgKGFwaXMucGVyZm9ybWFuY2UpIHtcbiAgICAgIHRoaXMucmVnaXN0ZXJDdXN0b20oXCJicm93c2VyLnBlcmZvcm1hbmNlXCIsICgpID0+IGFwaXMucGVyZm9ybWFuY2UhKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgcGxhdGZvcm0gc2VydmljZXMgdXNpbmcgdGhlIGV4aXN0aW5nIFdlYlBsYXRmb3JtU2VydmljZVxuICAgKi9cbiAgcHJpdmF0ZSByZWdpc3RlclBsYXRmb3JtU2VydmljZXMoKTogdm9pZCB7XG4gICAgLy8gRm9yIFBoYXNlIDEsIHdlIGtlZXAgaXQgc2ltcGxlIGFuZCByZWdpc3RlciBhIGZhY3RvcnkgdGhhdCB3aWxsXG4gICAgLy8gaW1wb3J0IFdlYlBsYXRmb3JtU2VydmljZSB3aGVuIGZpcnN0IGFjY2Vzc2VkXG4gICAgdGhpcy5yZWdpc3RlckN1c3RvbShcInBsYXRmb3JtLnNlcnZpY2VcIiwgKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBXZWJQbGF0Zm9ybVNlcnZpY2UsXG4gICAgICB9ID0gcmVxdWlyZShcIi4uL3BsYXRmb3JtL3dlYi9XZWJQbGF0Zm9ybVNlcnZpY2VcIik7XG4gICAgICByZXR1cm4gbmV3IFdlYlBsYXRmb3JtU2VydmljZSgpO1xuICAgIH0pO1xuXG4gICAgLy8gUmVnaXN0ZXIgaW5kaXZpZHVhbCBzZXJ2aWNlcyB0aGF0IGRlbGVnYXRlIHRvIHRoZSBtYWluIHNlcnZpY2VcbiAgICB0aGlzLnJlZ2lzdGVyKFwicGxhdGZvcm0uc3RvcmFnZVwiLCAoY29udGFpbmVyKSA9PiB7XG4gICAgICBjb25zdCBwbGF0Zm9ybVNlcnZpY2UgPSBjb250YWluZXIucmVzb2x2ZUN1c3RvbShcbiAgICAgICAgXCJwbGF0Zm9ybS5zZXJ2aWNlXCIsXG4gICAgICApIGFzIGFueTtcbiAgICAgIHJldHVybiBwbGF0Zm9ybVNlcnZpY2Uuc3RvcmFnZTtcbiAgICB9KTtcblxuICAgIHRoaXMucmVnaXN0ZXIoXCJwbGF0Zm9ybS5ub3RpZmljYXRpb25zXCIsIChjb250YWluZXIpID0+IHtcbiAgICAgIGNvbnN0IHBsYXRmb3JtU2VydmljZSA9IGNvbnRhaW5lci5yZXNvbHZlQ3VzdG9tKFxuICAgICAgICBcInBsYXRmb3JtLnNlcnZpY2VcIixcbiAgICAgICkgYXMgYW55O1xuICAgICAgcmV0dXJuIHBsYXRmb3JtU2VydmljZS5ub3RpZmljYXRpb25zO1xuICAgIH0pO1xuXG4gICAgdGhpcy5yZWdpc3RlcihcInBsYXRmb3JtLmRldmljZVwiLCAoY29udGFpbmVyKSA9PiB7XG4gICAgICBjb25zdCBwbGF0Zm9ybVNlcnZpY2UgPSBjb250YWluZXIucmVzb2x2ZUN1c3RvbShcbiAgICAgICAgXCJwbGF0Zm9ybS5zZXJ2aWNlXCIsXG4gICAgICApIGFzIGFueTtcbiAgICAgIHJldHVybiBwbGF0Zm9ybVNlcnZpY2UuZGV2aWNlO1xuICAgIH0pO1xuXG4gICAgdGhpcy5yZWdpc3RlcihcInBsYXRmb3JtLnBlcmZvcm1hbmNlXCIsIChjb250YWluZXIpID0+IHtcbiAgICAgIGNvbnN0IHBsYXRmb3JtU2VydmljZSA9IGNvbnRhaW5lci5yZXNvbHZlQ3VzdG9tKFxuICAgICAgICBcInBsYXRmb3JtLnNlcnZpY2VcIixcbiAgICAgICkgYXMgYW55O1xuICAgICAgcmV0dXJuIHBsYXRmb3JtU2VydmljZS5wZXJmb3JtYW5jZTtcbiAgICB9KTtcblxuICAgIHRoaXMucmVnaXN0ZXIoXCJwbGF0Zm9ybS5jbGlwYm9hcmRcIiwgKGNvbnRhaW5lcikgPT4ge1xuICAgICAgY29uc3QgcGxhdGZvcm1TZXJ2aWNlID0gY29udGFpbmVyLnJlc29sdmVDdXN0b20oXG4gICAgICAgIFwicGxhdGZvcm0uc2VydmljZVwiLFxuICAgICAgKSBhcyBhbnk7XG4gICAgICByZXR1cm4gcGxhdGZvcm1TZXJ2aWNlLmNsaXBib2FyZDtcbiAgICB9KTtcblxuICAgIHRoaXMucmVnaXN0ZXIoXCJwbGF0Zm9ybS5zaGFyZVwiLCAoY29udGFpbmVyKSA9PiB7XG4gICAgICBjb25zdCBwbGF0Zm9ybVNlcnZpY2UgPSBjb250YWluZXIucmVzb2x2ZUN1c3RvbShcbiAgICAgICAgXCJwbGF0Zm9ybS5zZXJ2aWNlXCIsXG4gICAgICApIGFzIGFueTtcbiAgICAgIHJldHVybiBwbGF0Zm9ybVNlcnZpY2Uuc2hhcmU7XG4gICAgfSk7XG5cbiAgICB0aGlzLnJlZ2lzdGVyKFwicGxhdGZvcm0uYW5hbHl0aWNzXCIsIChjb250YWluZXIpID0+IHtcbiAgICAgIGNvbnN0IHBsYXRmb3JtU2VydmljZSA9IGNvbnRhaW5lci5yZXNvbHZlQ3VzdG9tKFxuICAgICAgICBcInBsYXRmb3JtLnNlcnZpY2VcIixcbiAgICAgICkgYXMgYW55O1xuICAgICAgcmV0dXJuIHBsYXRmb3JtU2VydmljZS5hbmFseXRpY3M7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGEgY2hpbGQgY29udGFpbmVyIHdpdGggc2FtZSBmYWN0b3JpZXMgYnV0IHNlcGFyYXRlIGluc3RhbmNlc1xuICAgKi9cbiAgY3JlYXRlQ2hpbGQoY29uZmlnPzogUGFydGlhbDxTZXJ2aWNlQ29udGFpbmVyQ29uZmlnPik6IFNlcnZpY2VDb250YWluZXIge1xuICAgIGNvbnN0IGNoaWxkID0gbmV3IFNlcnZpY2VDb250YWluZXIoe1xuICAgICAgLi4udGhpcy5jb25maWcsXG4gICAgICAuLi5jb25maWcsXG4gICAgfSk7XG5cbiAgICAvLyBDb3B5IGFsbCBmYWN0b3JpZXMgdG8gY2hpbGRcbiAgICB0aGlzLmZhY3Rvcmllcy5mb3JFYWNoKChmYWN0b3J5LCBrZXkpID0+IHtcbiAgICAgIGNoaWxkLmZhY3Rvcmllcy5zZXQoa2V5LCBmYWN0b3J5KTtcbiAgICB9KTtcblxuICAgIHJldHVybiBjaGlsZDtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkM7O0FBQUE7QUFBQSxTQUFBQSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsT0FBQTtNQUFBQyxPQUFBO01BQUFDLGNBQUE7TUFBQUMsS0FBQTtNQUFBQyxRQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBM0IsSUFBQTtFQUFBO0VBQUEsSUFBQTRCLFFBQUEsR0FBQTNCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBeUIsUUFBQSxDQUFBN0IsSUFBQSxLQUFBNkIsUUFBQSxDQUFBN0IsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTRCLFFBQUEsQ0FBQTdCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQXlCLGNBQUEsR0FBQUQsUUFBQSxDQUFBN0IsSUFBQTtFQUFBOzs7Ozs7Ozs7Ozs7Ozs7K0JBNkNZOzs7Ozs7V0FBQStC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