1710ccaba0b8e421fdd00b5b4affc292
/**
 * Mock for serverPositionService
 * Used in tests to simulate position navigation without database calls
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createServerPositionService () {
        return createServerPositionService;
    },
    get getServerPositionService () {
        return getServerPositionService;
    },
    get mockServerPositionService () {
        return mockServerPositionService;
    },
    get resetServerPositionService () {
        return resetServerPositionService;
    }
});
// Mock implementation of IPositionService for tests
const mockPositionService = {
    // Single position operations
    getPosition: jest.fn().mockResolvedValue(null),
    createPosition: jest.fn().mockResolvedValue(null),
    updatePosition: jest.fn().mockResolvedValue(null),
    deletePosition: jest.fn().mockResolvedValue(false),
    // Bulk position operations
    getAllPositions: jest.fn().mockResolvedValue([]),
    getPositionsByCategory: jest.fn().mockResolvedValue([]),
    getPositionsByDifficulty: jest.fn().mockResolvedValue([]),
    // Search and filtering
    searchPositions: jest.fn().mockResolvedValue([]),
    // Navigation - Return null by default (no next/previous positions)
    getNextPosition: jest.fn().mockResolvedValue(null),
    getPreviousPosition: jest.fn().mockResolvedValue(null),
    // Categories and chapters
    getCategories: jest.fn().mockResolvedValue([]),
    getChapters: jest.fn().mockResolvedValue([]),
    getChaptersByCategory: jest.fn().mockResolvedValue([]),
    // Statistics
    getTotalPositionCount: jest.fn().mockResolvedValue(0),
    getPositionCountByCategory: jest.fn().mockResolvedValue(0),
    // Cache management
    clearCache: jest.fn(),
    getCacheStats: jest.fn().mockReturnValue({
        size: 0,
        keys: [],
        enabled: false
    })
};
const createServerPositionService = jest.fn(()=>mockPositionService);
const getServerPositionService = jest.fn(()=>mockPositionService);
const resetServerPositionService = jest.fn();
const mockServerPositionService = mockPositionService;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RoZWh1L2Nvb2xQcm9qZWN0cy9FbmRnYW1lVHJhaW5lci10cmFpbmluZy1ib2FyZC1jb21wbGV0ZS9zcmMvc2hhcmVkL3NlcnZpY2VzL2RhdGFiYXNlL19fbW9ja3NfXy9zZXJ2ZXJQb3NpdGlvblNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2NrIGZvciBzZXJ2ZXJQb3NpdGlvblNlcnZpY2VcbiAqIFVzZWQgaW4gdGVzdHMgdG8gc2ltdWxhdGUgcG9zaXRpb24gbmF2aWdhdGlvbiB3aXRob3V0IGRhdGFiYXNlIGNhbGxzXG4gKi9cblxuaW1wb3J0IHsgSVBvc2l0aW9uU2VydmljZSB9IGZyb20gXCIuLi9JUG9zaXRpb25TZXJ2aWNlXCI7XG5cbi8vIE1vY2sgaW1wbGVtZW50YXRpb24gb2YgSVBvc2l0aW9uU2VydmljZSBmb3IgdGVzdHNcbmNvbnN0IG1vY2tQb3NpdGlvblNlcnZpY2U6IElQb3NpdGlvblNlcnZpY2UgPSB7XG4gIC8vIFNpbmdsZSBwb3NpdGlvbiBvcGVyYXRpb25zXG4gIGdldFBvc2l0aW9uOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUobnVsbCksXG4gIGNyZWF0ZVBvc2l0aW9uOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUobnVsbCksXG4gIHVwZGF0ZVBvc2l0aW9uOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUobnVsbCksXG4gIGRlbGV0ZVBvc2l0aW9uOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUoZmFsc2UpLFxuXG4gIC8vIEJ1bGsgcG9zaXRpb24gb3BlcmF0aW9uc1xuICBnZXRBbGxQb3NpdGlvbnM6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbXSksXG4gIGdldFBvc2l0aW9uc0J5Q2F0ZWdvcnk6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbXSksXG4gIGdldFBvc2l0aW9uc0J5RGlmZmljdWx0eTogamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKFtdKSxcblxuICAvLyBTZWFyY2ggYW5kIGZpbHRlcmluZ1xuICBzZWFyY2hQb3NpdGlvbnM6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbXSksXG5cbiAgLy8gTmF2aWdhdGlvbiAtIFJldHVybiBudWxsIGJ5IGRlZmF1bHQgKG5vIG5leHQvcHJldmlvdXMgcG9zaXRpb25zKVxuICBnZXROZXh0UG9zaXRpb246IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShudWxsKSxcbiAgZ2V0UHJldmlvdXNQb3NpdGlvbjogamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKG51bGwpLFxuXG4gIC8vIENhdGVnb3JpZXMgYW5kIGNoYXB0ZXJzXG4gIGdldENhdGVnb3JpZXM6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbXSksXG4gIGdldENoYXB0ZXJzOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUoW10pLFxuICBnZXRDaGFwdGVyc0J5Q2F0ZWdvcnk6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbXSksXG5cbiAgLy8gU3RhdGlzdGljc1xuICBnZXRUb3RhbFBvc2l0aW9uQ291bnQ6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSgwKSxcbiAgZ2V0UG9zaXRpb25Db3VudEJ5Q2F0ZWdvcnk6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSgwKSxcblxuICAvLyBDYWNoZSBtYW5hZ2VtZW50XG4gIGNsZWFyQ2FjaGU6IGplc3QuZm4oKSxcbiAgZ2V0Q2FjaGVTdGF0czogamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZSh7IHNpemU6IDAsIGtleXM6IFtdLCBlbmFibGVkOiBmYWxzZSB9KSxcbn07XG5cbi8vIEV4cG9ydCB0aGUgZmFjdG9yeSBmdW5jdGlvbnMgdGhhdCBhcmUgdXNlZCBpbiB0aGUgYWN0dWFsIGNvZGVcbmV4cG9ydCBjb25zdCBjcmVhdGVTZXJ2ZXJQb3NpdGlvblNlcnZpY2UgPSBqZXN0LmZuKCgpID0+IG1vY2tQb3NpdGlvblNlcnZpY2UpO1xuZXhwb3J0IGNvbnN0IGdldFNlcnZlclBvc2l0aW9uU2VydmljZSA9IGplc3QuZm4oKCkgPT4gbW9ja1Bvc2l0aW9uU2VydmljZSk7XG5leHBvcnQgY29uc3QgcmVzZXRTZXJ2ZXJQb3NpdGlvblNlcnZpY2UgPSBqZXN0LmZuKCk7XG5cbi8vIEV4cG9ydCB0aGUgbW9jayBzZXJ2aWNlIGZvciB0ZXN0IGFjY2Vzc1xuZXhwb3J0IGNvbnN0IG1vY2tTZXJ2ZXJQb3NpdGlvblNlcnZpY2UgPSBtb2NrUG9zaXRpb25TZXJ2aWNlOyJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJQb3NpdGlvblNlcnZpY2UiLCJnZXRTZXJ2ZXJQb3NpdGlvblNlcnZpY2UiLCJtb2NrU2VydmVyUG9zaXRpb25TZXJ2aWNlIiwicmVzZXRTZXJ2ZXJQb3NpdGlvblNlcnZpY2UiLCJtb2NrUG9zaXRpb25TZXJ2aWNlIiwiZ2V0UG9zaXRpb24iLCJqZXN0IiwiZm4iLCJtb2NrUmVzb2x2ZWRWYWx1ZSIsImNyZWF0ZVBvc2l0aW9uIiwidXBkYXRlUG9zaXRpb24iLCJkZWxldGVQb3NpdGlvbiIsImdldEFsbFBvc2l0aW9ucyIsImdldFBvc2l0aW9uc0J5Q2F0ZWdvcnkiLCJnZXRQb3NpdGlvbnNCeURpZmZpY3VsdHkiLCJzZWFyY2hQb3NpdGlvbnMiLCJnZXROZXh0UG9zaXRpb24iLCJnZXRQcmV2aW91c1Bvc2l0aW9uIiwiZ2V0Q2F0ZWdvcmllcyIsImdldENoYXB0ZXJzIiwiZ2V0Q2hhcHRlcnNCeUNhdGVnb3J5IiwiZ2V0VG90YWxQb3NpdGlvbkNvdW50IiwiZ2V0UG9zaXRpb25Db3VudEJ5Q2F0ZWdvcnkiLCJjbGVhckNhY2hlIiwiZ2V0Q2FjaGVTdGF0cyIsIm1vY2tSZXR1cm5WYWx1ZSIsInNpemUiLCJrZXlzIiwiZW5hYmxlZCJdLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDOzs7Ozs7Ozs7OztRQXVDWUE7ZUFBQUE7O1FBQ0FDO2VBQUFBOztRQUlBQztlQUFBQTs7UUFIQUM7ZUFBQUE7OztBQXJDYixvREFBb0Q7QUFDcEQsTUFBTUMsc0JBQXdDO0lBQzVDLDZCQUE2QjtJQUM3QkMsYUFBYUMsS0FBS0MsRUFBRSxHQUFHQyxpQkFBaUIsQ0FBQztJQUN6Q0MsZ0JBQWdCSCxLQUFLQyxFQUFFLEdBQUdDLGlCQUFpQixDQUFDO0lBQzVDRSxnQkFBZ0JKLEtBQUtDLEVBQUUsR0FBR0MsaUJBQWlCLENBQUM7SUFDNUNHLGdCQUFnQkwsS0FBS0MsRUFBRSxHQUFHQyxpQkFBaUIsQ0FBQztJQUU1QywyQkFBMkI7SUFDM0JJLGlCQUFpQk4sS0FBS0MsRUFBRSxHQUFHQyxpQkFBaUIsQ0FBQyxFQUFFO0lBQy9DSyx3QkFBd0JQLEtBQUtDLEVBQUUsR0FBR0MsaUJBQWlCLENBQUMsRUFBRTtJQUN0RE0sMEJBQTBCUixLQUFLQyxFQUFFLEdBQUdDLGlCQUFpQixDQUFDLEVBQUU7SUFFeEQsdUJBQXVCO0lBQ3ZCTyxpQkFBaUJULEtBQUtDLEVBQUUsR0FBR0MsaUJBQWlCLENBQUMsRUFBRTtJQUUvQyxtRUFBbUU7SUFDbkVRLGlCQUFpQlYsS0FBS0MsRUFBRSxHQUFHQyxpQkFBaUIsQ0FBQztJQUM3Q1MscUJBQXFCWCxLQUFLQyxFQUFFLEdBQUdDLGlCQUFpQixDQUFDO0lBRWpELDBCQUEwQjtJQUMxQlUsZUFBZVosS0FBS0MsRUFBRSxHQUFHQyxpQkFBaUIsQ0FBQyxFQUFFO0lBQzdDVyxhQUFhYixLQUFLQyxFQUFFLEdBQUdDLGlCQUFpQixDQUFDLEVBQUU7SUFDM0NZLHVCQUF1QmQsS0FBS0MsRUFBRSxHQUFHQyxpQkFBaUIsQ0FBQyxFQUFFO0lBRXJELGFBQWE7SUFDYmEsdUJBQXVCZixLQUFLQyxFQUFFLEdBQUdDLGlCQUFpQixDQUFDO0lBQ25EYyw0QkFBNEJoQixLQUFLQyxFQUFFLEdBQUdDLGlCQUFpQixDQUFDO0lBRXhELG1CQUFtQjtJQUNuQmUsWUFBWWpCLEtBQUtDLEVBQUU7SUFDbkJpQixlQUFlbEIsS0FBS0MsRUFBRSxHQUFHa0IsZUFBZSxDQUFDO1FBQUVDLE1BQU07UUFBR0MsTUFBTSxFQUFFO1FBQUVDLFNBQVM7SUFBTTtBQUMvRTtBQUdPLE1BQU01Qiw4QkFBOEJNLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSDtBQUNsRCxNQUFNSCwyQkFBMkJLLEtBQUtDLEVBQUUsQ0FBQyxJQUFNSDtBQUMvQyxNQUFNRCw2QkFBNkJHLEtBQUtDLEVBQUU7QUFHMUMsTUFBTUwsNEJBQTRCRSJ9