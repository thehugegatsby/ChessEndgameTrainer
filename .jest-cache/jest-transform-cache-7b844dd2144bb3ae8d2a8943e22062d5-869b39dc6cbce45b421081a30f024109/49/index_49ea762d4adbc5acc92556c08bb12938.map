{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/constants/index.ts"],"sourcesContent":["/**\n * @file Global constants for the Chess Endgame Trainer application\n * @module constants/index\n *\n * @description\n * Centralizes all magic numbers, configuration values, and constants used\n * throughout the Chess Endgame Trainer application. Provides comprehensive\n * configuration for caching, performance, UI, chess logic, evaluation,\n * training, and testing environments.\n *\n * @remarks\n * Key constant categories:\n * - Storage: LocalStorage and cache configurations\n * - Cache: LRU cache sizes and TTL values for various components\n * - Performance: Debouncing, throttling, and batch processing settings\n * - Tablebase: Lichess API timeouts and piece limits\n * - UI: Animation durations, breakpoints, and color schemes\n * - Chess: Game rules, piece limits, and position validation\n * - Evaluation: Score thresholds for move quality assessment\n * - Training: Spaced repetition and success rate configurations\n * - E2E: Testing selectors, timeouts, and mock data\n *\n * All constants use `as const` assertion for type safety and immutability.\n */\n\n/**\n * Storage configuration constants\n *\n * @description\n * Configuration values for localStorage, sessionStorage, and cache\n * management including size limits, compression thresholds, and TTL values.\n *\n * @example\n * ```typescript\n * const key = `${STORAGE.PREFIX}user_settings`;\n * if (dataSize > STORAGE.COMPRESSION_THRESHOLD) {\n *   // Compress before storing\n * }\n * ```\n */\nexport const STORAGE = {\n  PREFIX: \"chess_trainer_\",\n  MAX_SIZE_WEB: 100 * 1024 * 1024, // 100MB for web\n  MAX_SIZE_MOBILE: 50 * 1024 * 1024, // 50MB for mobile\n  COMPRESSION_THRESHOLD: 1024, // 1KB - compress data larger than this\n  CACHE_DURATION: 24 * 60 * 60 * 1000, // 24 hours in milliseconds\n} as const;\n\n/**\n * Cache configuration constants\n *\n * @description\n * Standardized cache sizes and TTL values across all application components.\n * Provides consistent caching behavior for evaluations, positions, analysis,\n * and tablebase results with appropriate memory and time limits.\n *\n * @example\n * ```typescript\n * const cache = new LRUCache(CACHE.EVALUATION_CACHE_SIZE);\n * const ttl = CACHE.ANALYSIS_CACHE_TTL;\n * ```\n */\nexport const CACHE = {\n  // Cache sizes - Standardized across all components\n  EVALUATION_CACHE_SIZE: 200, // Main evaluation cache in useEvaluation\n  BEST_MOVE_CACHE_SIZE: 500, // Best move cache size for EvaluationCache\n  LRU_DEFAULT_SIZE: 1000, // Default LRU cache size\n  LRU_MEMORY_PER_ITEM: 350, // Estimated bytes per cache item\n  CHESS_AWARE_CACHE_SIZE: 200, // Chess-aware cache default size (standardized)\n  TABLEBASE_CACHE_SIZE: 100, // Tablebase results cache size\n  POSITION_CACHE_SIZE: 200, // Position service cache size\n  ANALYSIS_CACHE_SIZE: 200, // Analysis results cache size\n  PARALLEL_EVALUATION_CACHE_SIZE: 200, // ParallelEvaluationService cache size\n\n  // Cache timeouts - Standardized TTL values\n  TABLEBASE_CACHE_TIMEOUT: 5 * 60 * 1000, // 5 minutes for tablebase cache\n  ANALYSIS_CACHE_TTL: 5 * 60 * 1000, // 5 minutes for analysis cache TTL\n  EVALUATION_CACHE_TTL: 30 * 60 * 1000, // 30 minutes for evaluation cache\n  BEST_MOVE_CACHE_TTL: 10 * 60 * 1000, // 10 minutes for best move cache (more volatile)\n  DEDUPLICATION_TTL: 10 * 1000, // 10 seconds for deduplication\n  CLEANUP_INTERVAL_TTL: 30 * 1000, // 30 seconds for cleanup intervals\n} as const;\n\n// Tablebase Constants\n/**\n *\n */\nexport const TABLEBASE = {\n  // Timeouts\n  EVALUATION_TIMEOUT: 7000, // 7 seconds for tablebase evaluation\n  TIMEOUT_BUFFER: 1000, // 1 second buffer added to timeouts\n  CACHE_TTL: 5 * 60 * 1000, // 5 minutes cache TTL\n  MAX_PIECES: 7, // Maximum pieces for tablebase lookup\n} as const;\n\n// UI Constants\nexport /**\n *\n */\nconst UI = {\n  ANIMATION_DURATION: 300, // 300ms for animations\n  TOAST_DURATION: 3000, // 3 seconds for toast messages\n  TOAST_FADE_DURATION: 300, // 300ms for toast fade animation\n  TOUCH_TARGET_MIN: 44, // 44px minimum touch target\n  BREAKPOINTS: {\n    MOBILE: 640, // Mobile breakpoint\n    TABLET: 1024, // Tablet breakpoint\n    DESKTOP: 1280, // Desktop breakpoint\n  },\n\n  // Evaluation color palette - synchronized with CSS variables\n  EVALUATION_COLORS: {\n    EXCELLENT: {\n      text: \"#10b981\", // Light green text\n      background: \"#065f46\", // Dark green background\n    },\n    GOOD: {\n      text: \"#3b82f6\", // Light blue text\n      background: \"#1e40af\", // Dark blue background\n    },\n    NEUTRAL: {\n      text: \"var(--text-secondary)\", // Secondary text color\n      background: \"var(--bg-accent)\", // Accent background\n    },\n    INACCURATE: {\n      text: \"#f59e0b\", // Light yellow/orange text\n      background: \"#92400e\", // Dark yellow/orange background\n    },\n    MISTAKE: {\n      text: \"#fb923c\", // Light orange text\n      background: \"#c2410c\", // Dark orange background\n    },\n    BLUNDER: {\n      text: \"#ef4444\", // Light red text\n      background: \"#991b1b\", // Dark red background\n    },\n  },\n} as const;\n\n// Chess Constants\nexport /**\n *\n */\nconst CHESS = {\n  BOARD_SIZE: 8,\n  STARTING_FEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n  MAX_MOVES_HISTORY: 500, // Maximum moves to keep in history\n  FIFTY_MOVE_RULE: 50, // Draw by fifty-move rule\n  THREEFOLD_REPETITION: 3, // Draw by repetition\n  TABLEBASE_PIECE_LIMIT: 7, // Maximum pieces for tablebase lookup\n  ENDGAME_PIECE_THRESHOLD: 7, // Piece count threshold for endgame\n\n  // Piece Count Limits (kept for general chess logic)\n  MAX_PIECES_PER_SIDE: 16, // Maximum pieces per side\n  MAX_PAWNS_PER_SIDE: 8, // Maximum pawns per side\n  KINGS_PER_SIDE: 1, // Exactly one king per side\n\n  // Starting piece counts for promotion validation\n  STARTING_PIECES: {\n    WHITE: { Q: 1, R: 2, B: 2, N: 2, P: 8 },\n    BLACK: { q: 1, r: 2, b: 2, n: 2, p: 8 },\n  },\n} as const;\n\n// Evaluation Constants\nexport /**\n *\n */\nconst EVALUATION = {\n  MATE_SCORE: 10000, // Score for checkmate\n  WINNING_THRESHOLD: 200, // Centipawns for winning advantage\n  DRAWING_THRESHOLD: 50, // Centipawns for draw range\n  BLUNDER_THRESHOLD: 300, // Centipawns lost for blunder\n  MISTAKE_THRESHOLD: 100, // Centipawns lost for mistake\n  INACCURACY_THRESHOLD: 50, // Centipawns lost for inaccuracy\n  TABLEBASE_TIMEOUT: 2000, // 2 seconds for tablebase lookup\n\n  // Multi-PV and move display configuration\n  MULTI_PV_COUNT: 3, // Number of alternative moves to analyze and display\n  MAX_DISPLAY_MOVES: 5, // Maximum moves that can be displayed in UI\n\n  // Critical position thresholds\n  CRITICAL_SCORE_THRESHOLD: 500, // Score threshold for critical positions\n  CRITICAL_MISTAKE_THRESHOLD: 200, // Threshold for critical mistakes\n  TABLEBASE_SCORE_LIMIT: 3000, // Limit for tablebase scores\n\n  // Priority calculation\n  BASE_PRIORITY: 100, // Base priority for positions\n  CRITICAL_PRIORITY_BOOST: 200, // Priority boost for critical positions\n  ENDGAME_PRIORITY_FACTOR: 20, // Factor for endgame priority\n\n  // ChessAwareCache configuration\n  CHESS_AWARE_CACHE: {\n    ENDGAME_THRESHOLD: 7, // 7 pieces or less = endgame\n    CRITICAL_SCORE_THRESHOLD: 500, // Centipawns for critical positions\n    ENDGAME_PRIORITY_BASE: 100, // Base priority for endgame positions\n    ENDGAME_PRIORITY_MULTIPLIER: 20, // Priority multiplier per missing piece\n    CRITICAL_POSITION_BOOST: 200, // Priority boost for critical positions\n    NON_ENDGAME_PRIORITY_BASE: 50, // Base priority for non-endgame positions\n  },\n\n  // Win/Loss thresholds for mistake checking\n  WIN_THRESHOLD: 300, // Positive score threshold for winning\n  LOSS_THRESHOLD: -300, // Negative score threshold for losing\n  MATE_THRESHOLD: 100000, // Threshold for mate scores\n\n  // Color display thresholds (in pawn units, 1 pawn = 100 centipawns)\n  COLOR_THRESHOLDS: {\n    DOMINATING: 5.0, // 5+ pawns - Dominating advantage\n    EXCELLENT: 2.0, // 2+ pawns - Excellent position\n    GOOD: 0.5, // 0.5+ pawns - Good advantage\n    NEUTRAL_UPPER: 0.5, // Upper bound for neutral\n    NEUTRAL_LOWER: -0.5, // Lower bound for neutral\n    INACCURATE: -2.0, // -2 to -0.5 pawns - Inaccurate\n    MISTAKE: -5.0, // -5 to -2 pawns - Mistake\n    // Below -5 pawns = Blunder\n  },\n\n  // Tablebase WDL thresholds\n  WDL_THRESHOLDS: {\n    WIN: 1, // WDL >= 1 = win/cursed-win\n    LOSS: -1, // WDL <= -1 = loss/blessed-loss\n    // WDL = 0 = draw\n  },\n} as const;\n\n// Training Constants\nexport /**\n *\n */\nconst TRAINING = {\n  MIN_MOVES_FOR_COMPLETION: 3, // Minimum moves to complete position\n  SUCCESS_RATE_THRESHOLD: 0.8, // 80% success rate\n  REPETITION_INTERVALS: [1, 3, 7, 14, 30], // Days for spaced repetition\n  MAX_HINTS: 3, // Maximum hints per position\n\n  // Spaced repetition multipliers\n  SUCCESS_MULTIPLIER: 2, // Interval multiplier on success\n  FAILURE_MULTIPLIER: 1, // Interval multiplier on failure\n\n  // Mock data for development\n  MOCK: {\n    DEFAULT_LESSON_COUNT: 10, // Default number of lessons in dashboard\n    SUCCESS_RATE_MIN: 0.7, // Minimum success rate for mock data\n    SUCCESS_RATE_RANGE: 0.3, // Range for success rate variation\n    DUE_TODAY_MAX: 3, // Maximum lessons due today\n    STREAK_MAX: 10, // Maximum current streak value\n    OVERALL_STREAK_MAX: 15, // Maximum overall streak value\n  },\n} as const;\n\n// Rating Constants - Centralized rating system thresholds\nexport /**\n *\n */\nconst RATING = {\n  // Base ratings\n  DEFAULT_RATING: 1200, // Default user rating\n  TEST_RATING: 1500, // Test user rating for E2E tests\n\n  // Skill level thresholds\n  BEGINNER_THRESHOLD: 1200, // Below this = beginner\n  INTERMEDIATE_THRESHOLD: 1800, // 1200-1800 = intermediate\n  ADVANCED_THRESHOLD: 2200, // 1800-2200 = advanced\n  EXPERT_THRESHOLD: 2200, // 2200+ = expert\n\n  // Rating change calculations\n  RATING_CHANGE_BASE: 32, // ELO-like rating change base\n} as const;\n\n// Network Constants\nexport /**\n *\n */\nconst NETWORK = {\n  API_TIMEOUT: 10000, // 10 seconds API timeout\n  TABLEBASE_API_TIMEOUT: 5000, // 5 seconds for tablebase API\n  RETRY_COUNT: 3, // Number of retries\n  RETRY_DELAY: 1000, // 1 second between retries\n  BATCH_UPLOAD_SIZE: 10, // Items to upload in batch\n} as const;\n\n// Time Constants (in milliseconds)\nexport /**\n *\n */\nconst TIME = {\n  SECOND: 1000,\n  MINUTE: 60 * 1000,\n  HOUR: 60 * 60 * 1000,\n  DAY: 24 * 60 * 60 * 1000,\n  WEEK: 7 * 24 * 60 * 60 * 1000,\n} as const;\n\n// Animation and Feedback Constants\nexport /**\n *\n */\nconst ANIMATION = {\n  // Training feedback animations\n  EVALUATION_FEEDBACK_DURATION: 2000, // 2 seconds for evaluation feedback display\n  MOVE_PLAY_DELAY_FAST: 500, // 0.5 seconds for fast move playback\n  MOVE_PLAY_DELAY_NORMAL: 1500, // 1.5 seconds for normal move playback\n  MOVE_PLAY_DELAY_SLOW: 2000, // 2 seconds for slow move playback\n\n  // Service timeouts\n  PARALLEL_EVALUATION_DELAY: 200, // 200ms delay for parallel evaluation\n  PARALLEL_EVALUATION_FALLBACK: 500, // 500ms fallback timeout\n  TABLEBASE_REQUEST_TIMEOUT: 5000, // 5 seconds for tablebase requests\n  WORKER_DELAY: 100, // 100ms delay for worker operations\n  MOCK_SERVICE_DELAY: 10, // 10ms delay for mock services\n\n  // Toast message durations\n  SUCCESS_TOAST_DURATION: 4000, // 4 seconds for success messages\n  ERROR_TOAST_DURATION: 3000, // 3 seconds for error messages\n\n  // E2E test timeouts\n  VIEWPORT_CHANGE_DELAY: 100, // 100ms delay for viewport changes\n  BREAKPOINT_DETECTION_TIMEOUT: 5000, // 5 seconds for breakpoint detection\n} as const;\n\n// Board and UI Dimensions\nexport /**\n *\n */\nconst DIMENSIONS = {\n  // Board sizes\n  DEFAULT_BOARD_SIZE: 400, // Default chessboard size in pixels\n  TRAINING_BOARD_SIZE: 600, // Training board size in pixels\n\n  // Panel heights\n  ANALYSIS_PANEL_HEIGHT: 400, // Analysis panel height in pixels\n\n  // Component minimum widths\n  MOVE_CONTAINER_MIN_WIDTH: 80, // Minimum width for move containers\n  MOVE_NUMBER_MIN_WIDTH: 20, // Minimum width for move numbers\n  MOVE_DISPLAY_MIN_WIDTH: 45, // Minimum width for move display\n\n  // Breakpoint values (for E2E tests)\n  MOBILE_BREAKPOINT: 768, // Mobile breakpoint threshold\n  TABLET_BREAKPOINT: 1024, // Tablet breakpoint threshold\n} as const;\n\n// E2E Testing Constants\nexport /**\n *\n */\nconst E2E = {\n  // Timeouts\n  TIMEOUTS: {\n    PAGE_LOAD: 2 * TIME.SECOND, // 2 seconds for page loads\n    PAGE_RELOAD: 3 * TIME.SECOND, // 3 seconds for page reloads\n    TABLEBASE_INIT: 3 * TIME.SECOND, // 3 seconds for tablebase initialization\n    MODAL_APPEAR: 1 * TIME.SECOND, // 1 second for modals to appear\n    ANIMATION: 500, // 500ms for animations\n  },\n\n  // Test Data\n  DATA: {\n    STORAGE_KEY: \"chess-trainer-storage\", // LocalStorage key for state persistence\n    USER: {\n      RATING: 1500, // Test user rating - Use RATING.TEST_RATING\n      STREAK: 5, // Test user streak\n    },\n    MOVES: [\n      { from: \"e2\", to: \"e4\", san: \"e4\" },\n      { from: \"e7\", to: \"e5\", san: \"e5\" },\n    ],\n    COMPLETED_POSITIONS: [1, 2], // Test completed positions\n    PREFERENCES: {\n      theme: \"light\" as const,\n      showCoordinates: false,\n      animationSpeed: \"fast\" as const,\n    },\n  },\n\n  // Selectors (data-testid based)\n  SELECTORS: {\n    // Navigation\n    NAV: {\n      TRAINING_LINK: '[data-testid=\"training-link\"]',\n      DASHBOARD_LINK: '[data-testid=\"nav-dashboard\"]',\n      NAVBAR: '[data-testid=\"navbar\"]',\n      NAVBAR_LOGO: '[data-testid=\"navbar-logo\"]',\n    },\n\n    // Chess Board\n    BOARD: '[data-testid=\"training-board\"]',\n    CHESSBOARD: '[data-testid=\"chessboard\"]',\n    /**\n     *\n     * @param square\n     */\n    SQUARE: (square: string) => `[data-square=\"${square}\"]`,\n    PIECE: \"[data-piece]\",\n\n    // Training Controls\n    BUTTONS: {\n      RESET: '[data-testid=\"reset-button\"]',\n      HINT: '[data-testid=\"hint-button\"]',\n      SOLUTION: '[data-testid=\"solution-button\"]',\n      NEXT_POSITION: '[data-testid=\"next-position-button\"]',\n      PREVIOUS_POSITION: '[data-testid=\"previous-position-button\"]',\n      UNDO: '[data-testid=\"undo-button\"]', // Future: Dedicated undo button\n    },\n\n    // Navigation Controls\n    NAVIGATION: {\n      FIRST: '[data-testid=\"nav-first\"]',\n      BACK: '[data-testid=\"nav-back\"]', // Current: Navigation-based undo\n      FORWARD: '[data-testid=\"nav-forward\"]',\n      LAST: '[data-testid=\"nav-last\"]',\n    },\n\n    // Error Recovery Elements\n    ERROR_RECOVERY: {\n      TOAST: '.toast, [data-testid=\"toast\"], .notification',\n      MISTAKE_COUNTER: '[data-testid=\"mistake-counter\"]',\n      TABLEBASE_ERROR: '[data-testid=\"tablebase-error\"]',\n      RETRY_BUTTON: '[data-testid=\"retry-tablebase\"]',\n      WARNING_DIALOG: '[data-testid=\"warning-dialog\"]',\n    },\n\n    // UI Elements\n    EVALUATION_DISPLAY: '[data-testid=\"evaluation-display\"]',\n    MOVE_COUNTER: '[data-testid=\"move-counter\"]',\n    ANALYSIS_STATUS: '[data-testid=\"analysis-status\"]',\n    POSITION_DESCRIPTION: '[data-testid=\"position-description\"]',\n    LOADING_SPINNER: '[data-testid=\"loading-spinner\"]',\n\n    // Modals\n    HINT_MODAL: '[data-testid=\"hint-modal\"]',\n    SOLUTION_MODAL: '[data-testid=\"solution-modal\"]',\n    PROMOTION_DIALOG: '[data-testid=\"promotion-dialog\"]',\n  },\n\n  // Routes/URLs\n  ROUTES: {\n    HOME: \"/\",\n    /**\n     *\n     * @param id\n     */\n    TRAIN: (id: number) => `/train/${id}`,\n    DASHBOARD: \"/dashboard\",\n  },\n\n  // Expected Messages/Texts\n  MESSAGES: {\n    SUCCESS: {\n      CORE_TRAINING_COMPLETE: \"Core Training Workflow completed successfully\",\n      TABLEBASE_VERIFIED: \"Tablebase initialization verified\",\n      STATE_PERSISTED: \"State persistence test completed successfully\",\n      POSITION_PRESERVED: \"Position navigation state preserved after reload\",\n      CORRUPTION_HANDLED: \"App handles localStorage corruption gracefully\",\n      PREFERENCES_PERSISTED: \"User preferences persisted across sessions\",\n      ERROR_RECOVERY_TESTED: \"Error recovery functionality tested successfully\",\n      UNDO_FUNCTIONALITY_TESTED:\n        \"Undo functionality and state consistency verified\",\n      MISTAKE_TRACKING_TESTED: \"Mistake tracking functionality verified\",\n      TABLEBASE_ERROR_RECOVERY_TESTED:\n        \"Tablebase error recovery scenarios tested\",\n    },\n    ERRORS: {\n      TABLEBASE_ERROR: /tablebase.*error/i,\n      GENERIC_ERROR: /error/i,\n      INVALID_MOVE: /invalid.*move/i,\n      WARNING: /warning/i,\n    },\n    WARNINGS: {\n      INVALID_MOVE: \"Invalid move\",\n      BAD_MOVE: \"Not the best move\",\n      MISTAKE: \"Mistake detected\",\n    },\n  },\n} as const;\n\n// Testing constants for test configuration\nexport /**\n *\n */\nconst TESTING = {\n  DEFAULT_TIMEOUT: 1000, // 1 second default timeout for API calls\n  POLL_INTERVAL: 50, // 50ms polling interval for status checks\n} as const;\n\n// System constants for platform services\nexport /**\n *\n */\nconst SYSTEM = {\n  GB_TO_BYTES_FACTOR: 1024 * 1024 * 1024, // Conversion factor GB to bytes\n  DEFAULT_MEMORY_GB: 4, // Default system memory allocation\n  LOW_MEMORY_THRESHOLD_GB: 4, // Low memory warning threshold\n} as const;\n\n/**\n * Type utilities for constants with strict typing\n *\n * @description\n * TypeScript type definitions for all constant objects, providing\n * compile-time type safety and intellisense support for constant usage\n * throughout the application.\n */\nexport type StorageConstants = typeof STORAGE;\nexport type CacheConstants = typeof CACHE;\nexport type UIConstants = typeof UI;\nexport type ChessConstants = typeof CHESS;\nexport type EvaluationConstants = typeof EVALUATION;\nexport type TrainingConstants = typeof TRAINING;\nexport type RatingConstants = typeof RATING;\nexport type NetworkConstants = typeof NETWORK;\nexport type TimeConstants = typeof TIME;\nexport type AnimationConstants = typeof ANIMATION;\nexport type DimensionsConstants = typeof DIMENSIONS;\nexport type E2EConstants = typeof E2E;\n"],"names":["ANIMATION","CACHE","CHESS","DIMENSIONS","E2E","EVALUATION","NETWORK","RATING","STORAGE","SYSTEM","TABLEBASE","TESTING","TIME","TRAINING","UI","PREFIX","MAX_SIZE_WEB","MAX_SIZE_MOBILE","COMPRESSION_THRESHOLD","CACHE_DURATION","EVALUATION_CACHE_SIZE","BEST_MOVE_CACHE_SIZE","LRU_DEFAULT_SIZE","LRU_MEMORY_PER_ITEM","CHESS_AWARE_CACHE_SIZE","TABLEBASE_CACHE_SIZE","POSITION_CACHE_SIZE","ANALYSIS_CACHE_SIZE","PARALLEL_EVALUATION_CACHE_SIZE","TABLEBASE_CACHE_TIMEOUT","ANALYSIS_CACHE_TTL","EVALUATION_CACHE_TTL","BEST_MOVE_CACHE_TTL","DEDUPLICATION_TTL","CLEANUP_INTERVAL_TTL","EVALUATION_TIMEOUT","TIMEOUT_BUFFER","CACHE_TTL","MAX_PIECES","ANIMATION_DURATION","TOAST_DURATION","TOAST_FADE_DURATION","TOUCH_TARGET_MIN","BREAKPOINTS","MOBILE","TABLET","DESKTOP","EVALUATION_COLORS","EXCELLENT","text","background","GOOD","NEUTRAL","INACCURATE","MISTAKE","BLUNDER","BOARD_SIZE","STARTING_FEN","MAX_MOVES_HISTORY","FIFTY_MOVE_RULE","THREEFOLD_REPETITION","TABLEBASE_PIECE_LIMIT","ENDGAME_PIECE_THRESHOLD","MAX_PIECES_PER_SIDE","MAX_PAWNS_PER_SIDE","KINGS_PER_SIDE","STARTING_PIECES","WHITE","Q","R","B","N","P","BLACK","q","r","b","n","p","MATE_SCORE","WINNING_THRESHOLD","DRAWING_THRESHOLD","BLUNDER_THRESHOLD","MISTAKE_THRESHOLD","INACCURACY_THRESHOLD","TABLEBASE_TIMEOUT","MULTI_PV_COUNT","MAX_DISPLAY_MOVES","CRITICAL_SCORE_THRESHOLD","CRITICAL_MISTAKE_THRESHOLD","TABLEBASE_SCORE_LIMIT","BASE_PRIORITY","CRITICAL_PRIORITY_BOOST","ENDGAME_PRIORITY_FACTOR","CHESS_AWARE_CACHE","ENDGAME_THRESHOLD","ENDGAME_PRIORITY_BASE","ENDGAME_PRIORITY_MULTIPLIER","CRITICAL_POSITION_BOOST","NON_ENDGAME_PRIORITY_BASE","WIN_THRESHOLD","LOSS_THRESHOLD","MATE_THRESHOLD","COLOR_THRESHOLDS","DOMINATING","NEUTRAL_UPPER","NEUTRAL_LOWER","WDL_THRESHOLDS","WIN","LOSS","MIN_MOVES_FOR_COMPLETION","SUCCESS_RATE_THRESHOLD","REPETITION_INTERVALS","MAX_HINTS","SUCCESS_MULTIPLIER","FAILURE_MULTIPLIER","MOCK","DEFAULT_LESSON_COUNT","SUCCESS_RATE_MIN","SUCCESS_RATE_RANGE","DUE_TODAY_MAX","STREAK_MAX","OVERALL_STREAK_MAX","DEFAULT_RATING","TEST_RATING","BEGINNER_THRESHOLD","INTERMEDIATE_THRESHOLD","ADVANCED_THRESHOLD","EXPERT_THRESHOLD","RATING_CHANGE_BASE","API_TIMEOUT","TABLEBASE_API_TIMEOUT","RETRY_COUNT","RETRY_DELAY","BATCH_UPLOAD_SIZE","SECOND","MINUTE","HOUR","DAY","WEEK","EVALUATION_FEEDBACK_DURATION","MOVE_PLAY_DELAY_FAST","MOVE_PLAY_DELAY_NORMAL","MOVE_PLAY_DELAY_SLOW","PARALLEL_EVALUATION_DELAY","PARALLEL_EVALUATION_FALLBACK","TABLEBASE_REQUEST_TIMEOUT","WORKER_DELAY","MOCK_SERVICE_DELAY","SUCCESS_TOAST_DURATION","ERROR_TOAST_DURATION","VIEWPORT_CHANGE_DELAY","BREAKPOINT_DETECTION_TIMEOUT","DEFAULT_BOARD_SIZE","TRAINING_BOARD_SIZE","ANALYSIS_PANEL_HEIGHT","MOVE_CONTAINER_MIN_WIDTH","MOVE_NUMBER_MIN_WIDTH","MOVE_DISPLAY_MIN_WIDTH","MOBILE_BREAKPOINT","TABLET_BREAKPOINT","TIMEOUTS","PAGE_LOAD","PAGE_RELOAD","TABLEBASE_INIT","MODAL_APPEAR","DATA","STORAGE_KEY","USER","STREAK","MOVES","from","to","san","COMPLETED_POSITIONS","PREFERENCES","theme","showCoordinates","animationSpeed","SELECTORS","NAV","TRAINING_LINK","DASHBOARD_LINK","NAVBAR","NAVBAR_LOGO","BOARD","CHESSBOARD","SQUARE","square","PIECE","BUTTONS","RESET","HINT","SOLUTION","NEXT_POSITION","PREVIOUS_POSITION","UNDO","NAVIGATION","FIRST","BACK","FORWARD","LAST","ERROR_RECOVERY","TOAST","MISTAKE_COUNTER","TABLEBASE_ERROR","RETRY_BUTTON","WARNING_DIALOG","EVALUATION_DISPLAY","MOVE_COUNTER","ANALYSIS_STATUS","POSITION_DESCRIPTION","LOADING_SPINNER","HINT_MODAL","SOLUTION_MODAL","PROMOTION_DIALOG","ROUTES","HOME","TRAIN","id","DASHBOARD","MESSAGES","SUCCESS","CORE_TRAINING_COMPLETE","TABLEBASE_VERIFIED","STATE_PERSISTED","POSITION_PRESERVED","CORRUPTION_HANDLED","PREFERENCES_PERSISTED","ERROR_RECOVERY_TESTED","UNDO_FUNCTIONALITY_TESTED","MISTAKE_TRACKING_TESTED","TABLEBASE_ERROR_RECOVERY_TESTED","ERRORS","GENERIC_ERROR","INVALID_MOVE","WARNING","WARNINGS","BAD_MOVE","DEFAULT_TIMEOUT","POLL_INTERVAL","GB_TO_BYTES_FACTOR","DEFAULT_MEMORY_GB","LOW_MEMORY_THRESHOLD_GB"],"mappings":"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"}