{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/config/constants.ts"],"sourcesContent":["/**\n * Central configuration constants for the application\n */\n\n/**\n * Application configuration constants containing all app-wide settings\n */\nexport const APP_CONFIG = {\n  /** Development server port */\n  DEV_PORT: 3002,\n  /** Development server host */\n  DEV_HOST: \"127.0.0.1\",\n  /**\n   * Get the development URL\n   * @returns The development server URL\n   */\n  get DEV_URL() {\n    return `http://${this.DEV_HOST}:${this.DEV_PORT}`;\n  },\n\n  /** Production URL */\n  PROD_URL: process.env.NEXT_PUBLIC_APP_URL || \"https://endgametrainer.com\",\n\n  /** API base URL */\n  API_BASE_URL: process.env.NEXT_PUBLIC_API_URL || \"/api\",\n  /** Lichess Tablebase API URL */\n  TABLEBASE_API_URL:\n    process.env.NEXT_PUBLIC_TABLEBASE_API_URL ||\n    \"https://tablebase.lichess.ovh\",\n\n  /** Feature flags */\n  FEATURES: {\n    /** Firebase integration enabled */\n    FIREBASE_ENABLED: process.env.NEXT_PUBLIC_FIREBASE_ENABLED === \"true\",\n    /** Analytics tracking enabled */\n    ANALYTICS_ENABLED: process.env.NEXT_PUBLIC_ANALYTICS_ENABLED === \"true\",\n  },\n} as const;\n\n// Environment helpers\n/**\n * Check if running in development mode\n */\nexport const isDevelopment = process.env.NODE_ENV === \"development\";\n\n/**\n * Check if running in production mode\n */\nexport const isProduction = process.env.NODE_ENV === \"production\";\n\n/**\n * Check if running in test mode\n */\nexport const isTest = process.env.NODE_ENV === \"test\";\n\n/**\n * Get the appropriate URL based on environment\n * @returns The application URL\n */\nexport const getAppUrl = (): string => {\n  if (isDevelopment || isTest) {\n    return APP_CONFIG.DEV_URL;\n  }\n  return APP_CONFIG.PROD_URL;\n};"],"names":["APP_CONFIG","getAppUrl","isDevelopment","isProduction","isTest","DEV_PORT","DEV_HOST","DEV_URL","PROD_URL","process","env","NEXT_PUBLIC_APP_URL","API_BASE_URL","NEXT_PUBLIC_API_URL","TABLEBASE_API_URL","NEXT_PUBLIC_TABLEBASE_API_URL","FEATURES","FIREBASE_ENABLED","NEXT_PUBLIC_FIREBASE_ENABLED","ANALYTICS_ENABLED","NEXT_PUBLIC_ANALYTICS_ENABLED","NODE_ENV"],"mappings":"AAAA;;CAEC,GAED;;CAEC;;;;;;;;;;;QACYA;eAAAA;;QAoDAC;eAAAA;;QAhBAC;eAAAA;;QAKAC;eAAAA;;QAKAC;eAAAA;;;AA9CN,MAAMJ,aAAa;IACxB,4BAA4B,GAC5BK,UAAU;IACV,4BAA4B,GAC5BC,UAAU;IACV;;;GAGC,GACD,IAAIC,WAAU;QACZ,OAAO,CAAC,OAAO,EAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACD,QAAQ,EAAE;IACnD;IAEA,mBAAmB,GACnBG,UAAUC,QAAQC,GAAG,CAACC,mBAAmB,IAAI;IAE7C,iBAAiB,GACjBC,cAAcH,QAAQC,GAAG,CAACG,mBAAmB,IAAI;IACjD,8BAA8B,GAC9BC,mBACEL,QAAQC,GAAG,CAACK,6BAA6B,IACzC;IAEF,kBAAkB,GAClBC,UAAU;QACR,iCAAiC,GACjCC,kBAAkBR,QAAQC,GAAG,CAACQ,4BAA4B,KAAK;QAC/D,+BAA+B,GAC/BC,mBAAmBV,QAAQC,GAAG,CAACU,6BAA6B,KAAK;IACnE;AACF;AAMO,MAAMlB,gBAAgBO,QAAQC,GAAG,CAACW,QAAQ,KAAK;AAK/C,MAAMlB,eAAeM,QAAQC,GAAG,CAACW,QAAQ,KAAK;AAK9C,MAAMjB,SAASK,QAAQC,GAAG,CAACW,QAAQ,KAAK;AAMxC,MAAMpB,YAAY;IACvB,IAAIC,iBAAiBE,QAAQ;QAC3B,OAAOJ,WAAWO,OAAO;IAC3B;IACA,OAAOP,WAAWQ,QAAQ;AAC5B"}