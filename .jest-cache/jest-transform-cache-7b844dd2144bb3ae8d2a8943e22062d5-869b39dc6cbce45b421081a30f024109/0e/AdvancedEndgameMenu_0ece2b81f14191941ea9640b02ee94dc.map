{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-training-board-complete/src/shared/components/navigation/AdvancedEndgameMenu.tsx"],"sourcesContent":["/**\n * @file Advanced endgame navigation menu component\n * @module components/navigation/AdvancedEndgameMenu\n *\n * @description\n * Comprehensive navigation menu for chess endgame training categories.\n * Provides hierarchical navigation through endgame categories and chapters,\n * user statistics display, and progress tracking. Features expandable\n * categories with lazy-loaded chapter data.\n *\n * @remarks\n * Key features:\n * - Hierarchical category and chapter navigation\n * - User statistics display (rating, games played, success rate)\n * - Lazy loading of chapter data on category expansion\n * - Position count display per category\n * - Current position highlighting\n * - Responsive sidebar design with slide-out functionality\n * - Error handling with user-friendly messages\n * - Persistent user stats via localStorage\n *\n * The component integrates with PositionService for data fetching\n * and provides a comprehensive overview of available training content.\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { getStoreDependencies } from \"@shared/store/storeConfig\";\nimport { EndgameCategory, EndgameChapter } from \"@shared/types\";\nimport { getLogger } from \"@shared/services/logging\";\n\nconst logger = getLogger().setContext(\"AdvancedEndgameMenu\");\n\n/**\n * Props for the AdvancedEndgameMenu component\n *\n * @interface AdvancedEndgameMenuProps\n *\n * @property {boolean} isOpen - Whether the menu is currently visible\n * @property {() => void} onClose - Callback to close the menu\n * @property {number} [currentPositionId] - ID of currently active position for highlighting\n */\ninterface AdvancedEndgameMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n  currentPositionId?: number;\n}\n\n/**\n * User statistics data structure\n *\n * @interface UserStats\n *\n * @property {number} rating - User's current rating\n * @property {number} totalPlayed - Total number of games played\n * @property {number} successRate - Success rate as percentage (0-100)\n */\ninterface UserStats {\n  rating: number;\n  totalPlayed: number;\n  successRate: number;\n}\n\n/**\n * Extended category data with navigation state\n *\n * @interface CategoryWithDetails\n * @description\n * Extends the base EndgameCategory with additional state for navigation\n * and lazy loading functionality.\n *\n * @property {number | null} positionCount - Number of positions in category\n * @property {EndgameChapter[]} [chapters] - Loaded chapters for this category\n * @property {boolean} [isLoadingChapters] - Whether chapters are currently loading\n * @property {boolean} [isExpanded] - Whether the category is expanded in the UI\n */\ninterface CategoryWithDetails extends EndgameCategory {\n  positionCount: number | null;\n  chapters?: EndgameChapter[];\n  isLoadingChapters?: boolean;\n  isExpanded?: boolean;\n}\n\n/**\n * Advanced endgame navigation menu component\n *\n * @component\n * @description\n * Comprehensive navigation sidebar for chess endgame training. Displays\n * hierarchical categories and chapters, user statistics, and provides\n * direct navigation to training positions. Features lazy loading for\n * performance and maintains state across sessions.\n *\n * @remarks\n * Component behavior:\n * - Loads all categories on mount with position counts\n * - Expands categories on click to load chapters\n * - Displays user statistics from localStorage\n * - Highlights current position when provided\n * - Handles loading states and error conditions gracefully\n * - Provides responsive design with slide-out functionality\n *\n * Data flow:\n * 1. Initial load: Fetch all categories with position counts\n * 2. User stats: Load from localStorage with defaults\n * 3. Category expansion: Lazy load chapters on demand\n * 4. Navigation: Direct links to training positions\n *\n * @example\n * ```tsx\n * // Basic usage in layout\n * <AdvancedEndgameMenu\n *   isOpen={menuOpen}\n *   onClose={() => setMenuOpen(false)}\n * />\n *\n * // With current position highlighting\n * <AdvancedEndgameMenu\n *   isOpen={true}\n *   onClose={handleClose}\n *   currentPositionId={5}\n * />\n * ```\n *\n * @param {AdvancedEndgameMenuProps} props - Navigation menu configuration\n * @returns {JSX.Element} Rendered navigation menu with categories and stats\n */\nexport const AdvancedEndgameMenu: React.FC<AdvancedEndgameMenuProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const dependencies = getStoreDependencies();\n  const positionService = dependencies?.positionService;\n  const [categories, setCategories] = useState<CategoryWithDetails[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [userStats, setUserStats] = useState<UserStats>({\n    rating: 1123,\n    totalPlayed: 45,\n    successRate: 73,\n  });\n  const [totalPositions, setTotalPositions] = useState(0);\n\n  // Load categories and user stats\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Load user stats from localStorage\n        const savedStats = localStorage.getItem(\"endgame-user-stats\");\n        if (savedStats) {\n          setUserStats(JSON.parse(savedStats));\n        }\n\n        // Skip loading categories if service not available (SSR/build)\n        if (!positionService) {\n          setIsLoading(false);\n          return;\n        }\n\n        // Fetch categories\n        const baseCategories = await positionService.getCategories();\n\n        // Fetch position counts in parallel\n        const categoriesWithCounts = await Promise.all(\n          baseCategories.map(async (cat) => {\n            try {\n              const count = await positionService.getPositionCountByCategory(\n                cat.id,\n              );\n              return {\n                ...cat,\n                positionCount: count,\n                isExpanded: false,\n              } as CategoryWithDetails;\n            } catch (err) {\n              logger.error(`Failed to get count for category ${cat.id}`, err);\n              return {\n                ...cat,\n                positionCount: null,\n                isExpanded: false,\n              } as CategoryWithDetails;\n            }\n          }),\n        );\n\n        setCategories(categoriesWithCounts);\n\n        // Calculate total positions\n        const total = categoriesWithCounts.reduce(\n          (sum, cat) => sum + (cat.positionCount || 0),\n          0,\n        );\n        setTotalPositions(total);\n\n        setError(null);\n      } catch (err) {\n        logger.error(\"Failed to load menu data\", err);\n        setError(\"Menü konnte nicht geladen werden\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (isOpen) {\n      loadData();\n    }\n  }, [isOpen, positionService]);\n\n  const toggleCategory = async (categoryId: string) => {\n    const categoryIndex = categories.findIndex((c) => c.id === categoryId);\n    if (categoryIndex === -1) return;\n\n    const category = categories[categoryIndex];\n\n    // Toggle expansion state\n    if (category.isExpanded) {\n      setCategories((prev) =>\n        prev.map((c) =>\n          c.id === categoryId ? { ...c, isExpanded: false } : c,\n        ),\n      );\n      return;\n    }\n\n    // Expand and load chapters if not already loaded\n    if (!category.chapters) {\n      setCategories((prev) =>\n        prev.map((c) =>\n          c.id === categoryId\n            ? { ...c, isLoadingChapters: true, isExpanded: true }\n            : c,\n        ),\n      );\n\n      try {\n        // Check if service is available before loading chapters\n        if (!positionService) {\n          throw new Error(\"Position service not available\");\n        }\n        const chapters =\n          await positionService.getChaptersByCategory(categoryId);\n        setCategories((prev) =>\n          prev.map((c) =>\n            c.id === categoryId\n              ? { ...c, chapters, isLoadingChapters: false }\n              : c,\n          ),\n        );\n      } catch (err) {\n        logger.error(`Failed to load chapters for category ${categoryId}`, err);\n        setCategories((prev) =>\n          prev.map((c) =>\n            c.id === categoryId\n              ? { ...c, isLoadingChapters: false, isExpanded: false }\n              : c,\n          ),\n        );\n      }\n    } else {\n      // Just expand if chapters already loaded\n      setCategories((prev) =>\n        prev.map((c) => (c.id === categoryId ? { ...c, isExpanded: true } : c)),\n      );\n    }\n  };\n\n  const getCompletedPositions = () =>\n    Math.floor(totalPositions * (userStats.successRate / 100));\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\n        onClick={onClose}\n      />\n\n      {/* Menu Sidebar */}\n      <div\n        className={`\n        fixed left-0 top-0 h-full w-[22rem] bg-gray-900 text-white z-50 transform transition-transform duration-300 ease-in-out\n        ${isOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n        lg:translate-x-0 lg:static lg:z-auto\n      `}\n      >\n        {/* Header */}\n        <div className=\"p-4 border-b border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-bold\">Endgame Training</h2>\n            <button\n              onClick={onClose}\n              className=\"lg:hidden p-2 hover:bg-gray-800 rounded\"\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n\n        {/* Settings Icon */}\n        <div className=\"p-4 border-b border-gray-700\">\n          <button className=\"flex items-center gap-2 w-full p-2 hover:bg-gray-800 rounded text-gray-300\">\n            <span className=\"text-lg\">⚙️</span>\n            <span className=\"text-sm\">Settings</span>\n          </button>\n        </div>\n\n        {/* Menu Content */}\n        <div className=\"flex-1 overflow-y-auto\">\n          {/* All (rated) */}\n          <div className=\"p-4\">\n            <Link href=\"/dashboard\">\n              <div className=\"flex items-center gap-3 p-3 bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors\">\n                <span className=\"text-lg\">🎯</span>\n                <span className=\"font-medium\">All (rated)</span>\n              </div>\n            </Link>\n          </div>\n\n          {/* Loading State */}\n          {isLoading && (\n            <div className=\"p-4 text-center text-gray-400\">\n              <div className=\"animate-pulse\">\n                <div className=\"h-4 bg-gray-700 rounded mb-2\"></div>\n                <div className=\"h-4 bg-gray-700 rounded w-3/4\"></div>\n              </div>\n            </div>\n          )}\n\n          {/* Error State */}\n          {error && <div className=\"p-4 text-center text-red-400\">{error}</div>}\n\n          {/* Categories */}\n          {!isLoading &&\n            !error &&\n            categories.map((category) => (\n              <div key={category.id}>\n                {/* Category Header */}\n                <button\n                  onClick={() => toggleCategory(category.id)}\n                  className=\"w-full flex items-center justify-between p-4 hover:bg-gray-800 transition-colors text-left\"\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"text-lg\">{category.icon}</span>\n                    <span className=\"font-medium\">{category.name}</span>\n                    {category.positionCount !== null && (\n                      <span className=\"text-xs text-gray-400\">\n                        ({category.positionCount})\n                      </span>\n                    )}\n                  </div>\n                  <span\n                    className={`transform transition-transform ${\n                      category.isExpanded ? \"rotate-90\" : \"\"\n                    }`}\n                  >\n                    ▶\n                  </span>\n                </button>\n\n                {/* Chapters - Lazy Loaded */}\n                {category.isExpanded && (\n                  <div className=\"bg-gray-800\">\n                    {/* Loading chapters */}\n                    {category.isLoadingChapters && (\n                      <div className=\"px-8 py-3 text-sm text-gray-400\">\n                        <div className=\"animate-pulse\">Lade Kapitel...</div>\n                      </div>\n                    )}\n\n                    {/* Chapters */}\n                    {!category.isLoadingChapters && category.chapters && (\n                      <>\n                        {/* All positions in category */}\n                        <div className=\"px-8 py-2\">\n                          <Link href={`/train/1?category=${category.id}`}>\n                            <div className=\"p-2 hover:bg-gray-700 rounded text-sm text-gray-300\">\n                              Alle Positionen\n                            </div>\n                          </Link>\n                        </div>\n\n                        {/* Individual chapters */}\n                        {category.chapters.map((chapter) => (\n                          <div key={chapter.id} className=\"px-8 py-1\">\n                            <Link href={`/train/1?chapter=${chapter.id}`}>\n                              <div className=\"p-2 hover:bg-gray-700 rounded text-sm text-gray-300 flex items-center gap-2\">\n                                <span className=\"text-xs\">🎯</span>\n                                <span>{chapter.name}</span>\n                                <span className=\"ml-auto text-xs text-gray-500\">\n                                  {chapter.totalLessons}\n                                </span>\n                              </div>\n                            </Link>\n                          </div>\n                        ))}\n                      </>\n                    )}\n\n                    {/* No chapters message */}\n                    {!category.isLoadingChapters &&\n                      category.chapters &&\n                      category.chapters.length === 0 && (\n                        <div className=\"px-8 py-3 text-sm text-gray-500\">\n                          Keine Kapitel verfügbar\n                        </div>\n                      )}\n                  </div>\n                )}\n              </div>\n            ))}\n\n          {/* Future Categories (placeholder) */}\n          {[\"Queen endgames\", \"Knight endgames\", \"Bishop endgames\"].map(\n            (name) => (\n              <button\n                key={name}\n                className=\"w-full flex items-center justify-between p-4 hover:bg-gray-800 transition-colors text-left text-gray-500\"\n                disabled\n              >\n                <div className=\"flex items-center gap-3\">\n                  <span className=\"text-lg\">\n                    {name.includes(\"Queen\")\n                      ? \"♛\"\n                      : name.includes(\"Knight\")\n                        ? \"♞\"\n                        : \"♝\"}\n                  </span>\n                  <span className=\"font-medium\">{name}</span>\n                </div>\n                <span>▶</span>\n              </button>\n            ),\n          )}\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-700 p-4\">\n          <div className=\"mb-3 text-xs text-gray-400\">\n            <div>Total Positions: {totalPositions}</div>\n            <div>Completed: {getCompletedPositions()}</div>\n          </div>\n          <Link href=\"/profile\">\n            <div className=\"flex items-center justify-between p-3 hover:bg-gray-800 rounded transition-colors\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-8 h-8 bg-gray-600 rounded-full flex items-center justify-center\">\n                  <span className=\"text-sm\">👤</span>\n                </div>\n                <div>\n                  <div className=\"text-sm font-medium\">D.</div>\n                  <div className=\"text-xs text-gray-400\">\n                    Rating: {userStats.rating}\n                  </div>\n                </div>\n              </div>\n              <span>▶</span>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdvancedEndgameMenu;\n"],"names":["AdvancedEndgameMenu","logger","getLogger","setContext","isOpen","onClose","dependencies","getStoreDependencies","positionService","categories","setCategories","useState","isLoading","setIsLoading","error","setError","userStats","setUserStats","rating","totalPlayed","successRate","totalPositions","setTotalPositions","useEffect","loadData","savedStats","localStorage","getItem","JSON","parse","baseCategories","getCategories","categoriesWithCounts","Promise","all","map","cat","count","getPositionCountByCategory","id","positionCount","isExpanded","err","total","reduce","sum","toggleCategory","categoryId","categoryIndex","findIndex","c","category","prev","chapters","isLoadingChapters","Error","getChaptersByCategory","getCompletedPositions","Math","floor","div","className","onClick","h2","button","span","Link","href","icon","name","chapter","totalLessons","length","disabled","includes"],"mappings":"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"}