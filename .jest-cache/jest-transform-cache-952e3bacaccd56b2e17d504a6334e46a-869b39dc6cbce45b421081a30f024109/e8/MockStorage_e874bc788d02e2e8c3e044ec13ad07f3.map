{"version":3,"sources":["/home/thehu/coolProjects/EndgameTrainer-firebase-testing/src/tests/utils/MockStorage.ts"],"sourcesContent":["/**\n * MockStorage Implementation\n * Jest-compatible mock that implements Storage interface with realistic behavior\n */\n\nexport class MockStorage implements Storage {\n  private store: Record<string, string> = {};\n\n  // Public Jest mocks for spying\n  public getItem = jest.fn((key: string): string | null => {\n    return this.store[key] || null;\n  });\n\n  public setItem = jest.fn((key: string, value: string): void => {\n    this.store[key] = String(value); // Ensure value is a string, like in real localStorage\n  });\n\n  public removeItem = jest.fn((key: string): void => {\n    delete this.store[key];\n  });\n\n  public clear = jest.fn((): void => {\n    this.store = {};\n  });\n\n  public get length(): number {\n    return Object.keys(this.store).length;\n  }\n\n  public key = jest.fn((index: number): string | null => {\n    const keys = Object.keys(this.store);\n    return keys[index] || null;\n  });\n\n  // Helper to pre-populate storage for tests\n  public seed(data: Record<string, string>) {\n    this.store = { ...data };\n    // Reset call counts when seeding\n    this.getItem.mockClear();\n    this.setItem.mockClear();\n    this.removeItem.mockClear();\n    this.clear.mockClear();\n    this.key.mockClear();\n  }\n\n  // Helper to get current store state (for debugging)\n  public getStore(): Record<string, string> {\n    return { ...this.store };\n  }\n\n  // Helper to check if key exists\n  public hasKey(key: string): boolean {\n    return key in this.store;\n  }\n}\n"],"names":["MockStorage","length","Object","keys","store","seed","data","getItem","mockClear","setItem","removeItem","clear","key","getStore","hasKey","jest","fn","value","String","index"],"mappings":"AAAA;;;CAGC;;;;+BAEYA;;;eAAAA;;;;;;;;;;;;;;;;AAAN,MAAMA;IAoBX,IAAWC,SAAiB;QAC1B,OAAOC,OAAOC,IAAI,CAAC,IAAI,CAACC,KAAK,EAAEH,MAAM;IACvC;IAOA,2CAA2C;IACpCI,KAAKC,IAA4B,EAAE;QACxC,IAAI,CAACF,KAAK,GAAG;YAAE,GAAGE,IAAI;QAAC;QACvB,iCAAiC;QACjC,IAAI,CAACC,OAAO,CAACC,SAAS;QACtB,IAAI,CAACC,OAAO,CAACD,SAAS;QACtB,IAAI,CAACE,UAAU,CAACF,SAAS;QACzB,IAAI,CAACG,KAAK,CAACH,SAAS;QACpB,IAAI,CAACI,GAAG,CAACJ,SAAS;IACpB;IAEA,oDAAoD;IAC7CK,WAAmC;QACxC,OAAO;YAAE,GAAG,IAAI,CAACT,KAAK;QAAC;IACzB;IAEA,gCAAgC;IACzBU,OAAOF,GAAW,EAAW;QAClC,OAAOA,OAAO,IAAI,CAACR,KAAK;IAC1B;;QA/CA,uBAAQA,SAAgC,CAAC;QAEzC,+BAA+B;QAC/B,uBAAOG,WAAUQ,KAAKC,EAAE,CAAC,CAACJ;YACxB,OAAO,IAAI,CAACR,KAAK,CAACQ,IAAI,IAAI;QAC5B;QAEA,uBAAOH,WAAUM,KAAKC,EAAE,CAAC,CAACJ,KAAaK;YACrC,IAAI,CAACb,KAAK,CAACQ,IAAI,GAAGM,OAAOD,QAAQ,sDAAsD;QACzF;QAEA,uBAAOP,cAAaK,KAAKC,EAAE,CAAC,CAACJ;YAC3B,OAAO,IAAI,CAACR,KAAK,CAACQ,IAAI;QACxB;QAEA,uBAAOD,SAAQI,KAAKC,EAAE,CAAC;YACrB,IAAI,CAACZ,KAAK,GAAG,CAAC;QAChB;QAMA,uBAAOQ,OAAMG,KAAKC,EAAE,CAAC,CAACG;YACpB,MAAMhB,OAAOD,OAAOC,IAAI,CAAC,IAAI,CAACC,KAAK;YACnC,OAAOD,IAAI,CAACgB,MAAM,IAAI;QACxB;;AAsBF"}