{
  "config": {
    "configFile": "/home/thehu/coolProjects/EndgameTrainer/config/testing/playwright.config.ts",
    "rootDir": "/home/thehu/coolProjects/EndgameTrainer/src/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {},
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "open": true
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/thehu/coolProjects/EndgameTrainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/thehu/coolProjects/EndgameTrainer/src/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/thehu/coolProjects/EndgameTrainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "firebase",
        "name": "firebase",
        "testDir": "/home/thehu/coolProjects/EndgameTrainer/src/tests/e2e/firebase",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.54.2",
    "workers": 12,
    "webServer": {
      "command": "npm run dev:e2e",
      "url": "http://127.0.0.1:3009/simple-chess-test",
      "timeout": 60000,
      "reuseExistingServer": true,
      "env": {
        "NEXT_PUBLIC_IS_E2E_TEST": "true"
      }
    }
  },
  "suites": [],
  "errors": [
    {
      "message": "TypeError: Duplicate declaration \"makeOpponentMove\"\n  39 |  * Helper function to make an opponent move via direct API (bypasses validation)\n  40 |  */\n> 41 | async function makeOpponentMove(page: any, move: string): Promise<void> {\n     |                ^^^^^^^^^^^^^^^^\n  42 |   console.log(`ðŸ¤– Opponent direct move: ${move}`);\n  43 |   \n  44 |   // Use direct API and then fix turn state",
      "stack": "TypeError: Duplicate declaration \"makeOpponentMove\"\n  39 |  * Helper function to make an opponent move via direct API (bypasses validation)\n  40 |  */\n> 41 | async function makeOpponentMove(page: any, move: string): Promise<void> {\n     |                ^^^^^^^^^^^^^^^^\n  42 |   console.log(`ðŸ¤– Opponent direct move: ${move}`);\n  43 |   \n  44 |   // Use direct API and then fix turn state"
    },
    {
      "message": "Error: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "stack": "Error: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments."
    }
  ],
  "stats": {
    "startTime": "2025-08-20T19:03:00.790Z",
    "duration": 6607.886,
    "expected": 0,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 0
  }
}